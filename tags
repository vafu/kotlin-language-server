!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
#content	shared/build/reports/tests/test/css/base-style.css	/^#content {$/;"	i
#content h1	shared/build/reports/tests/test/css/base-style.css	/^#content h1 {$/;"	s
#duration	shared/build/reports/tests/test/css/style.css	/^#duration {$/;"	i
#footer	shared/build/reports/tests/test/css/base-style.css	/^#footer {$/;"	i
#footer	shared/build/reports/tests/test/css/base-style.css	/^#footer, #footer a {$/;"	i
#footer a	shared/build/reports/tests/test/css/base-style.css	/^#footer, #footer a {$/;"	s
#label-for-line-wrapping-toggle	shared/build/reports/tests/test/css/base-style.css	/^#label-for-line-wrapping-toggle {$/;"	i
#line-wrapping-toggle	shared/build/reports/tests/test/css/base-style.css	/^#line-wrapping-toggle {$/;"	i
#successRate	shared/build/reports/tests/test/css/style.css	/^#successRate {$/;"	i
#successRate	shared/build/reports/tests/test/css/style.css	/^#successRate, .summaryGroup {$/;"	i
#successRate .percent	shared/build/reports/tests/test/css/style.css	/^#successRate .percent {$/;"	c
#successRate.failures	shared/build/reports/tests/test/css/style.css	/^div.failures, #successRate.failures {$/;"	c
#successRate.success	shared/build/reports/tests/test/css/style.css	/^div.success, #successRate.success {$/;"	c
#summary	shared/build/reports/tests/test/css/style.css	/^#summary {$/;"	i
#summary table	shared/build/reports/tests/test/css/style.css	/^#summary table {$/;"	s
#summary td	shared/build/reports/tests/test/css/style.css	/^#summary td {$/;"	s
-2004045824	server/build/install/server/licenseReport.html	/^      <a name='-2004045824' \/>$/;"	a
-2004045824	server/src/main/dist/licenseReport.html	/^      <a name='-2004045824' \/>$/;"	a
.breadcrumbs	shared/build/reports/tests/test/css/style.css	/^.breadcrumbs, .breadcrumbs a {$/;"	c
.breadcrumbs a	shared/build/reports/tests/test/css/style.css	/^.breadcrumbs, .breadcrumbs a {$/;"	s
.counter	shared/build/reports/tests/test/css/style.css	/^.counter, .percent {$/;"	c
.failures	shared/build/reports/tests/test/css/style.css	/^.failures, .failures a {$/;"	c
.failures a	shared/build/reports/tests/test/css/style.css	/^.failures, .failures a {$/;"	s
.infoBox	shared/build/reports/tests/test/css/style.css	/^.infoBox {$/;"	c
.infoBox p	shared/build/reports/tests/test/css/style.css	/^.infoBox p {$/;"	s
.percent	shared/build/reports/tests/test/css/style.css	/^.counter, .percent {$/;"	c
.skipped	shared/build/reports/tests/test/css/style.css	/^.skipped, .skipped a {$/;"	c
.skipped a	shared/build/reports/tests/test/css/style.css	/^.skipped, .skipped a {$/;"	s
.success	shared/build/reports/tests/test/css/style.css	/^.success, .success a {$/;"	c
.success a	shared/build/reports/tests/test/css/style.css	/^.success, .success a {$/;"	s
.summaryGroup	shared/build/reports/tests/test/css/style.css	/^#successRate, .summaryGroup {$/;"	c
0	.vscode/launch.json	/^        {$/;"	o	array:configurations
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.class-declaration.captures.3.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.comment-javadoc.patterns.0.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.function-call.captures.2.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.function-declaration.captures.2.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.type-alias.captures.3.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.type-annotation.captures.0.patterns
0	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.variable-declaration.captures.2.patterns
0	grammars/Kotlin.tmLanguage.json	/^				"0": {$/;"	o	object:repository.type-annotation.captures
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.annotation-site-list.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.annotation-site.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.character.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.comment-javadoc.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.comments.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.import.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.keywords.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.package.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string-escape-bracketed.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string-multiline.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string.patterns
0	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.type-parameter.patterns
0	grammars/Kotlin.tmLanguage.json	/^		"kt",$/;"	s	array:fileTypes
0	grammars/Kotlin.tmLanguage.json	/^		{$/;"	o	array:patterns
0	grammars/codeblock.json	/^				{$/;"	o	array:repository.kotlin-code-block.patterns
0	grammars/codeblock.json	/^		{$/;"	o	array:patterns
0	grammars/kotlin.configuration.json	/^		"blockComment": [ "\/*", "*\/" ]$/;"	s	array:comments.blockComment
0	grammars/kotlin.configuration.json	/^		["(", ")"],$/;"	s	array:brackets.2
0	grammars/kotlin.configuration.json	/^		["<", ">"]$/;"	s	array:brackets.3
0	grammars/kotlin.configuration.json	/^		["[", "]"],$/;"	s	array:brackets.1
0	grammars/kotlin.configuration.json	/^		["{", "}"],$/;"	a	array:brackets
0	grammars/kotlin.configuration.json	/^		["{", "}"],$/;"	s	array:brackets.0
0	grammars/kotlin.configuration.json	/^	   { "open": "\/*", "close": " *\/", "notIn": ["string"] }$/;"	s	array:autoClosingPairs.5.notIn
0	grammars/kotlin.configuration.json	/^       ["'", "'"],$/;"	s	array:surroundingPairs.4
0	grammars/kotlin.configuration.json	/^       ["(", ")"],$/;"	s	array:surroundingPairs.2
0	grammars/kotlin.configuration.json	/^       ["<", ">"],$/;"	s	array:surroundingPairs.3
0	grammars/kotlin.configuration.json	/^       ["[", "]"],$/;"	s	array:surroundingPairs.1
0	grammars/kotlin.configuration.json	/^       ["\\"", "\\""]$/;"	s	array:surroundingPairs.5
0	grammars/kotlin.configuration.json	/^       ["{", "}"],$/;"	a	array:surroundingPairs
0	grammars/kotlin.configuration.json	/^       ["{", "}"],$/;"	s	array:surroundingPairs.0
0	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	s	array:autoClosingPairs.3.notIn
0	grammars/kotlin.configuration.json	/^       { "open": "\\"", "close": "\\"", "notIn": ["string"] },$/;"	s	array:autoClosingPairs.4.notIn
0	grammars/kotlin.configuration.json	/^       { "open": "{", "close": "}" },$/;"	o	array:autoClosingPairs
1	.vscode/launch.json	/^        {$/;"	o	array:configurations
1	grammars/Kotlin.tmLanguage.json	/^								"1": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.1.captures
1	grammars/Kotlin.tmLanguage.json	/^								"1": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.2.captures
1	grammars/Kotlin.tmLanguage.json	/^								"1": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.3.captures
1	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.comment-javadoc.patterns.0.patterns
1	grammars/Kotlin.tmLanguage.json	/^				"1": "punctuation.definition.template-expression.begin"$/;"	s	object:repository.string-escape-bracketed.beginCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": "punctuation.definition.template-expression.begin"$/;"	s	object:repository.string-escape-bracketed.endCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.annotation-site-list.beginCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.annotation-site.beginCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.class-declaration.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.function-call.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.function-declaration.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.import.beginCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.key.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.method-reference.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.object-declaration.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.package.beginCaptures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.type-alias.captures
1	grammars/Kotlin.tmLanguage.json	/^				"1": {$/;"	o	object:repository.variable-declaration.captures
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.comments.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.import.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.keywords.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string-multiline.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string.patterns
1	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.type-parameter.patterns
1	grammars/Kotlin.tmLanguage.json	/^		"kts"$/;"	s	array:fileTypes
1	grammars/Kotlin.tmLanguage.json	/^		{$/;"	o	array:patterns
1	grammars/kotlin.configuration.json	/^		"blockComment": [ "\/*", "*\/" ]$/;"	s	array:comments.blockComment
1	grammars/kotlin.configuration.json	/^		["(", ")"],$/;"	s	array:brackets.2
1	grammars/kotlin.configuration.json	/^		["<", ">"]$/;"	s	array:brackets.3
1	grammars/kotlin.configuration.json	/^		["[", "]"],$/;"	a	array:brackets
1	grammars/kotlin.configuration.json	/^		["[", "]"],$/;"	s	array:brackets.1
1	grammars/kotlin.configuration.json	/^		["{", "}"],$/;"	s	array:brackets.0
1	grammars/kotlin.configuration.json	/^       ["'", "'"],$/;"	s	array:surroundingPairs.4
1	grammars/kotlin.configuration.json	/^       ["(", ")"],$/;"	s	array:surroundingPairs.2
1	grammars/kotlin.configuration.json	/^       ["<", ">"],$/;"	s	array:surroundingPairs.3
1	grammars/kotlin.configuration.json	/^       ["[", "]"],$/;"	a	array:surroundingPairs
1	grammars/kotlin.configuration.json	/^       ["[", "]"],$/;"	s	array:surroundingPairs.1
1	grammars/kotlin.configuration.json	/^       ["\\"", "\\""]$/;"	s	array:surroundingPairs.5
1	grammars/kotlin.configuration.json	/^       ["{", "}"],$/;"	s	array:surroundingPairs.0
1	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	s	array:autoClosingPairs.3.notIn
1	grammars/kotlin.configuration.json	/^       { "open": "[", "close": "]" },$/;"	o	array:autoClosingPairs
10	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
11	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
12	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
1288284111	server/build/install/server/licenseReport.html	/^      <a name='1288284111' \/>$/;"	a
1288284111	server/src/main/dist/licenseReport.html	/^      <a name='1288284111' \/>$/;"	a
13	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
14	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
15	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
16	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
17	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
18	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
19	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
2	.vscode/launch.json	/^        {$/;"	o	array:configurations
2	grammars/Kotlin.tmLanguage.json	/^								"2": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.1.captures
2	grammars/Kotlin.tmLanguage.json	/^								"2": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.2.captures
2	grammars/Kotlin.tmLanguage.json	/^								"2": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.3.captures
2	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.comment-javadoc.patterns.0.patterns
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.class-declaration.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.function-call.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.function-declaration.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.key.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.object-declaration.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.type-alias.captures
2	grammars/Kotlin.tmLanguage.json	/^				"2": {$/;"	o	object:repository.variable-declaration.captures
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.comments.patterns
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.import.patterns
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.keywords.patterns
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string-multiline.patterns
2	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.string.patterns
2	grammars/Kotlin.tmLanguage.json	/^		{$/;"	o	array:patterns
2	grammars/kotlin.configuration.json	/^		["(", ")"],$/;"	a	array:brackets
2	grammars/kotlin.configuration.json	/^       ["(", ")"],$/;"	a	array:surroundingPairs
2	grammars/kotlin.configuration.json	/^       { "open": "(", "close": ")" },$/;"	o	array:autoClosingPairs
20	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
21	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
22	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
23	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
24	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
25	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
3	.vscode/launch.json	/^        {$/;"	o	array:configurations
3	grammars/Kotlin.tmLanguage.json	/^								"3": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.3.captures
3	grammars/Kotlin.tmLanguage.json	/^						{$/;"	o	array:repository.comment-javadoc.patterns.0.patterns
3	grammars/Kotlin.tmLanguage.json	/^				"3": {$/;"	o	object:repository.class-declaration.captures
3	grammars/Kotlin.tmLanguage.json	/^				"3": {$/;"	o	object:repository.type-alias.captures
3	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
3	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.keywords.patterns
3	grammars/kotlin.configuration.json	/^		["<", ">"]$/;"	a	array:brackets
3	grammars/kotlin.configuration.json	/^       ["<", ">"],$/;"	a	array:surroundingPairs
3	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	o	array:autoClosingPairs
4	grammars/Kotlin.tmLanguage.json	/^				"4": {$/;"	o	object:repository.function-declaration.captures
4	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
4	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.keywords.patterns
4	grammars/kotlin.configuration.json	/^       ["'", "'"],$/;"	a	array:surroundingPairs
4	grammars/kotlin.configuration.json	/^       { "open": "\\"", "close": "\\"", "notIn": ["string"] },$/;"	o	array:autoClosingPairs
5	grammars/Kotlin.tmLanguage.json	/^				"5": {$/;"	o	object:repository.function-declaration.captures
5	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
5	grammars/kotlin.configuration.json	/^	   { "open": "\/*", "close": " *\/", "notIn": ["string"] }$/;"	o	array:autoClosingPairs
5	grammars/kotlin.configuration.json	/^       ["\\"", "\\""]$/;"	a	array:surroundingPairs
6	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
7	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
8	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
9	grammars/Kotlin.tmLanguage.json	/^				{$/;"	o	array:repository.code.patterns
A	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class A() : BodyTag("a") {$/;"	c
A	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class A() : BodyTag("a") {$/;"	c
A dynamic link library (DLL) initialization routine failed / The module was compiled against a different Node.js version using `NODE_MODULE_VERSION` X, but requires `NODE_MODULE_VERSION` Y	TROUBLESHOOTING.md	/^### A dynamic link library (DLL) initialization routine failed \/ The module was compiled agains/;"	S
ALL_COMMANDS	server/bin/main/org/javacs/kt/commands/Commands.kt	/^val ALL_COMMANDS = listOf($/;"	C
ALL_COMMANDS	server/src/main/kotlin/org/javacs/kt/commands/Commands.kt	/^val ALL_COMMANDS = listOf($/;"	C
APP_BASE_NAME	gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_BASE_NAME	server/bin/test/additionalWorkspace/gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_BASE_NAME	server/build/install/server/bin/kotlin-language-server.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_BASE_NAME	server/build/scripts/kotlin-language-server.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_BASE_NAME	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_HOME	gradlew.bat	/^for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi$/;"	v
APP_HOME	gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
APP_HOME	server/bin/test/additionalWorkspace/gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
APP_HOME	server/build/install/server/bin/kotlin-language-server.bat	/^for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi$/;"	v
APP_HOME	server/build/install/server/bin/kotlin-language-server.bat	/^set APP_HOME=%DIRNAME%..$/;"	v
APP_HOME	server/build/scripts/kotlin-language-server.bat	/^for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi$/;"	v
APP_HOME	server/build/scripts/kotlin-language-server.bat	/^set APP_HOME=%DIRNAME%..$/;"	v
APP_HOME	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
AdditionalWorkspaceTest	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^class AdditionalWorkspaceTest : LanguageServerTestFixture("mainWorkspace") {$/;"	c
AdditionalWorkspaceTest	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^class AdditionalWorkspaceTest : LanguageServerTestFixture("mainWorkspace") {$/;"	c
AnObject	server/bin/test/hover/ObjectReference.kt	/^private object AnObject {$/;"	o
AnObject	server/src/test/resources/hover/ObjectReference.kt	/^private object AnObject {$/;"	o
Args	server/bin/main/org/javacs/kt/Main.kt	/^class Args {$/;"	c
Args	server/src/main/kotlin/org/javacs/kt/Main.kt	/^class Args {$/;"	c
Artifact	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^data class Artifact($/;"	d
Artifact	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^data class Artifact($/;"	d
AsyncExecutor	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^class AsyncExecutor {$/;"	c
AsyncExecutor	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^class AsyncExecutor {$/;"	c
Atom	EDITORS.md	/^## Atom$/;"	s
Atom: Failed to load `ide-kotlin` package grammar	TROUBLESHOOTING.md	/^## Atom: Failed to load `ide-kotlin` package grammar$/;"	s
Authors	README.md	/^## Authors$/;"	s
Autocomplete	README.md	/^### Autocomplete$/;"	S
B	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class B() : BodyTag("b")$/;"	c
B	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class B() : BodyTag("b")$/;"	c
BackquotedFunctionTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class BackquotedFunctionTest : SingleFileTestFixture("completions", "BackquotedFunction.kt") {$/;"	c
BackquotedFunctionTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class BackquotedFunctionTest : SingleFileTestFixture("completions", "BackquotedFunction.kt") {$/;"	c
BackupClassPathResolver	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^object BackupClassPathResolver : ClassPathResolver {$/;"	o
BackupClassPathResolver	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^object BackupClassPathResolver : ClassPathResolver {$/;"	o
BigFile	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^object BigFile {$/;"	o
BigFile	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^object BigFile {$/;"	o
Body	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Body() : BodyTag("body")$/;"	c
Body	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Body() : BodyTag("body")$/;"	c
BodyTag	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    abstract class BodyTag(name: String) : TagWithText(name) {$/;"	c
BodyTag	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    abstract class BodyTag(name: String) : TagWithText(name) {$/;"	c
Bugs	TODO.md	/^## Bugs$/;"	s
Building	BUILDING.md	/^# Building$/;"	c
Building	BUILDING.md	/^### Building$/;"	S
C	server/bin/test/definition/GoToProperties.kt	/^class C {$/;"	c
C	server/src/test/resources/definition/GoToProperties.kt	/^class C {$/;"	c
CLASSPATH	gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CLASSPATH	server/bin/test/additionalWorkspace/gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CLASSPATH	server/build/install/server/bin/kotlin-language-server.bat	/^set CLASSPATH=%APP_HOME%\\lib\\server-0.7.0.jar;%APP_HOME%\\lib\\kotlin-stdlib-jdk8-1.4.0.jar;%A/;"	v
CLASSPATH	server/build/scripts/kotlin-language-server.bat	/^set CLASSPATH=%APP_HOME%\\lib\\server-0.7.0.jar;%APP_HOME%\\lib\\kotlin-stdlib-jdk8-1.4.0.jar;%A/;"	v
CLASSPATH	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CMD_LINE_ARGS	gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
CMD_LINE_ARGS	server/bin/test/additionalWorkspace/gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	server/bin/test/additionalWorkspace/gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
CMD_LINE_ARGS	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
Callee	server/bin/test/completions/FillEmptyBody.kt	/^private object Callee {$/;"	o
Callee	server/src/test/resources/completions/FillEmptyBody.kt	/^private object Callee {$/;"	o
Caller	server/bin/test/completions/FillEmptyBody.kt	/^private object Caller {$/;"	o
Caller	server/src/test/resources/completions/FillEmptyBody.kt	/^private object Caller {$/;"	o
Change Log	CHANGELOG.md	/^# Change Log$/;"	c
ChangelogFile	scripts/utils/changelog.py	/^class ChangelogFile:$/;"	c
Class org.javacs.kt.MavenArtifactParsingTest	shared/build/reports/tests/test/classes/org.javacs.kt.MavenArtifactParsingTest.html	/^<h1>Class org.javacs.kt.MavenArtifactParsingTest<\/h1>$/;"	h
ClassPathResolver	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^interface ClassPathResolver {$/;"	i
ClassPathResolver	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^interface ClassPathResolver {$/;"	i
ClassPathTest	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^class ClassPathTest {$/;"	c
ClassPathTest	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^class ClassPathTest {$/;"	c
Classes	shared/build/reports/tests/test/index.html	/^<h2>Classes<\/h2>$/;"	i
Classes	shared/build/reports/tests/test/packages/org.javacs.kt.html	/^<h2>Classes<\/h2>$/;"	i
CodeSnippet	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^private data class CodeSnippet($/;"	d
CodeSnippet	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^private data class CodeSnippet($/;"	d
Collection	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^val Collection<ClassPathResolver>.joined get() = fold(ClassPathResolver.empty) { accum, next -> /;"	C
Collection	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^val Collection<ClassPathResolver>.joined get() = fold(ClassPathResolver.empty) { accum, next -> /;"	C
CompilationEnvironment	server/bin/main/org/javacs/kt/Compiler.kt	/^private class CompilationEnvironment($/;"	c
CompilationEnvironment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^private class CompilationEnvironment($/;"	c
CompiledFile	server/bin/main/org/javacs/kt/CompiledFile.kt	/^class CompiledFile($/;"	c
CompiledFile	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^class CompiledFile($/;"	c
CompiledFileExample	server/bin/test/compiledFile/CompiledFileExample.kt	/^private class CompiledFileExample {$/;"	c
CompiledFileExample	server/src/test/resources/compiledFile/CompiledFileExample.kt	/^private class CompiledFileExample {$/;"	c
CompiledFileTest	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^class CompiledFileTest {$/;"	c
CompiledFileTest	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^class CompiledFileTest {$/;"	c
Compiler	server/bin/main/org/javacs/kt/Compiler.kt	/^class Compiler(javaSourcePath: Set<Path>, classPath: Set<Path>, buildScriptClassPath: Set<Path> /;"	c
Compiler	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^class Compiler(javaSourcePath: Set<Path>, classPath: Set<Path>, buildScriptClassPath: Set<Path> /;"	c
CompilerClassPath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^class CompilerClassPath(private val config: CompilerConfiguration) : Closeable {$/;"	c
CompilerClassPath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^class CompilerClassPath(private val config: CompilerConfiguration) : Closeable {$/;"	c
CompilerFixtures	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^object CompilerFixtures {$/;"	o
CompilerFixtures	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^object CompilerFixtures {$/;"	o
CompilerTest	server/bin/test/org/javacs/kt/CompilerTest.kt	/^class CompilerTest {$/;"	c
CompilerTest	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^class CompilerTest {$/;"	c
CompleteStaticsTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class CompleteStaticsTest : SingleFileTestFixture("completions", "Statics.kt") {$/;"	c
CompleteStaticsTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class CompleteStaticsTest : SingleFileTestFixture("completions", "Statics.kt") {$/;"	c
Constructor	server/bin/test/signatureHelp/SignatureHelp.kt	/^private class Constructor(bar: String) {$/;"	c
Constructor	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^private class Constructor(bar: String) {$/;"	c
ConstructorTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class ConstructorTest : SingleFileTestFixture("completions", "Constructor.kt") {$/;"	c
ConstructorTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class ConstructorTest : SingleFileTestFixture("completions", "Constructor.kt") {$/;"	c
DECL_RENDERER	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^val DECL_RENDERER = DescriptorRenderer.withOptions {$/;"	C
DECL_RENDERER	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^val DECL_RENDERER = DescriptorRenderer.withOptions {$/;"	C
DEFAULT_JVM_OPTS	gradlew.bat	/^set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"$/;"	v
DEFAULT_JVM_OPTS	server/bin/test/additionalWorkspace/gradlew.bat	/^set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"$/;"	v
DEFAULT_JVM_OPTS	server/build/install/server/bin/kotlin-language-server.bat	/^set DEFAULT_JVM_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n,quiet=y/;"	v
DEFAULT_JVM_OPTS	server/build/scripts/kotlin-language-server.bat	/^set DEFAULT_JVM_OPTS=$/;"	v
DEFAULT_JVM_OPTS	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"$/;"	v
DIRNAME	gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
DIRNAME	server/bin/test/additionalWorkspace/gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	server/bin/test/additionalWorkspace/gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
DIRNAME	server/build/install/server/bin/kotlin-language-server.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	server/build/install/server/bin/kotlin-language-server.bat	/^set DIRNAME=%~dp0$/;"	v
DIRNAME	server/build/scripts/kotlin-language-server.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	server/build/scripts/kotlin-language-server.bat	/^set DIRNAME=%~dp0$/;"	v
DIRNAME	server/src/test/resources/additionalWorkspace/gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
Debouncer	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^class Debouncer($/;"	c
Debouncer	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^class Debouncer($/;"	c
DebouncerTest	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^class DebouncerTest {$/;"	c
DebouncerTest	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^class DebouncerTest {$/;"	c
DeclarationDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^private fun DeclarationDescriptor.label(): String? {$/;"	m
DeclarationDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^private fun DeclarationDescriptor.label(): String? {$/;"	m
Decompiler	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^interface Decompiler : SourceJarProvider {$/;"	i
Decompiler	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^interface Decompiler : SourceJarProvider {$/;"	i
DefinitionTest	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^class DefinitionTest : SingleFileTestFixture("definition", "GoFrom.kt") {$/;"	c
DefinitionTest	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^class DefinitionTest : SingleFileTestFixture("definition", "GoFrom.kt") {$/;"	c
Delegate	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Delegate() {$/;"	c
Delegate	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Delegate() {$/;"	c
DelegatePrintStream	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^class DelegatePrintStream(private val delegate: (String) -> Unit): PrintStream(ByteArrayOutputSt/;"	c
DelegatePrintStream	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^class DelegatePrintStream(private val delegate: (String) -> Unit): PrintStream(ByteArrayOutputSt/;"	c
Document symbols	README.md	/^### Document symbols$/;"	S
DocumentSymbols	server/bin/test/symbols/DocumentSymbols.kt	/^private class DocumentSymbols() {$/;"	c
DocumentSymbols	server/src/test/resources/symbols/DocumentSymbols.kt	/^private class DocumentSymbols() {$/;"	c
DocumentSymbolsTest	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^class DocumentSymbolsTest : LanguageServerTestFixture("symbols") {$/;"	c
DocumentSymbolsTest	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^class DocumentSymbolsTest : LanguageServerTestFixture("symbols") {$/;"	c
Door	server/bin/test/formatting/NonFormatted.kt	/^class Door$/;"	c
Door	server/src/test/resources/formatting/NonFormatted.kt	/^class Door$/;"	c
DoubleDotTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class DoubleDotTest : SingleFileTestFixture("completions", "DoubleDot.kt") {$/;"	c
DoubleDotTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class DoubleDotTest : SingleFileTestFixture("completions", "DoubleDot.kt") {$/;"	c
EDITOR	scripts/bump_version.py	/^EDITOR = os.environ.get("EDITOR", "vim") # https:\/\/stackoverflow.com\/questions\/6309587\/call/;"	v
EditCallTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class EditCallTest : SingleFileTestFixture("completions", "EditCall.kt") {$/;"	c
EditCallTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class EditCallTest : SingleFileTestFixture("completions", "EditCall.kt") {$/;"	c
EditFunctionTest	server/bin/test/org/javacs/kt/ScriptTest.kt	/^class EditFunctionTest : SingleFileTestFixture("script", "FunctionScript.kts") {$/;"	c
EditFunctionTest	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^class EditFunctionTest : SingleFileTestFixture("script", "FunctionScript.kts") {$/;"	c
Editor Integration	EDITORS.md	/^# Editor Integration$/;"	c
Element	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    interface Element {$/;"	i
Element	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    interface Element {$/;"	i
Emacs	EDITORS.md	/^## Emacs$/;"	s
EnumWithCompanionObjectTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class EnumWithCompanionObjectTest : SingleFileTestFixture("completions", "Enum.kt") {$/;"	c
EnumWithCompanionObjectTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class EnumWithCompanionObjectTest : SingleFileTestFixture("completions", "Enum.kt") {$/;"	c
Example	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Example {$/;"	c
Example	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Example {$/;"	c
ExitingInputStream	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^class ExitingInputStream(private val delegate: InputStream): InputStream() {$/;"	c
ExitingInputStream	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^class ExitingInputStream(private val delegate: InputStream): InputStream() {$/;"	c
Features	README.md	/^## Features$/;"	s
Features	TODO.md	/^## Features$/;"	s
FernflowerDecompiler	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^class FernflowerDecompiler : Decompiler {$/;"	c
FernflowerDecompiler	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^class FernflowerDecompiler : Decompiler {$/;"	c
Field	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Field($/;"	c
Field	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Field($/;"	c
FileToEdit	server/bin/test/compiler/FileToEdit.kt	/^private class FileToEdit {$/;"	c
FileToEdit	server/bin/test/org/javacs/kt/CompilerTest.kt	/^private class FileToEdit {$/;"	c
FileToEdit	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^private class FileToEdit {$/;"	c
FileToEdit	server/src/test/resources/compiler/FileToEdit.kt	/^private class FileToEdit {$/;"	c
FillEmptyBodyTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class FillEmptyBodyTest : SingleFileTestFixture("completions", "FillEmptyBody.kt") {$/;"	c
FillEmptyBodyTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class FillEmptyBodyTest : SingleFileTestFixture("completions", "FillEmptyBody.kt") {$/;"	c
Format2SpacesTest	server/bin/test/org/javacs/kt/FormattingTest.kt	/^class Format2SpacesTest : SingleFileTestFixture("formatting", "Spaces.kt") {$/;"	c
Format2SpacesTest	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^class Format2SpacesTest : SingleFileTestFixture("formatting", "Spaces.kt") {$/;"	c
FormatTabsTest	server/bin/test/org/javacs/kt/FormattingTest.kt	/^class FormatTabsTest : SingleFileTestFixture("formatting", "Spaces.kt") {$/;"	c
FormatTabsTest	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^class FormatTabsTest : SingleFileTestFixture("formatting", "Spaces.kt") {$/;"	c
FormatTest	server/bin/test/org/javacs/kt/FormattingTest.kt	/^class FormatTest : SingleFileTestFixture("formatting", "NonFormatted.kt") {$/;"	c
FormatTest	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^class FormatTest : SingleFileTestFixture("formatting", "NonFormatted.kt") {$/;"	c
FunctionScope	server/bin/test/completions/FunctionScope.kt	/^private class FunctionScope {$/;"	c
FunctionScope	server/src/test/resources/completions/FunctionScope.kt	/^private class FunctionScope {$/;"	c
FunctionScopeTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class FunctionScopeTest : SingleFileTestFixture("completions", "FunctionScope.kt") {$/;"	c
FunctionScopeTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class FunctionScopeTest : SingleFileTestFixture("completions", "FunctionScope.kt") {$/;"	c
GOOD_IDENTIFIER	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^private val GOOD_IDENTIFIER = Regex("[a-zA-Z]\\\\w*")$/;"	C
GOOD_IDENTIFIER	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^private val GOOD_IDENTIFIER = Regex("[a-zA-Z]\\\\w*")$/;"	C
GRADLE_DSL_DEPENDENCY_PATTERN	server/bin/main/org/javacs/kt/Compiler.kt	/^private val GRADLE_DSL_DEPENDENCY_PATTERN = Regex("^gradle-(?:kotlin-dsl|core).*\\\\.jar$")$/;"	C
GRADLE_DSL_DEPENDENCY_PATTERN	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^private val GRADLE_DSL_DEPENDENCY_PATTERN = Regex("^gradle-(?:kotlin-dsl|core).*\\\\.jar$")$/;"	C
Getting Started	README.md	/^## Getting Started$/;"	s
Global symbols	README.md	/^### Global symbols$/;"	S
Go-to-definition, find all references	README.md	/^### Go-to-definition, find all references$/;"	S
GoFrom	server/bin/test/definition/GoFrom.kt	/^private object GoFrom {$/;"	o
GoFrom	server/src/test/resources/definition/GoFrom.kt	/^private object GoFrom {$/;"	o
GoTo	server/bin/test/definition/GoTo.kt	/^object GoTo {$/;"	o
GoTo	server/src/test/resources/definition/GoTo.kt	/^object GoTo {$/;"	o
GoToDefinitionOfPropertiesTest	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^class GoToDefinitionOfPropertiesTest : SingleFileTestFixture("definition", "GoToProperties.kt") /;"	c
GoToDefinitionOfPropertiesTest	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^class GoToDefinitionOfPropertiesTest : SingleFileTestFixture("definition", "GoToProperties.kt") /;"	c
Gradle Tasks	BUILDING.md	/^## Gradle Tasks$/;"	s
GradleDSLScriptTest	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^class GradleDSLScriptTest : SingleFileTestFixture("kotlinDSLWorkspace", "build.gradle.kts") {$/;"	c
GradleDSLScriptTest	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^class GradleDSLScriptTest : SingleFileTestFixture("kotlinDSLWorkspace", "build.gradle.kts") {$/;"	c
Grammars	BUILDING.md	/^## Grammars$/;"	s
Grammars	grammars/README.md	/^# Grammars$/;"	c
Grammars (:grammars)	BUILDING.md	/^### Grammars (:grammars)$/;"	S
H1	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class H1() : BodyTag("h1")$/;"	c
H1	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class H1() : BodyTag("h1")$/;"	c
HTML	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class HTML() : TagWithText("html") {$/;"	c
HTML	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class HTML() : TagWithText("html") {$/;"	c
Head	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Head() : TagWithText("head") {$/;"	c
Head	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Head() : TagWithText("head") {$/;"	c
House	server/bin/test/formatting/NonFormatted.kt	/^class     House$/;"	c
House	server/bin/test/org/javacs/kt/FormattingTest.kt	/^class House {$/;"	c
House	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^class House {$/;"	c
House	server/src/test/resources/formatting/NonFormatted.kt	/^class     House$/;"	c
Hover	README.md	/^### Hover$/;"	S
HoverAcrossFilesTest	server/bin/test/org/javacs/kt/HoverTest.kt	/^class HoverAcrossFilesTest : LanguageServerTestFixture("hover") {$/;"	c
HoverAcrossFilesTest	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^class HoverAcrossFilesTest : LanguageServerTestFixture("hover") {$/;"	c
HoverFunctionReferenceTest	server/bin/test/org/javacs/kt/HoverTest.kt	/^class HoverFunctionReferenceTest : SingleFileTestFixture("hover", "FunctionReference.kt") {$/;"	c
HoverFunctionReferenceTest	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^class HoverFunctionReferenceTest : SingleFileTestFixture("hover", "FunctionReference.kt") {$/;"	c
HoverLiteralsTest	server/bin/test/org/javacs/kt/HoverTest.kt	/^class HoverLiteralsTest : SingleFileTestFixture("hover", "Literals.kt") {$/;"	c
HoverLiteralsTest	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^class HoverLiteralsTest : SingleFileTestFixture("hover", "Literals.kt") {$/;"	c
HoverObjectReferenceTest	server/bin/test/org/javacs/kt/HoverTest.kt	/^class HoverObjectReferenceTest : SingleFileTestFixture("hover", "ObjectReference.kt") {$/;"	c
HoverObjectReferenceTest	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^class HoverObjectReferenceTest : SingleFileTestFixture("hover", "ObjectReference.kt") {$/;"	c
HoverRecoverTest	server/bin/test/org/javacs/kt/HoverTest.kt	/^class HoverRecoverTest : SingleFileTestFixture("hover", "Recover.kt") {$/;"	c
HoverRecoverTest	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^class HoverRecoverTest : SingleFileTestFixture("hover", "Recover.kt") {$/;"	c
INCREMENTS	scripts/bump_version.py	/^INCREMENTS = {$/;"	v
ImportsTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class ImportsTest : SingleFileTestFixture("completions", "Imports.kt") {$/;"	c
ImportsTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class ImportsTest : SingleFileTestFixture("completions", "Imports.kt") {$/;"	c
InnerClass	server/bin/test/completions/OuterDotInner.kt	/^    class InnerClass {$/;"	c
InnerClass	server/src/test/resources/completions/OuterDotInner.kt	/^    class InnerClass {$/;"	c
InstanceMemberTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class InstanceMemberTest : SingleFileTestFixture("completions", "InstanceMember.kt") {$/;"	c
InstanceMemberTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class InstanceMemberTest : SingleFileTestFixture("completions", "InstanceMember.kt") {$/;"	c
InstanceMembersJava	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class InstanceMembersJava : SingleFileTestFixture("completions", "InstanceMembersJava.kt") {$/;"	c
InstanceMembersJava	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class InstanceMembersJava : SingleFileTestFixture("completions", "InstanceMembersJava.kt") {$/;"	c
JAVA_EXE	gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_EXE	server/bin/test/additionalWorkspace/gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	server/bin/test/additionalWorkspace/gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_EXE	server/build/install/server/bin/kotlin-language-server.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	server/build/install/server/bin/kotlin-language-server.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_EXE	server/build/scripts/kotlin-language-server.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	server/build/scripts/kotlin-language-server.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_EXE	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_HOME	gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JAVA_HOME	server/bin/test/additionalWorkspace/gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JAVA_HOME	server/build/install/server/bin/kotlin-language-server.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JAVA_HOME	server/build/scripts/kotlin-language-server.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JAVA_HOME	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JAVA_TO_KOTLIN_COMMAND	server/bin/main/org/javacs/kt/commands/Commands.kt	/^const val JAVA_TO_KOTLIN_COMMAND = "convertJavaToKotlin"$/;"	C
JAVA_TO_KOTLIN_COMMAND	server/src/main/kotlin/org/javacs/kt/commands/Commands.kt	/^const val JAVA_TO_KOTLIN_COMMAND = "convertJavaToKotlin"$/;"	C
JULRedirector	shared/bin/main/org/javacs/kt/Logger.kt	/^private class JULRedirector(private val downstream: Logger): Handler() {$/;"	c
JULRedirector	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^private class JULRedirector(private val downstream: Logger): Handler() {$/;"	c
JarClassContentProvider	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^class JarClassContentProvider($/;"	c
JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^class JarClassContentProvider($/;"	c
JavaElementConverter	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^class JavaElementConverter($/;"	c
JavaElementConverter	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^class JavaElementConverter($/;"	c
JavaGetterSetterConversionTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class JavaGetterSetterConversionTest : SingleFileTestFixture("completions", "JavaGetterSetterCon/;"	c
JavaGetterSetterConversionTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class JavaGetterSetterConversionTest : SingleFileTestFixture("completions", "JavaGetterSetterCon/;"	c
JavaJSONConverter	server/bin/test/j2k/JavaJSONConverter.kt	/^class JavaJSONConverter<T> {$/;"	c
JavaJSONConverter	server/src/test/resources/j2k/JavaJSONConverter.java	/^public class JavaJSONConverter<T> {$/;"	c
JavaJSONConverter	server/src/test/resources/j2k/JavaJSONConverter.kt	/^class JavaJSONConverter<T> {$/;"	c
JavaToKotlinTest	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^class JavaToKotlinTest : LanguageServerTestFixture("j2k") {$/;"	c
JavaToKotlinTest	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^class JavaToKotlinTest : LanguageServerTestFixture("j2k") {$/;"	c
JavaTypeConverter	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^object JavaTypeConverter : PsiTypeVisitor<String>() {$/;"	o
JavaTypeConverter	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^object JavaTypeConverter : PsiTypeVisitor<String>() {$/;"	o
KlsURI	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^data class KlsURI(val uri: URI) {$/;"	d
KlsURI	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^data class KlsURI(val uri: URI) {$/;"	d
Known Issues	TODO.md	/^## Known Issues$/;"	s
Kotlin Language Server	README.md	/^# Kotlin Language Server$/;"	c
KotlinLSException	shared/bin/main/org/javacs/kt/util/KotlinLSException.kt	/^class KotlinLSException : RuntimeException {$/;"	c
KotlinLSException	shared/src/main/kotlin/org/javacs/kt/util/KotlinLSException.kt	/^class KotlinLSException : RuntimeException {$/;"	c
KotlinLanguageServer	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^class KotlinLanguageServer : LanguageServer, LanguageClientAware, Closeable {$/;"	c
KotlinLanguageServer	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^class KotlinLanguageServer : LanguageServer, LanguageClientAware, Closeable {$/;"	c
KotlinNullableNotNullManager	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^class KotlinNullableNotNullManager(project: Project) : NullableNotNullManager(project) {$/;"	c
KotlinNullableNotNullManager	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^class KotlinNullableNotNullManager(project: Project) : NullableNotNullManager(project) {$/;"	c
KotlinProtocolExtensionService	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^class KotlinProtocolExtensionService($/;"	c
KotlinProtocolExtensionService	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^class KotlinProtocolExtensionService($/;"	c
KotlinProtocolExtensions	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^interface KotlinProtocolExtensions {$/;"	i
KotlinProtocolExtensions	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^interface KotlinProtocolExtensions {$/;"	i
KotlinTextDocumentService	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^class KotlinTextDocumentService($/;"	c
KotlinTextDocumentService	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^class KotlinTextDocumentService($/;"	c
KotlinWorkspaceService	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^class KotlinWorkspaceService($/;"	c
KotlinWorkspaceService	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^class KotlinWorkspaceService($/;"	c
LI	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class LI() : BodyTag("li")$/;"	c
LI	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class LI() : BodyTag("li")$/;"	c
LOG	shared/bin/main/org/javacs/kt/Logger.kt	/^val LOG = Logger()$/;"	C
LOG	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^val LOG = Logger()$/;"	C
Language Server	BUILDING.md	/^## Language Server$/;"	s
Language Server (:server)	BUILDING.md	/^### Language Server (:server)$/;"	S
Language Server: The tests fail with `java.lang.NoSuchMethodError`	TROUBLESHOOTING.md	/^## Language Server: The tests fail with `java.lang.NoSuchMethodError`$/;"	s
LanguageServerTestFixture	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^abstract class LanguageServerTestFixture(relativeWorkspaceRoot: String) : LanguageClient {$/;"	c
LanguageServerTestFixture	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^abstract class LanguageServerTestFixture(relativeWorkspaceRoot: String) : LanguageClient {$/;"	c
LazySample	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class LazySample {$/;"	c
LazySample	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class LazySample {$/;"	c
LintErrors	server/bin/test/lint/LintErrors.kt	/^private class LintErrors {$/;"	c
LintErrors	server/src/test/resources/lint/LintErrors.kt	/^private class LintErrors {$/;"	c
LintTest	server/bin/test/org/javacs/kt/LintTest.kt	/^class LintTest : SingleFileTestFixture("lint", "LintErrors.kt") {$/;"	c
LintTest	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^class LintTest : SingleFileTestFixture("lint", "LintErrors.kt") {$/;"	c
List	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun List<String>.buildCodeBlock(indentDelta: Int = 1, separatorNewlines: Int = 1): S/;"	m
List	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun List<String>.buildCodeBlock(indentDelta: Int = 1, separatorNewlines: Int = 1): S/;"	m
LocalArtifactDirectoryResolution	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private data class LocalArtifactDirectoryResolution(val artifactDir: Path?, val buildTool: Strin/;"	d
LocalArtifactDirectoryResolution	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private data class LocalArtifactDirectoryResolution(val artifactDir: Path?, val buildTool: Strin/;"	d
LogLevel	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private fun LogLevel.toLSPMessageType(): MessageType = when (this) {$/;"	m
LogLevel	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private fun LogLevel.toLSPMessageType(): MessageType = when (this) {$/;"	m
LogMessage	shared/bin/main/org/javacs/kt/Logger.kt	/^class LogMessage($/;"	c
LogMessage	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^class LogMessage($/;"	c
Logger	shared/bin/main/org/javacs/kt/Logger.kt	/^class Logger {$/;"	c
Logger	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^class Logger {$/;"	c
LoggingMessageCollector:	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^object LoggingMessageCollector: MessageCollector {$/;"	o
LoggingMessageCollector:	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^object LoggingMessageCollector: MessageCollector {$/;"	o
MAX_COMPLETION_ITEMS	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private const val MAX_COMPLETION_ITEMS = 50$/;"	C
MAX_COMPLETION_ITEMS	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private const val MAX_COMPLETION_ITEMS = 75$/;"	C
MIN_SORT_LENGTH	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private const val MIN_SORT_LENGTH = 3$/;"	C
Main	server/bin/test/references/ReferenceGetSetValue.kt	/^private class Main {$/;"	c
Main	server/src/test/resources/references/ReferenceGetSetValue.kt	/^private class Main {$/;"	c
MainConstructor	server/bin/test/references/ReferenceTo.kt	/^    private class MainConstructor(foo: Int)$/;"	c
MainConstructor	server/src/test/resources/references/ReferenceTo.kt	/^    private class MainConstructor(foo: Int)$/;"	c
MainWorkspaceFile	server/bin/test/mainWorkspace/MainWorkspaceFile.kt	/^private class MainWorkspaceFile {$/;"	c
MainWorkspaceFile	server/src/test/resources/mainWorkspace/MainWorkspaceFile.kt	/^private class MainWorkspaceFile {$/;"	c
MavenArtifactParsingTest	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^class MavenArtifactParsingTest {$/;"	c
MavenArtifactParsingTest	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^class MavenArtifactParsingTest {$/;"	c
Maze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Maze($/;"	c
Maze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun Maze.addIfFree(i: Int, j: Int, result: MutableList<Point>) {$/;"	m
Maze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun Maze.neighbors(i: Int, j: Int): List<Point> {$/;"	m
Maze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Maze($/;"	c
Maze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun Maze.addIfFree(i: Int, j: Int, result: MutableList<Point>) {$/;"	m
Maze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun Maze.neighbors(i: Int, j: Int): List<Point> {$/;"	m
MiddleOfFunction	server/bin/test/completions/MiddleOfFunction.kt	/^private class MiddleOfFunction {$/;"	c
MiddleOfFunction	server/src/test/resources/completions/MiddleOfFunction.kt	/^private class MiddleOfFunction {$/;"	c
MiddleOfFunctionTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class MiddleOfFunctionTest : SingleFileTestFixture("completions", "MiddleOfFunction.kt") {$/;"	c
MiddleOfFunctionTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class MiddleOfFunctionTest : SingleFileTestFixture("completions", "MiddleOfFunction.kt") {$/;"	c
Modules	README.md	/^## Modules$/;"	s
MyClass	server/bin/test/completions/Statics.kt	/^private class MyClass {$/;"	c
MyClass	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class MyClass() {}$/;"	c
MyClass	server/src/test/resources/completions/Statics.kt	/^private class MyClass {$/;"	c
MyClass	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class MyClass() {}$/;"	c
MyObject	server/bin/test/completions/Statics.kt	/^private object MyObject {$/;"	o
MyObject	server/src/test/resources/completions/Statics.kt	/^private object MyObject {$/;"	o
MyOuterClass	server/bin/test/completions/OuterDotInner.kt	/^private class MyOuterClass {$/;"	c
MyOuterClass	server/src/test/resources/completions/OuterDotInner.kt	/^private class MyOuterClass {$/;"	c
Notice for packages:	server/build/install/server/licenseReport.html	/^    <h3>Notice for packages:<\/h3>$/;"	j
Notice for packages:	server/src/main/dist/licenseReport.html	/^    <h3>Notice for packages:<\/h3>$/;"	j
NotifySourcePath	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private class NotifySourcePath(private val sp: SourcePath) {$/;"	c
NotifySourcePath	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private class NotifySourcePath(private val sp: SourcePath) {$/;"	c
O	server/bin/test/definition/GoToProperties.kt	/^object O {$/;"	o
O	server/src/test/resources/definition/GoToProperties.kt	/^object O {$/;"	o
OneFilePerformance	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^class OneFilePerformance {$/;"	c
OneFilePerformance	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^class OneFilePerformance {$/;"	c
Other Editors	EDITORS.md	/^## Other Editors$/;"	s
OtherFileSymbols	server/bin/test/symbols/OtherFileSymbols.kt	/^class OtherFileSymbols() {$/;"	c
OtherFileSymbols	server/src/test/resources/symbols/OtherFileSymbols.kt	/^class OtherFileSymbols() {$/;"	c
OuterDotInnerTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class OuterDotInnerTest : SingleFileTestFixture("completions", "OuterDotInner.kt") {$/;"	c
OuterDotInnerTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class OuterDotInnerTest : SingleFileTestFixture("completions", "OuterDotInner.kt") {$/;"	c
P	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class P() : BodyTag("p")$/;"	c
P	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class P() : BodyTag("p")$/;"	c
PROJECT_DIR	scripts/bump_version.py	/^PROJECT_DIR = Path(__file__).parent.parent$/;"	v
PROJECT_VERSION_KEY	scripts/bump_version.py	/^PROJECT_VERSION_KEY = "projectVersion"$/;"	v
Package org.javacs.kt	shared/build/reports/tests/test/packages/org.javacs.kt.html	/^<h1>Package org.javacs.kt<\/h1>$/;"	h
Packages	shared/build/reports/tests/test/index.html	/^<h2>Packages<\/h2>$/;"	i
Packaging	BUILDING.md	/^### Packaging$/;"	S
Pair	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Pair<K, V>(val first: K, val second: V) {$/;"	c
Pair	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Pair<K, V>(val first: K, val second: V) {$/;"	c
Path	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun Path.existsOrNull() =$/;"	m
Path	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun Path.resolveStartingWith(prefix: String) = Files.list(this).filter { it.fileName.toS/;"	m
Path	shared/bin/main/org/javacs/kt/util/Utils.kt	/^fun Path.replaceExtensionWith(newExtension: String): Path {$/;"	m
Path	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun Path.existsOrNull() =$/;"	m
Path	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun Path.resolveStartingWith(prefix: String) = Files.list(this).filter { it.fileName.toS/;"	m
Path	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^fun Path.replaceExtensionWith(newExtension: String): Path {$/;"	m
Point	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    data class Point(val i: Int, val j: Int)$/;"	d
Point	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    data class Point(val i: Int, val j: Int)$/;"	d
Position	server/bin/main/org/javacs/kt/position/Position.kt	/^val Position.isZero: Boolean$/;"	C
Position	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^val Position.isZero: Boolean$/;"	C
PropertiesFile	scripts/utils/properties.py	/^class PropertiesFile:$/;"	c
Protocol Extensions	README.md	/^## Protocol Extensions$/;"	s
PsiCallExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiCallExpression.translateTypeArguments(): String = "<${typeArgumentList.transl/;"	m
PsiCallExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiCallExpression.translateTypeArguments(): String = "<${typeArgumentList.transl/;"	m
PsiElement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiElement?.translate(indentDelta: Int = 0): String? = JavaElementConverter(inde/;"	m
PsiElement	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^fun PsiElement.preOrderTraversal(): Sequence<PsiElement> {$/;"	m
PsiElement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiElement?.translate(indentDelta: Int = 0): String? = JavaElementConverter(inde/;"	m
PsiElement	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^fun PsiElement.preOrderTraversal(): Sequence<PsiElement> {$/;"	m
PsiFile	server/bin/main/org/javacs/kt/position/Position.kt	/^fun PsiFile.toURIString() = toPath().toUri().toString()$/;"	m
PsiFile	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^fun PsiFile.toPath(): Path =$/;"	m
PsiFile	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun PsiFile.toURIString() = toPath().toUri().toString()$/;"	m
PsiFile	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^fun PsiFile.toPath(): Path =$/;"	m
PsiStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val PsiStatement.containedStatements: Sequence<PsiStatement> get() = if (this is Psi/;"	C
PsiStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val PsiStatement.containedStatements: Sequence<PsiStatement> get() = if (this is Psi/;"	C
PsiType	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiType.translateType(): String = accept(JavaTypeConverter)$/;"	m
PsiType	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun PsiType.translateType(): String = accept(JavaTypeConverter)$/;"	m
QuestionDotTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class QuestionDotTest : SingleFileTestFixture("completions", "QuestionDot.kt") {$/;"	c
QuestionDotTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class QuestionDotTest : SingleFileTestFixture("completions", "QuestionDot.kt") {$/;"	c
Range	server/bin/main/org/javacs/kt/position/Position.kt	/^val Range.isZero: Boolean$/;"	C
Range	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^val Range.isZero: Boolean$/;"	C
ReferenceCollectionish	server/bin/test/references/ReferenceCollectionish.kt	/^private class ReferenceCollectionish {$/;"	c
ReferenceCollectionish	server/src/test/resources/references/ReferenceCollectionish.kt	/^private class ReferenceCollectionish {$/;"	c
ReferenceCollectionishTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceCollectionishTest : SingleFileTestFixture("references", "ReferenceCollectionish.k/;"	c
ReferenceCollectionishTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceCollectionishTest : SingleFileTestFixture("references", "ReferenceCollectionish.k/;"	c
ReferenceComponents	server/bin/test/references/ReferenceComponents.kt	/^private class ReferenceComponents {$/;"	c
ReferenceComponents	server/src/test/resources/references/ReferenceComponents.kt	/^private class ReferenceComponents {$/;"	c
ReferenceComponentsTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceComponentsTest : SingleFileTestFixture("references", "ReferenceComponents.kt") {$/;"	c
ReferenceComponentsTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceComponentsTest : SingleFileTestFixture("references", "ReferenceComponents.kt") {$/;"	c
ReferenceConstructor	server/bin/test/references/ReferenceConstructor.kt	/^private class ReferenceConstructor(mainConstructor: String) {$/;"	c
ReferenceConstructor	server/src/test/resources/references/ReferenceConstructor.kt	/^private class ReferenceConstructor(mainConstructor: String) {$/;"	c
ReferenceConstructorTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceConstructorTest : SingleFileTestFixture("references", "ReferenceConstructor.kt") /;"	c
ReferenceConstructorTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceConstructorTest : SingleFileTestFixture("references", "ReferenceConstructor.kt") /;"	c
ReferenceEquals	server/bin/test/references/ReferenceOperator.kt	/^private class ReferenceEquals {$/;"	c
ReferenceEquals	server/src/test/resources/references/ReferenceOperator.kt	/^private class ReferenceEquals {$/;"	c
ReferenceFrom	server/bin/test/references/ReferenceFrom.kt	/^object ReferenceFrom {$/;"	o
ReferenceFrom	server/src/test/resources/references/ReferenceFrom.kt	/^object ReferenceFrom {$/;"	o
ReferenceGetSetValue	server/bin/test/references/ReferenceGetSetValue.kt	/^private class ReferenceGetSetValue {$/;"	c
ReferenceGetSetValue	server/src/test/resources/references/ReferenceGetSetValue.kt	/^private class ReferenceGetSetValue {$/;"	c
ReferenceGetSetValueTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceGetSetValueTest : SingleFileTestFixture("references", "ReferenceGetSetValue.kt") /;"	c
ReferenceGetSetValueTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceGetSetValueTest : SingleFileTestFixture("references", "ReferenceGetSetValue.kt") /;"	c
ReferenceGetterSetter	server/bin/test/references/ReferenceGetterSetter.kt	/^private class ReferenceGetterSetter {$/;"	c
ReferenceGetterSetter	server/src/test/resources/references/ReferenceGetterSetter.kt	/^private class ReferenceGetterSetter {$/;"	c
ReferenceGetterSetterTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceGetterSetterTest : SingleFileTestFixture("references", "ReferenceGetterSetter.kt"/;"	c
ReferenceGetterSetterTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceGetterSetterTest : SingleFileTestFixture("references", "ReferenceGetterSetter.kt"/;"	c
ReferenceInvoke	server/bin/test/references/ReferenceInvoke.kt	/^private class ReferenceInvoke {$/;"	c
ReferenceInvoke	server/src/test/resources/references/ReferenceInvoke.kt	/^private class ReferenceInvoke {$/;"	c
ReferenceInvokeTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceInvokeTest : SingleFileTestFixture("references", "ReferenceInvoke.kt") {$/;"	c
ReferenceInvokeTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceInvokeTest : SingleFileTestFixture("references", "ReferenceInvoke.kt") {$/;"	c
ReferenceOperator	server/bin/test/references/ReferenceOperator.kt	/^private class ReferenceOperator {$/;"	c
ReferenceOperator	server/src/test/resources/references/ReferenceOperator.kt	/^private class ReferenceOperator {$/;"	c
ReferenceOperatorTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceOperatorTest : SingleFileTestFixture("references", "ReferenceOperator.kt") {$/;"	c
ReferenceOperatorTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceOperatorTest : SingleFileTestFixture("references", "ReferenceOperator.kt") {$/;"	c
ReferenceOperatorUsingName	server/bin/test/references/ReferenceOperatorUsingName.kt	/^private class ReferenceOperatorUsingName {$/;"	c
ReferenceOperatorUsingName	server/src/test/resources/references/ReferenceOperatorUsingName.kt	/^private class ReferenceOperatorUsingName {$/;"	c
ReferenceOperatorUsingNameTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferenceOperatorUsingNameTest : SingleFileTestFixture("references", "ReferenceOperatorUsi/;"	c
ReferenceOperatorUsingNameTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferenceOperatorUsingNameTest : SingleFileTestFixture("references", "ReferenceOperatorUsi/;"	c
ReferenceTo	server/bin/test/references/ReferenceTo.kt	/^object ReferenceTo {$/;"	o
ReferenceTo	server/src/test/resources/references/ReferenceTo.kt	/^object ReferenceTo {$/;"	o
ReferencesBigFile	server/bin/test/kotlinCompilerPerformance/ReferencesBigFile.kt	/^private object ReferencesBigFile {$/;"	o
ReferencesBigFile	server/src/test/resources/kotlinCompilerPerformance/ReferencesBigFile.kt	/^private object ReferencesBigFile {$/;"	o
ReferencesTest	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^class ReferencesTest : SingleFileTestFixture("references", "ReferenceTo.kt") {$/;"	c
ReferencesTest	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^class ReferencesTest : SingleFileTestFixture("references", "ReferenceTo.kt") {$/;"	c
RenderCompletionItem	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^class RenderCompletionItem(val snippetsEnabled: Boolean) : DeclarationDescriptorVisitor<Completi/;"	c
RenderCompletionItem	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^class RenderCompletionItem(val snippetsEnabled: Boolean) : DeclarationDescriptorVisitor<Completi/;"	c
Requirements	TODO.md	/^## Requirements$/;"	s
ResolveFromFile	server/bin/test/hover/ResolveFromFile.kt	/^object ResolveFromFile {$/;"	o
ResolveFromFile	server/src/test/resources/hover/ResolveFromFile.kt	/^object ResolveFromFile {$/;"	o
ResolveToFile	server/bin/test/hover/ResolveToFile.kt	/^object ResolveToFile {$/;"	o
ResolveToFile	server/src/test/resources/hover/ResolveToFile.kt	/^object ResolveToFile {$/;"	o
ReusableParts	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    class ReusableParts : Closeable {$/;"	c
ReusableParts	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    class ReusableParts : Closeable {$/;"	c
ScriptTest	server/bin/test/org/javacs/kt/ScriptTest.kt	/^class ScriptTest : LanguageServerTestFixture("script") {$/;"	c
ScriptTest	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^class ScriptTest : LanguageServerTestFixture("script") {$/;"	c
Scripts	README.md	/^## Scripts$/;"	s
Sequence	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun Sequence<String>.buildCodeBlock(indentDelta: Int = 1, separatorNewlines: Int = 1/;"	m
Sequence	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun Sequence<String>.buildCodeBlock(indentDelta: Int = 1, separatorNewlines: Int = 1/;"	m
Sequence	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^val Sequence<ClassPathResolver>.joined get() = fold(ClassPathResolver.empty) { accum, next -> ac/;"	C
Sequence	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^val Sequence<ClassPathResolver>.joined get() = fold(ClassPathResolver.empty) { accum, next -> ac/;"	C
Setup	BUILDING.md	/^## Setup$/;"	s
Signature help	README.md	/^### Signature help$/;"	S
SignatureHelp	server/bin/test/signatureHelp/SignatureHelp.kt	/^private object SignatureHelp {$/;"	o
SignatureHelp	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^private object SignatureHelp {$/;"	o
SignatureHelpTest	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^class SignatureHelpTest : SingleFileTestFixture("signatureHelp", "SignatureHelp.kt") {$/;"	c
SignatureHelpTest	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^class SignatureHelpTest : SingleFileTestFixture("signatureHelp", "SignatureHelp.kt") {$/;"	c
SimpleScript	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^abstract class SimpleScript$/;"	c
SimpleScript	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^abstract class SimpleScript$/;"	c
SimpleScriptTest	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^class SimpleScriptTest {$/;"	c
SimpleScriptTest	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^class SimpleScriptTest {$/;"	c
SingleFileTestFixture	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^open class SingleFileTestFixture(relativeWorkspaceRoot: String, val file: String) : LanguageServ/;"	c
SingleFileTestFixture	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^open class SingleFileTestFixture(relativeWorkspaceRoot: String, val file: String) : LanguageServ/;"	c
SnippetRunner	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^private class SnippetRunner {$/;"	c
SnippetRunner	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^private class SnippetRunner {$/;"	c
SomeClass	server/bin/test/completions/InstanceMember.kt	/^private class SomeClass {$/;"	c
SomeClass	server/bin/test/completions/InstanceMember.kt	/^private fun SomeClass.extensionFoo() = "Bar"$/;"	m
SomeClass	server/src/test/resources/completions/InstanceMember.kt	/^private class SomeClass {$/;"	c
SomeClass	server/src/test/resources/completions/InstanceMember.kt	/^private fun SomeClass.extensionFoo() = "Bar"$/;"	m
SomeConstructor	server/bin/test/completions/Constructor.kt	/^private class SomeConstructor(x: Int) {$/;"	c
SomeConstructor	server/src/test/resources/completions/Constructor.kt	/^private class SomeConstructor(x: Int) {$/;"	c
SomeInnerClass	server/bin/test/completions/Types.kt	/^    class SomeInnerClass()$/;"	c
SomeInnerClass	server/src/test/resources/completions/Types.kt	/^    class SomeInnerClass()$/;"	c
SomeInnerObject	server/bin/test/completions/Types.kt	/^    object SomeInnerObject {$/;"	o
SomeInnerObject	server/src/test/resources/completions/Types.kt	/^    object SomeInnerObject {$/;"	o
SourceExclusions	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^class SourceExclusions(private val workspaceRoots: Collection<Path>) {$/;"	c
SourceExclusions	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^class SourceExclusions(private val workspaceRoots: Collection<Path>) {$/;"	c
SourceFiles	server/bin/main/org/javacs/kt/SourceFiles.kt	/^class SourceFiles($/;"	c
SourceFiles	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^class SourceFiles($/;"	c
SourceJarProvider	server/bin/main/org/javacs/kt/externalsources/SourceJarProvider.kt	/^interface SourceJarProvider {$/;"	i
SourceJarProvider	server/src/main/kotlin/org/javacs/kt/externalsources/SourceJarProvider.kt	/^interface SourceJarProvider {$/;"	i
SourcePath	server/bin/main/org/javacs/kt/SourcePath.kt	/^class SourcePath($/;"	c
SourcePath	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^class SourcePath($/;"	c
SourceVersion	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private class SourceVersion(val content: String, val version: Int, val language: Language?, val /;"	c
SourceVersion	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private class SourceVersion(val content: String, val version: Int, val language: Language?, val /;"	c
StdLibItem	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^private data class StdLibItem($/;"	d
StdLibItem	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^private data class StdLibItem($/;"	d
String	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val String?.spacePrefixed: String$/;"	C
String	server/bin/test/completions/Visibility.kt	/^fun String.publicExtensionFun() { }$/;"	m
String	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val String?.spacePrefixed: String$/;"	C
String	server/src/test/resources/completions/Visibility.kt	/^fun String.publicExtensionFun() { }$/;"	m
String	shared/bin/main/org/javacs/kt/util/Utils.kt	/^fun String.partitionAroundLast(separator: String): Pair<String, String> = lastIndexOf(separator)$/;"	m
String	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^fun String.partitionAroundLast(separator: String): Pair<String, String> = lastIndexOf(separator)$/;"	m
TODO	TODO.md	/^# TODO$/;"	c
TYPES_FILTER	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private val TYPES_FILTER = DescriptorKindFilter(DescriptorKindFilter.NON_SINGLETON_CLASSIFIERS_M/;"	C
TYPES_FILTER	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private val TYPES_FILTER = DescriptorKindFilter(DescriptorKindFilter.NON_SINGLETON_CLASSIFIERS_M/;"	C
TYPE_RENDERER	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^private val TYPE_RENDERER: DescriptorRenderer by lazy { DescriptorRenderer.COMPACT.withOptions {$/;"	C
TYPE_RENDERER	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^private val TYPE_RENDERER: DescriptorRenderer by lazy { DescriptorRenderer.COMPACT.withOptions {$/;"	C
Tag	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    abstract class Tag(val name: String) : Element {$/;"	c
Tag	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    abstract class Tag(val name: String) : Element {$/;"	c
TagWithText	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    abstract class TagWithText(name: String) : Tag(name) {$/;"	c
TagWithText	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    abstract class TagWithText(name: String) : Tag(name) {$/;"	c
Target	server/bin/test/signatureHelp/SignatureHelp.kt	/^private object Target {$/;"	o
Target	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^private object Target {$/;"	o
TeamCityConnection	scripts/utils/teamcity.py	/^class TeamCityConnection:$/;"	c
TeamCityNode	scripts/utils/teamcity.py	/^class TeamCityNode:$/;"	c
TemporaryDirectory	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^class TemporaryDirectory(prefix: String = "kotlinlangserver") : Closeable {$/;"	c
TemporaryDirectory	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^class TemporaryDirectory(prefix: String = "kotlinlangserver") : Closeable {$/;"	c
Test	server/bin/test/formatting/Spaces.kt	/^class Test($/;"	c
Test	server/src/test/resources/formatting/Spaces.kt	/^class Test($/;"	c
Test Summary	shared/build/reports/tests/test/index.html	/^<h1>Test Summary<\/h1>$/;"	h
TestClass	server/src/main/kotlin/org/javacs/kt/completion/TestClass.java	/^public class TestClass {$/;"	c
Tests	shared/build/reports/tests/test/classes/org.javacs.kt.MavenArtifactParsingTest.html	/^<h2>Tests<\/h2>$/;"	i
TextDocumentIdentifier	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.content: String$/;"	C
TextDocumentIdentifier	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.filePath: Path?$/;"	C
TextDocumentIdentifier	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.isKotlinScript: Boolean$/;"	C
TextDocumentIdentifier	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.content: String$/;"	C
TextDocumentIdentifier	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.filePath: Path?$/;"	C
TextDocumentIdentifier	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentIdentifier.isKotlinScript: Boolean$/;"	C
TextDocumentItem	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentItem.filePath: Path?$/;"	C
TextDocumentItem	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val TextDocumentItem.filePath: Path?$/;"	C
TextElement	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class TextElement(val text: String) : Element {$/;"	c
TextElement	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class TextElement(val text: String) : Element {$/;"	c
This repository needs your help!	README.md	/^## This repository needs your help!$/;"	s
Title	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class Title() : TagWithText("title")$/;"	c
Title	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class Title() : TagWithText("title")$/;"	c
TrailingLambdaTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class TrailingLambdaTest : SingleFileTestFixture("completions", "TrailingLambda.kt") {$/;"	c
TrailingLambdaTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class TrailingLambdaTest : SingleFileTestFixture("completions", "TrailingLambda.kt") {$/;"	c
Troubleshooting	TROUBLESHOOTING.md	/^# Troubleshooting$/;"	c
TypeParameterDescriptor	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun TypeParameterDescriptor.isGenericExtensionFor(type: KotlinType): Boolean =$/;"	m
TypeParameterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun TypeParameterDescriptor.isGenericExtensionFor(type: KotlinType): Boolean =$/;"	m
Types	server/bin/test/completions/Types.kt	/^private class Types {$/;"	c
Types	server/src/test/resources/completions/Types.kt	/^private class Types {$/;"	c
TypesTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class TypesTest : SingleFileTestFixture("completions", "Types.kt") {$/;"	c
TypesTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class TypesTest : SingleFileTestFixture("completions", "Types.kt") {$/;"	c
UL	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class UL() : BodyTag("ul") {$/;"	c
UL	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class UL() : BodyTag("ul") {$/;"	c
URI	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^fun URI.toKlsURI(): KlsURI? = when (scheme) {$/;"	m
URI	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^fun URI.toKlsURI(): KlsURI? = when (scheme) {$/;"	m
URI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^val URI.fileExtension: String?$/;"	C
URI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^val URI.filePath: Path? get() = runCatching { Paths.get(this) }.getOrNull()$/;"	C
URI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^val URI.fileExtension: String?$/;"	C
URI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^val URI.filePath: Path? get() = runCatching { Paths.get(this) }.getOrNull()$/;"	C
URIContentProvider	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^class URIContentProvider($/;"	c
URIContentProvider	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^class URIContentProvider($/;"	c
URIsTest	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^class URIsTest {$/;"	c
Unnamed	scripts/update_kt_version.py	/^class Unnamed:$/;"	c
User1	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    data class User1(val name: String, val id: Int)$/;"	d
User1	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    data class User1(val name: String, val id: Int)$/;"	d
User2	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    data class User2(val name: String, val id: Int)$/;"	d
User2	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    data class User2(val name: String, val id: Int)$/;"	d
User3	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class User3 {$/;"	c
User3	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class User3 {$/;"	c
User4	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class User4 {$/;"	c
User4	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class User4 {$/;"	c
User5	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    class User5(val map: Map<String, Any?>) {$/;"	c
User5	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    class User5(val map: Map<String, Any?>) {$/;"	c
VSCode: Running `npm run compile` or `vsce package` fails	TROUBLESHOOTING.md	/^## VSCode: Running `npm run compile` or `vsce package` fails$/;"	s
Version	scripts/bump_version.py	/^class Version:$/;"	c
Vim	EDITORS.md	/^## Vim$/;"	s
VisibilityTest	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^class VisibilityTest : SingleFileTestFixture("completions", "Visibility.kt") {$/;"	c
VisibilityTest	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^class VisibilityTest : SingleFileTestFixture("completions", "Visibility.kt") {$/;"	c
Visual Studio Code	EDITORS.md	/^## Visual Studio Code$/;"	s
WorkspaceSymbolsTest	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^class WorkspaceSymbolsTest : SingleFileTestFixture("symbols", "DocumentSymbols.kt") {$/;"	c
WorkspaceSymbolsTest	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^class WorkspaceSymbolsTest : SingleFileTestFixture("symbols", "DocumentSymbols.kt") {$/;"	c
[0.1.0]	CHANGELOG.md	/^## [0.1.0]$/;"	s
[0.1.10]	CHANGELOG.md	/^## [0.1.10]$/;"	s
[0.1.11]	CHANGELOG.md	/^## [0.1.11]$/;"	s
[0.1.12]	CHANGELOG.md	/^## [0.1.12]$/;"	s
[0.1.13]	CHANGELOG.md	/^## [0.1.13]$/;"	s
[0.1.1]	CHANGELOG.md	/^## [0.1.1]$/;"	s
[0.1.2]	CHANGELOG.md	/^## [0.1.2]$/;"	s
[0.1.3]	CHANGELOG.md	/^## [0.1.3]$/;"	s
[0.1.4]	CHANGELOG.md	/^## [0.1.4]$/;"	s
[0.1.5]	CHANGELOG.md	/^## [0.1.5]$/;"	s
[0.1.6]	CHANGELOG.md	/^## [0.1.6]$/;"	s
[0.2.0]	CHANGELOG.md	/^## [0.2.0]$/;"	s
[0.2.5]	CHANGELOG.md	/^## [0.2.5]$/;"	s
[0.2.6]	CHANGELOG.md	/^## [0.2.6]$/;"	s
[0.2.7]	CHANGELOG.md	/^## [0.2.7]$/;"	s
[0.2.8]	CHANGELOG.md	/^## [0.2.8]$/;"	s
[0.2.9]	CHANGELOG.md	/^## [0.2.9]$/;"	s
[0.3.0]	CHANGELOG.md	/^## [0.3.0]$/;"	s
[0.4.0]	CHANGELOG.md	/^## [0.4.0]$/;"	s
[0.5.0]	CHANGELOG.md	/^## [0.5.0]$/;"	s
[0.5.1]	CHANGELOG.md	/^## [0.5.1]$/;"	s
[0.5.2]	CHANGELOG.md	/^## [0.5.2]$/;"	s
[0.6.0]	CHANGELOG.md	/^## [0.6.0]$/;"	s
[0.7.0]	CHANGELOG.md	/^## [0.7.0]$/;"	s
_SKIP	gradlew.bat	/^set _SKIP=2$/;"	v
_SKIP	server/bin/test/additionalWorkspace/gradlew.bat	/^set _SKIP=2$/;"	v
_SKIP	server/src/test/resources/additionalWorkspace/gradlew.bat	/^set _SKIP=2$/;"	v
__getitem__	scripts/utils/properties.py	/^    def __getitem__(self, key):$/;"	m	class:PropertiesFile
__init__	scripts/bump_version.py	/^    def __init__(self, major, minor, patch):$/;"	m	class:Version
__init__	scripts/utils/changelog.py	/^    def __init__(self, file_path):$/;"	m	class:ChangelogFile
__init__	scripts/utils/properties.py	/^    def __init__(self, file_path):$/;"	m	class:PropertiesFile
__init__	scripts/utils/teamcity.py	/^    def __init__(self, server_url):$/;"	m	class:TeamCityConnection
__init__	scripts/utils/teamcity.py	/^    def __init__(self, server_url, xmltree):$/;"	m	class:TeamCityNode
__setitem__	scripts/utils/properties.py	/^    def __setitem__(self, key, value):$/;"	m	class:PropertiesFile
__str__	scripts/bump_version.py	/^    def __str__(self):$/;"	m	class:Version
a	server/bin/test/formatting/Spaces.kt	/^    val a: String,$/;"	C
a	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val a = initTag(A(), init)$/;"	C
a	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun a(href: String, init: A.() -> Unit) {$/;"	m
a	server/src/test/resources/formatting/Spaces.kt	/^    val a: String,$/;"	C
a	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val a = initTag(A(), init)$/;"	C
a	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun a(href: String, init: A.() -> Unit) {$/;"	m
a	shared/build/reports/tests/test/css/base-style.css	/^body, a, a:visited {$/;"	s
a:visited	shared/build/reports/tests/test/css/base-style.css	/^body, a, a:visited {$/;"	s
aClassFun	server/bin/test/completions/FunctionScope.kt	/^    private fun aClassFun() = 1$/;"	m
aClassFun	server/src/test/resources/completions/FunctionScope.kt	/^    private fun aClassFun() = 1$/;"	m
aClassVal	server/bin/test/completions/FunctionScope.kt	/^    private val aClassVal = 1$/;"	C
aClassVal	server/src/test/resources/completions/FunctionScope.kt	/^    private val aClassVal = 1$/;"	C
aCompanionFun	server/bin/test/completions/FunctionScope.kt	/^        private fun aCompanionFun() = 1$/;"	m
aCompanionFun	server/src/test/resources/completions/FunctionScope.kt	/^        private fun aCompanionFun() = 1$/;"	m
aCompanionVal	server/bin/test/completions/FunctionScope.kt	/^        private val aCompanionVal = 1$/;"	C
aCompanionVal	server/src/test/resources/completions/FunctionScope.kt	/^        private val aCompanionVal = 1$/;"	C
aFunction	server/bin/test/symbols/DocumentSymbols.kt	/^    fun aFunction(aFunctionArg: Int) {$/;"	m
aFunction	server/src/test/resources/symbols/DocumentSymbols.kt	/^    fun aFunction(aFunctionArg: Int) {$/;"	m
aLocal	server/bin/test/completions/FunctionScope.kt	/^        val aLocal = 1$/;"	C
aLocal	server/src/test/resources/completions/FunctionScope.kt	/^        val aLocal = 1$/;"	C
aProperty	server/bin/test/symbols/DocumentSymbols.kt	/^    val aProperty = 1$/;"	C
aProperty	server/src/test/resources/symbols/DocumentSymbols.kt	/^    val aProperty = 1$/;"	C
absoluteWorkspaceRoot	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun absoluteWorkspaceRoot(relativeWorkspaceRoot: String): Path {$/;"	m
absoluteWorkspaceRoot	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun absoluteWorkspaceRoot(relativeWorkspaceRoot: String): Path {$/;"	m
activeDeclaration	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val activeDeclaration = activeDeclaration(call, candidates)$/;"	C
activeDeclaration	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun activeDeclaration(call: KtCallExpression, candidates: List<CallableDescriptor>): Int/;"	m
activeDeclaration	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val activeDeclaration = activeDeclaration(call, candidates)$/;"	C
activeDeclaration	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun activeDeclaration(call: KtCallExpression, candidates: List<CallableDescriptor>): Int/;"	m
activeParameter	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val activeParameter = activeParameter(call, cursor)$/;"	C
activeParameter	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun activeParameter(call: KtCallExpression, cursor: Int): Int {$/;"	m
activeParameter	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val activeParameter = activeParameter(call, cursor)$/;"	C
activeParameter	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun activeParameter(call: KtCallExpression, cursor: Int): Int {$/;"	m
actualOut	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val actualOut = System.out$/;"	C
actualOut	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val actualOut = System.out$/;"	C
addClass	shared/build/reports/tests/test/js/report.js	/^    function addClass(element, classValue) {$/;"	f
addSources	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val addSources = findSourceFiles(root)$/;"	C
addSources	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val addSources = findSourceFiles(root)$/;"	C
addWorkspace	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val addWorkspace = DidChangeWorkspaceFoldersParams()$/;"	C
addWorkspace	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val addWorkspace = DidChangeWorkspaceFoldersParams()$/;"	C
addWorkspaceRoot	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun addWorkspaceRoot(root: Path): Boolean {$/;"	m
addWorkspaceRoot	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun addWorkspaceRoot(root: Path) {$/;"	m
addWorkspaceRoot	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^    fun addWorkspaceRoot() {$/;"	m
addWorkspaceRoot	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun addWorkspaceRoot(root: Path): Boolean {$/;"	m
addWorkspaceRoot	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun addWorkspaceRoot(root: Path) {$/;"	m
addWorkspaceRoot	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^    fun addWorkspaceRoot() {$/;"	m
added	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        val added = new - dest$/;"	C
added	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        val added = new - dest$/;"	C
age	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val age: Int     by map$/;"	C
age	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val age: Int     by map$/;"	C
all	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun all(includeHidden: Boolean = false): Collection<KtFile> =$/;"	m
all	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^        val all = found.map { it.right }.toList()$/;"	C
all	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val all = found.map { it.name }.toList()$/;"	C
all	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun all(includeHidden: Boolean = false): Collection<KtFile> =$/;"	m
all	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^        val all = found.map { it.right }.toList()$/;"	C
all	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val all = found.map { it.name }.toList()$/;"	C
allChanged	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val allChanged = sources.filter { it.content != it.compiledFile?.text }$/;"	C
allChanged	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val allChanged = sources.filter { it.content != it.compiledFile?.text }$/;"	C
allFiles	server/bin/main/org/javacs/kt/SourcePath.kt	/^            val allFiles = all()$/;"	C
allFiles	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private var allFiles: List<PsiFile>? = null$/;"	v
allFiles	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^            val allFiles = all()$/;"	C
allFiles	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private var allFiles: Collection<PsiFile>? = null$/;"	v
allIncludingThis	server/bin/main/org/javacs/kt/SourcePath.kt	/^        private fun allIncludingThis(): Collection<KtFile> = parseIfChanged().let {$/;"	m
allIncludingThis	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        private fun allIncludingThis(): Collection<KtFile> = parseIfChanged().let {$/;"	m
allSymbols	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun allSymbols(includeHidden: Boolean = false) =$/;"	m
allSymbols	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun allSymbols(includeHidden: Boolean = false) =$/;"	m
alphanum_pattern	scripts/utils/cli.py	/^alphanum_pattern = re.compile(r"(\\d+)|(\\D+)")$/;"	v
alphanum_sort_key	scripts/utils/cli.py	/^def alphanum_sort_key(item):$/;"	f
analyze	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val analyze = container.create(LazyTopDownAnalyzer::class.java)$/;"	C
analyze	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val analyze = state.compile(listOf(smallFile), listOf(smallFile, state.bigFile))$/;"	C
analyze	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val analyze = state.compile(listOf(smallFile, bigFile), listOf(smallFile, bigFile))$/;"	C
analyze	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val analyze = container.create(LazyTopDownAnalyzer::class.java)$/;"	C
analyze	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val analyze = state.compile(listOf(smallFile), listOf(smallFile, state.bigFile))$/;"	C
analyze	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val analyze = state.compile(listOf(smallFile, bigFile), listOf(smallFile, bigFile))$/;"	C
anchorTxt	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    val anchorTxt = LanguageServerTestFixture::class.java.getResource("\/Anchor.txt").toURI()$/;"	C
anchorTxt	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    val anchorTxt = LanguageServerTestFixture::class.java.getResource("\/Anchor.txt").toURI()$/;"	C
annotation-simple	grammars/Kotlin.tmLanguage.json	/^		"annotation-simple": {$/;"	o	object:repository
annotation-site	grammars/Kotlin.tmLanguage.json	/^		"annotation-site": {$/;"	o	object:repository
annotation-site-list	grammars/Kotlin.tmLanguage.json	/^		"annotation-site-list": {$/;"	o	object:repository
append	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(c:Char): PrintStream {$/;"	m
append	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(csq: CharSequence): PrintStream {$/;"	m
append	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(csq: CharSequence, start: Int, end: Int): PrintStream {$/;"	m
append	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(c:Char): PrintStream {$/;"	m
append	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(csq: CharSequence): PrintStream {$/;"	m
append	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun append(csq: CharSequence, start: Int, end: Int): PrintStream {$/;"	m
apply_changes	scripts/utils/properties.py	/^    def apply_changes(self, change_dict):$/;"	m	class:PropertiesFile
args	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^        val args = params.arguments$/;"	C
args	server/bin/main/org/javacs/kt/Main.kt	/^    val args = Args().also { JCommander.newBuilder().addObject(it).build().parse(*argv) }$/;"	C
args	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val args = call.valueArgumentList ?: return -1$/;"	C
args	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^        val args = params.arguments$/;"	C
args	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    val args = Args().also { JCommander.newBuilder().addObject(it).build().parse(*argv) }$/;"	C
args	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val args = call.valueArgumentList ?: return -1$/;"	C
argumentList	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val argumentList = call.valueArgumentList ?: return true$/;"	C
argumentList	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val argumentList = call.valueArgumentList ?: return true$/;"	C
array	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val array = arrayListOf<String>()$/;"	C
array	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val array = arrayListOf<String>()$/;"	C
arrayDimensions	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val arrayDimensions = expression.arrayDimensions$/;"	C
arrayDimensions	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val arrayDimensions = expression.arrayDimensions$/;"	C
artifact	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val artifact: String,$/;"	C
artifact	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val artifact: String,$/;"	C
artifactPattern	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private val artifactPattern by lazy { "kotlin-lsp-gradle (.+)(?:\\r?\\n)".toRegex() }$/;"	C
artifactPattern	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private val artifactPattern = "^[^:]+:(?:[^:]+:)+[^:]+".toRegex()$/;"	C
artifactPattern	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private val artifactPattern by lazy { "kotlin-lsp-gradle (.+)(?:\\r?\\n)".toRegex() }$/;"	C
artifactPattern	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private val artifactPattern = "^[^:]+:(?:[^:]+:)+[^:]+".toRegex()$/;"	C
artifacts	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val artifacts = artifactPattern.findAll(output)$/;"	C
artifacts	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        val artifacts = readMavenDependencyList(mavenOutput)$/;"	C
artifacts	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val artifacts = artifactPattern.findAll(output)$/;"	C
artifacts	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        val artifacts = readMavenDependencyList(mavenOutput)$/;"	C
asClassPathProvider	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun asClassPathProvider(path: Path): ClassPathResolver? =$/;"	m
asClassPathProvider	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun asClassPathProvider(path: Path): ClassPathResolver? =$/;"	m
assertGoToProperty	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^    private fun assertGoToProperty(of: Position, expect: Range) {$/;"	m
assertGoToProperty	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^    private fun assertGoToProperty(of: Position, expect: Range) {$/;"	m
assertNotError	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    private fun assertNotError(result: ResultWithDiagnostics<EvaluationResult>) {$/;"	m
assertNotError	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    private fun assertNotError(result: ResultWithDiagnostics<EvaluationResult>) {$/;"	m
async	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    private val async = AsyncExecutor()$/;"	C
async	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val async = AsyncExecutor()$/;"	C
async	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    private val async = AsyncExecutor()$/;"	C
async	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val async = AsyncExecutor()$/;"	C
attribute	scripts/utils/teamcity.py	/^    def attribute(self, name):$/;"	m	class:TeamCityNode
attributes	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val attributes = hashMapOf<String, String>()$/;"	C
attributes	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val attributes = hashMapOf<String, String>()$/;"	C
autoClosingPairs	grammars/kotlin.configuration.json	/^	"autoClosingPairs": [$/;"	a
autoConvertToKotlin	server/bin/main/org/javacs/kt/Configuration.kt	/^    var autoConvertToKotlin: Boolean = true$/;"	v
autoConvertToKotlin	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    var autoConvertToKotlin: Boolean = true$/;"	v
b	server/bin/test/formatting/Spaces.kt	/^    val b: String$/;"	C
b	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun b(init: B.() -> Unit) = initTag(B(), init)$/;"	m
b	server/src/test/resources/formatting/Spaces.kt	/^    val b: String$/;"	C
b	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun b(init: B.() -> Unit) = initTag(B(), init)$/;"	m
backend	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^        val backend: (LogMessage) -> Unit = {$/;"	C
backend	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^        val backend: (LogMessage) -> Unit = {$/;"	C
bar	server/bin/test/completions/FillEmptyBody.kt	/^    fun bar() {$/;"	m
bar	server/bin/test/hover/ObjectReference.kt	/^private fun bar() {$/;"	m
bar	server/src/test/resources/completions/FillEmptyBody.kt	/^    fun bar() {$/;"	m
bar	server/src/test/resources/hover/ObjectReference.kt	/^private fun bar() {$/;"	m
basicScript	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    fun basicScript() {$/;"	m
basicScript	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    fun basicScript() {$/;"	m
beforeCompileCallback	server/bin/main/org/javacs/kt/SourcePath.kt	/^    var beforeCompileCallback: () -> Unit = {}$/;"	v
beforeCompileCallback	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    var beforeCompileCallback: () -> Unit = {}$/;"	v
beforeCursor	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val beforeCursor = text.subSequence(0, max-min)$/;"	C
beforeCursor	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val beforeCursor = text.subSequence(0, max-min)$/;"	C
begin	grammars/Kotlin.tmLanguage.json	/^					"begin": "\/\\\\*\\\\*",$/;"	s	object:repository.comment-javadoc.patterns.0
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "'",$/;"	s	object:repository.character
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "(?<!\\")\\"(?!\\")",$/;"	s	object:repository.string
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "(?<!\\\\\\\\)(\\\\$\\\\{)",$/;"	s	object:repository.string-escape-bracketed
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "(?<!\\\\w)(@\\\\w+):\\\\s*(?!\\\\[)",$/;"	s	object:repository.annotation-site
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "(?<!\\\\w)(@\\\\w+):\\\\s*\\\\[",$/;"	s	object:repository.annotation-site-list
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "\/\/",$/;"	s	object:repository.comment-line
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "\/\\\\*(?!\\\\*)",$/;"	s	object:repository.comment-block
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "\\"\\"\\"",$/;"	s	object:repository.string-multiline
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "\\\\b(import)\\\\b\\\\s*",$/;"	s	object:repository.import
begin	grammars/Kotlin.tmLanguage.json	/^			"begin": "\\\\b(package)\\\\b\\\\s*",$/;"	s	object:repository.package
begin	grammars/codeblock.json	/^			"begin": "kotlin",$/;"	s	object:repository.kotlin-code-block
beginCaptures	grammars/Kotlin.tmLanguage.json	/^			"beginCaptures": {$/;"	o	object:repository.annotation-site
beginCaptures	grammars/Kotlin.tmLanguage.json	/^			"beginCaptures": {$/;"	o	object:repository.annotation-site-list
beginCaptures	grammars/Kotlin.tmLanguage.json	/^			"beginCaptures": {$/;"	o	object:repository.import
beginCaptures	grammars/Kotlin.tmLanguage.json	/^			"beginCaptures": {$/;"	o	object:repository.package
beginCaptures	grammars/Kotlin.tmLanguage.json	/^			"beginCaptures": {$/;"	o	object:repository.string-escape-bracketed
bigFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val bigFile = state.openFile("\/kotlinCompilerPerformance\/BigFile.kt")$/;"	C
bigFile	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val bigFile = state.openFile("\/kotlinCompilerPerformance\/BigFile.kt")$/;"	C
binary-literal	grammars/Kotlin.tmLanguage.json	/^		"binary-literal": {$/;"	o	object:repository
bindingContextOf	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun bindingContextOf(expression: KtExpression, scopeWithImports: LexicalScope): BindingConte/;"	m
bindingContextOf	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun bindingContextOf(expression: KtExpression, scopeWithImports: LexicalScope): BindingConte/;"	m
blockComment	grammars/kotlin.configuration.json	/^		"blockComment": [ "\/*", "*\/" ]$/;"	a	object:comments
blockFunction	server/bin/test/hover/Recover.kt	/^private fun blockFunction() {$/;"	m
blockFunction	server/src/test/resources/hover/Recover.kt	/^private fun blockFunction() {$/;"	m
body	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val body = expression.body$/;"	C
body	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun body(init: Body.() -> Unit) = initTag(Body(), init)$/;"	m
body	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val body = expression.body$/;"	C
body	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun body(init: Body.() -> Unit) = initTag(Body(), init)$/;"	m
body	shared/build/reports/tests/test/css/base-style.css	/^body {$/;"	s
body	shared/build/reports/tests/test/css/base-style.css	/^body, a, a:visited {$/;"	s
boolean-literal	grammars/Kotlin.tmLanguage.json	/^		"boolean-literal": {$/;"	o	object:repository
bottles	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var bottles = bottleCount$/;"	v
bottles	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var bottles = bottleCount$/;"	v
bottlesOfBeer	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val bottlesOfBeer = bottlesOfBeer(bottles)$/;"	C
bottlesOfBeer	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun bottlesOfBeer(count: Int): String = when (count) {$/;"	m
bottlesOfBeer	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val bottlesOfBeer = bottlesOfBeer(bottles)$/;"	C
bottlesOfBeer	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun bottlesOfBeer(count: Int): String = when (count) {$/;"	m
brackets	grammars/kotlin.configuration.json	/^	"brackets": [$/;"	a
buildFile	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^        val buildFile = workspaceRoot.resolve("build.gradle")$/;"	C
buildFile	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^        val buildFile = workspaceRoot.resolve("build.gradle")$/;"	C
buildScript	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        val buildScript = isBuildScript(file)$/;"	C
buildScript	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        val buildScript = isBuildScript(file)$/;"	C
buildScriptClassPath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private val buildScriptClassPath = mutableSetOf<Path>()$/;"	C
buildScriptClassPath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private val buildScriptClassPath = mutableSetOf<Path>()$/;"	C
buildScriptClasspath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspath get() = lhs.buildScriptClasspath + rhs.buildScriptClasspat/;"	C
buildScriptClasspath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspath get() = lhs.buildScriptClasspath.takeIf { it.isNotEmpty() /;"	C
buildScriptClasspath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val buildScriptClasspath: Set<Path>$/;"	C
buildScriptClasspath	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val buildScriptClasspath: Set<Path> get() {$/;"	C
buildScriptClasspath	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val buildScriptClasspath: Set<Path> get() = wrapWithStdlib(wrapped.buildScriptClass/;"	C
buildScriptClasspath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspath get() = lhs.buildScriptClasspath + rhs.buildScriptClasspat/;"	C
buildScriptClasspath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspath get() = lhs.buildScriptClasspath.takeIf { it.isNotEmpty() /;"	C
buildScriptClasspath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val buildScriptClasspath: Set<Path>$/;"	C
buildScriptClasspath	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val buildScriptClasspath: Set<Path> get() {$/;"	C
buildScriptClasspath	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val buildScriptClasspath: Set<Path> get() = wrapWithStdlib(wrapped.buildScriptClass/;"	C
buildScriptClasspathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspathOrEmpty get() = lhs.buildScriptClasspathOrEmpty + rhs.build/;"	C
buildScriptClasspathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspathOrEmpty get() = lhs.buildScriptClasspathOrEmpty.takeIf { it/;"	C
buildScriptClasspathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val buildScriptClasspathOrEmpty: Set<Path>$/;"	C
buildScriptClasspathOrEmpty	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val buildScriptClasspathOrEmpty: Set<Path> get() = wrapWithStdlib(wrapped.buildScri/;"	C
buildScriptClasspathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspathOrEmpty get() = lhs.buildScriptClasspathOrEmpty + rhs.build/;"	C
buildScriptClasspathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val buildScriptClasspathOrEmpty get() = lhs.buildScriptClasspathOrEmpty.takeIf { it/;"	C
buildScriptClasspathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val buildScriptClasspathOrEmpty: Set<Path>$/;"	C
buildScriptClasspathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val buildScriptClasspathOrEmpty: Set<Path> get() = wrapWithStdlib(wrapped.buildScri/;"	C
buildScriptCompileEnvironment	server/bin/main/org/javacs/kt/Compiler.kt	/^    private val buildScriptCompileEnvironment = buildScriptClassPath.takeIf { it.isNotEmpty() }?/;"	C
buildScriptCompileEnvironment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private val buildScriptCompileEnvironment = buildScriptClassPath.takeIf { it.isNotEmpty() }?/;"	C
buildScriptsContext	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val buildScriptsContext = compileAndUpdate(changedBuildScripts, CompilationKind.BUILD_SC/;"	C
buildScriptsContext	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val buildScriptsContext = compileAndUpdate(changedBuildScripts, CompilationKind.BUILD_SC/;"	C
builder	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val builder = StringBuilder()$/;"	C
builder	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val builder = StringBuilder()$/;"	C
byFile	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val byFile = langServerDiagnostics.groupBy({ it.first }, { it.second })$/;"	C
byFile	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val byFile = langServerDiagnostics.groupBy({ it.first }, { it.second })$/;"	C
byKind	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val byKind = found.groupBy({ it.kind }, { it.name })$/;"	C
byKind	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val byKind = found.groupBy({ it.kind }, { it.name })$/;"	C
c	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val c = if (oldContent) parse.text else content$/;"	C
c	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^                val c = lines[line][x]$/;"	C
c	server/bin/test/references/ReferenceComponents.kt	/^    val c = ReferenceComponents().component1()$/;"	C
c	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val c = if (oldContent) parse.text else content$/;"	C
c	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^                val c = lines[line][x]$/;"	C
c	server/src/test/resources/references/ReferenceComponents.kt	/^    val c = ReferenceComponents().component1()$/;"	C
cachedContents	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val cachedContents = object : LinkedHashMap<String, String>() {$/;"	C
cachedContents	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val cachedContents = object : LinkedHashMap<String, String>() {$/;"	C
cachedTempFiles	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^private val cachedTempFiles = mutableMapOf<KlsURI, Path>()$/;"	C
cachedTempFiles	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^private val cachedTempFiles = mutableMapOf<KlsURI, Path>()$/;"	C
calendar	server/bin/test/completions/JavaGetterSetterConversion.kt	/^    val calendar: Calendar = Calendar.getIn$/;"	C
calendar	server/src/test/resources/completions/JavaGetterSetterConversion.kt	/^    val calendar: Calendar = Calendar.getIn$/;"	C
calendarDemo	server/bin/test/completions/JavaGetterSetterConversion.kt	/^fun calendarDemo() {$/;"	m
calendarDemo	server/src/test/resources/completions/JavaGetterSetterConversion.kt	/^fun calendarDemo() {$/;"	m
call	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val call = file.parseAtPoint(cursor)?.findParent<KtCallExpression>() ?: return null$/;"	C
call	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val call = ref.getParentResolvedCall(analyze.getBindingContext(), false)$/;"	C
call	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val call = file.parseAtPoint(cursor)?.findParent<KtCallExpression>() ?: return null$/;"	C
call	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val call = ref.getParentResolvedCall(analyze.getBindingContext(), false)$/;"	C
callPattern	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private val callPattern = Regex("(.*)\\\\((?:\\\\$\\\\d+)?\\\\)(?:\\\\$0)?")$/;"	C
callPattern	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private val callPattern = Regex("(.*)\\\\((?:\\\\$\\\\d+)?\\\\)(?:\\\\$0)?")$/;"	C
callbackCount	server/bin/test/org/javacs/kt/LintTest.kt	/^        var callbackCount = 0$/;"	v
callbackCount	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^        var callbackCount = 0$/;"	v
candidateLength	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        val candidateLength = candidate.length$/;"	C
candidates	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val candidates = candidates(call, file)$/;"	C
candidates	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun candidates(call: KtCallExpression, file: CompiledFile): List<CallableDescriptor> {$/;"	m
candidates	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val candidates = candidates(call, file)$/;"	C
candidates	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun candidates(call: KtCallExpression, file: CompiledFile): List<CallableDescriptor> {$/;"	m
captures	grammars/Kotlin.tmLanguage.json	/^							"captures": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.1
captures	grammars/Kotlin.tmLanguage.json	/^							"captures": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.2
captures	grammars/Kotlin.tmLanguage.json	/^							"captures": {$/;"	o	object:repository.comment-javadoc.patterns.0.patterns.3
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.class-declaration
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.function-call
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.function-declaration
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.key
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.method-reference
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.object-declaration
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.type-alias
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.type-annotation
captures	grammars/Kotlin.tmLanguage.json	/^			"captures": {$/;"	o	object:repository.variable-declaration
cases	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun cases(obj: Any) {$/;"	m
cases	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun cases(obj: Any) {$/;"	m
cell	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^                val cell = Point(i, j)$/;"	C
cell	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val cell = queue.poll()$/;"	C
cell	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^                val cell = Point(i, j)$/;"	C
cell	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val cell = queue.poll()$/;"	C
changeElementClass	shared/build/reports/tests/test/js/report.js	/^    function changeElementClass(element, classValue) {$/;"	f
changedOnDisk	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun changedOnDisk(file: Path): Boolean {$/;"	m
changedOnDisk	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun changedOnDisk(uri: URI) {$/;"	m
changedOnDisk	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun changedOnDisk(file: Path): Boolean {$/;"	m
changedOnDisk	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun changedOnDisk(uri: URI) {$/;"	m
changedRegion	server/bin/main/org/javacs/kt/position/Position.kt	/^fun changedRegion(oldContent: String, newContent: String): Pair<TextRange, TextRange>? {$/;"	m
changedRegion	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun changedRegion(oldContent: String, newContent: String): Pair<TextRange, TextRange>? {$/;"	m
char	server/bin/main/org/javacs/kt/position/Position.kt	/^    var char = 0$/;"	v
char	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var char = 0$/;"	v
charIndex	shared/bin/main/org/javacs/kt/Logger.kt	/^        var charIndex = 0$/;"	v
charIndex	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        var charIndex = 0$/;"	v
charOffset	server/bin/main/org/javacs/kt/position/Position.kt	/^    var charOffset = 0$/;"	v
charOffset	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var charOffset = 0$/;"	v
character	grammars/Kotlin.tmLanguage.json	/^		"character": {$/;"	o	object:repository
check	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    fun check(target: DeclarationDescriptor): Boolean {$/;"	m
check	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    fun check(target: DeclarationDescriptor): Boolean {$/;"	m
checkRecompileBoth	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    fun checkRecompileBoth() {$/;"	m
checkRecompileBoth	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    fun checkRecompileBoth() {$/;"	m
checkRecompileOne	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    fun checkRecompileOne() {$/;"	m
checkRecompileOne	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    fun checkRecompileOne() {$/;"	m
children	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^    val children = element.children.flatMap(::doDocumentSymbols)$/;"	C
children	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val children = arrayListOf<Element>()$/;"	C
children	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^    val children = element.children.flatMap(::doDocumentSymbols)$/;"	C
children	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val children = arrayListOf<Element>()$/;"	C
class-declaration	grammars/Kotlin.tmLanguage.json	/^		"class-declaration": {$/;"	o	object:repository
classDescriptor	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val classDescriptor = TypeUtils.getClassDescriptor(kotlinType)$/;"	C
classDescriptor	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val classDescriptor = TypeUtils.getClassDescriptor(kotlinType)$/;"	C
classPath	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val classPath: CompilerClassPath,$/;"	C
classPath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^     val classPath = mutableSetOf<Path>()$/;"	C
classPath	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    val classPath = CompilerClassPath(config.compiler)$/;"	C
classPath	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^        val classPath = defaultClassPathResolver(listOf(workspaceRoot)).classpathOrEmpty$/;"	C
classPath	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val classPath = CompilerClassPath(CompilerConfiguration())$/;"	C
classPath	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val classPath: CompilerClassPath,$/;"	C
classPath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^     val classPath = mutableSetOf<Path>()$/;"	C
classPath	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    val classPath = CompilerClassPath(config.compiler)$/;"	C
classPath	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^        val classPath = defaultClassPathResolver(listOf(workspaceRoot)).classpathOrEmpty.map { i/;"	C
classPath	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val classPath = CompilerClassPath(CompilerConfiguration())$/;"	C
classScopeNumber	server/bin/test/definition/GoToProperties.kt	/^    val classScopeNumber: Int = 1$/;"	C
classScopeNumber	server/src/test/resources/definition/GoToProperties.kt	/^    val classScopeNumber: Int = 1$/;"	C
classes	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        val classes = referenceTarget.unsubstitutedInnerClassesScope.getContributedDescriptors()/;"	C
classes	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^        val classes = referenceTarget.unsubstitutedInnerClassesScope.getContributedDescriptors()/;"	C
classifier	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val classifier: String?,$/;"	C
classifier	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val classifier: String?,$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    override val classpath: Set<Path> get() = findKotlinStdlib()?.let { setOf(it) }.orEmpty()$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^            override val classpath = emptySet<Path>()$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpath get() = lhs.classpath + rhs.classpath$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpath get() = lhs.classpath.takeIf { it.isNotEmpty() } ?: rhs.classpath$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val classpath: Set<Path> \/\/ may throw exceptions$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val classpath: Set<Path> get() = wrapWithStdlib(wrapped.classpath)$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    override val classpath: Set<Path> get() = findKotlinStdlib()?.let { setOf(it) }.orEmpty()$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^            override val classpath = emptySet<Path>()$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpath get() = lhs.classpath + rhs.classpath$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpath get() = lhs.classpath.takeIf { it.isNotEmpty() } ?: rhs.classpath$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val classpath: Set<Path> \/\/ may throw exceptions$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    override val classpath: Set<Path> get() {$/;"	C
classpath	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val classpath: Set<Path> get() = wrapWithStdlib(wrapped.classpath)$/;"	C
classpathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpathOrEmpty get() = lhs.classpathOrEmpty + rhs.classpathOrEmpty$/;"	C
classpathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpathOrEmpty get() = lhs.classpathOrEmpty.takeIf { it.isNotEmpty() } ?: rhs/;"	C
classpathOrEmpty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val classpathOrEmpty: Set<Path> \/\/ does not throw exceptions$/;"	C
classpathOrEmpty	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val classpathOrEmpty: Set<Path> get() = wrapWithStdlib(wrapped.classpathOrEmpty)$/;"	C
classpathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpathOrEmpty get() = lhs.classpathOrEmpty + rhs.classpathOrEmpty$/;"	C
classpathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val classpathOrEmpty get() = lhs.classpathOrEmpty.takeIf { it.isNotEmpty() } ?: rhs/;"	C
classpathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val classpathOrEmpty: Set<Path> \/\/ does not throw exceptions$/;"	C
classpathOrEmpty	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val classpathOrEmpty: Set<Path> get() = wrapWithStdlib(wrapped.classpathOrEmpty)$/;"	C
clean	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun clean() {$/;"	m
clean	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun clean() {$/;"	m
clear	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun clear() {}$/;"	m
clear	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun clear() {}$/;"	m
clearDiagnostics	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun clearDiagnostics(uri: URI) {$/;"	m
clearDiagnostics	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun clearDiagnostics(uri: URI) {$/;"	m
clearLint	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun clearLint(): List<URI> {$/;"	m
clearLint	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun clearLint(): List<URI> {$/;"	m
client	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private lateinit var client: LanguageClient$/;"	v
client	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private lateinit var client: LanguageClient$/;"	v
clientCapabilities	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^        val clientCapabilities = params.capabilities$/;"	C
clientCapabilities	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^        val clientCapabilities = params.capabilities$/;"	C
close	grammars/kotlin.configuration.json	/^	   { "open": "\/*", "close": " *\/", "notIn": ["string"] }$/;"	s	object:autoClosingPairs.5
close	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	s	object:autoClosingPairs.3
close	grammars/kotlin.configuration.json	/^       { "open": "(", "close": ")" },$/;"	s	object:autoClosingPairs.2
close	grammars/kotlin.configuration.json	/^       { "open": "[", "close": "]" },$/;"	s	object:autoClosingPairs.1
close	grammars/kotlin.configuration.json	/^       { "open": "\\"", "close": "\\"", "notIn": ["string"] },$/;"	s	object:autoClosingPairs.4
close	grammars/kotlin.configuration.json	/^       { "open": "{", "close": "}" },$/;"	s	object:autoClosingPairs.0
close	server/bin/main/org/javacs/kt/Compiler.kt	/^    override fun close() {$/;"	m
close	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    override fun close() {$/;"	m
close	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun close() {$/;"	m
close	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun close() {$/;"	m
close	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun close(uri: URI) {$/;"	m
close	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        override fun close() {$/;"	m
close	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    override fun close() {$/;"	m
close	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    override fun close() {$/;"	m
close	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun close() {$/;"	m
close	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun close() {$/;"	m
close	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun close(uri: URI) {$/;"	m
close	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        override fun close() {$/;"	m
close	shared/bin/main/org/javacs/kt/Logger.kt	/^    override fun close() {}$/;"	m
close	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^    override fun close() {$/;"	m
close	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    override fun close() {}$/;"	m
close	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^    override fun close() {$/;"	m
closed	server/bin/main/org/javacs/kt/Compiler.kt	/^    private var closed = false$/;"	v
closed	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private var closed = false$/;"	v
cmd	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val cmd = script.toString()$/;"	C
cmd	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val cmd = script.toString()$/;"	C
code	grammars/Kotlin.tmLanguage.json	/^		"code": {$/;"	o	object:repository
code	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val code = extractRange(params.textDocument.content, params.range)$/;"	C
code	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val code = params.textDocument.content$/;"	C
code	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun code(diagnostic: KotlinDiagnostic) =$/;"	m
code	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val code = extractRange(params.textDocument.content, params.range)$/;"	C
code	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val code = params.textDocument.content$/;"	C
code	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun code(diagnostic: KotlinDiagnostic) =$/;"	m
codeAction	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun codeAction(params: CodeActionParams): CompletableFuture<List<Either<Command, Co/;"	m
codeAction	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun codeAction(params: CodeActionParams): CompletableFuture<List<Either<Command, Co/;"	m
codeLens	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun codeLens(params: CodeLensParams): CompletableFuture<List<CodeLens>> {$/;"	m
codeLens	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun codeLens(params: CodeLensParams): CompletableFuture<List<CodeLens>> {$/;"	m
com.beust.jcommander.JCommander	server/bin/main/org/javacs/kt/Main.kt	/^import com.beust.jcommander.JCommander$/;"	I
com.beust.jcommander.JCommander	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import com.beust.jcommander.JCommander$/;"	I
com.beust.jcommander.Parameter	server/bin/main/org/javacs/kt/Main.kt	/^import com.beust.jcommander.Parameter$/;"	I
com.beust.jcommander.Parameter	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import com.beust.jcommander.Parameter$/;"	I
com.google.common.cache.CacheBuilder	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import com.google.common.cache.CacheBuilder$/;"	I
com.google.common.cache.CacheBuilder	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import com.google.common.cache.CacheBuilder$/;"	I
com.google.gson.Gson	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.Gson$/;"	I
com.google.gson.Gson	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.Gson$/;"	I
com.google.gson.JsonElement	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.JsonElement$/;"	I
com.google.gson.JsonElement	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.JsonElement$/;"	I
com.google.gson.JsonObject	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.JsonObject$/;"	I
com.google.gson.JsonObject	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import com.google.gson.JsonObject$/;"	I
com.pinterest.ktlint.core.KtLint	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.core.KtLint$/;"	I
com.pinterest.ktlint.core.KtLint	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.core.KtLint$/;"	I
com.pinterest.ktlint.core.LintError	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.core.LintError$/;"	I
com.pinterest.ktlint.core.LintError	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.core.LintError$/;"	I
com.pinterest.ktlint.ruleset.standard.StandardRuleSetProvider	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.ruleset.standard.StandardRuleSetProvider$/;"	I
com.pinterest.ktlint.ruleset.standard.StandardRuleSetProvider	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^import com.pinterest.ktlint.ruleset.standard.StandardRuleSetProvider$/;"	I
combined	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val combined = listOf(buildScriptsContext, sourcesContext).filterNotNull() + same.map { /;"	C
combined	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val combined = listOf(buildScriptsContext, sourcesContext).filterNotNull() + same.map { /;"	C
command	.vscode/tasks.json	/^            "command": "gradle build",$/;"	s	object:tasks.0
command	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val command = "$gradle ${tmpScripts.map { "-I $it" }.joinToString(" ")} ${gradleTasks.joinTo/;"	C
command	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val command = "$mvnCommand dependency:list -DincludeScope=test -DoutputFile=$mavenOutput"$/;"	C
command	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val command = "$gradle ${tmpScripts.map { "-I $it" }.joinToString(" ")} ${gradleTasks.joinTo/;"	C
command	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val command = "$mvnCommand dependency:list -DincludeScope=test -DoutputFile=$mavenOutput"$/;"	C
command_output	scripts/bump_version.py	/^def command_output(cmd, cwd):$/;"	f
comment-block	grammars/Kotlin.tmLanguage.json	/^		"comment-block": {$/;"	o	object:repository
comment-javadoc	grammars/Kotlin.tmLanguage.json	/^		"comment-javadoc": {$/;"	o	object:repository
comment-line	grammars/Kotlin.tmLanguage.json	/^		"comment-line": {$/;"	o	object:repository
comments	grammars/Kotlin.tmLanguage.json	/^		"comments": {$/;"	o	object:repository
comments	grammars/kotlin.configuration.json	/^	"comments": {$/;"	o
companionFun	server/bin/test/completions/Statics.kt	/^        fun companionFun() {$/;"	m
companionFun	server/src/test/resources/completions/Statics.kt	/^        fun companionFun() {$/;"	m
compare	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val compare = leftRev.compareTo(rightRev)$/;"	C
compare	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val compare = leftRev.compareTo(rightRev)$/;"	C
compareVersions	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun compareVersions(left: Path, right: Path): Int {$/;"	m
compareVersions	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun compareVersions(left: Path, right: Path): Int {$/;"	m
compile	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val compile: BindingContext,$/;"	C
compile	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun compile() = parse().apply { doCompile() }$/;"	m
compile	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val compile: BindingContext,$/;"	C
compile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun compile() = parse().apply { doCompile() }$/;"	m
compileAndUpdate	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun compileAndUpdate(changed: List<SourceFile>, kind: CompilationKind): BindingContext? /;"	m
compileAndUpdate	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun compileAndUpdate(changed: List<SourceFile>, kind: CompilationKind): BindingContext? /;"	m
compileEnv	server/bin/main/org/javacs/kt/Compiler.kt	/^            val compileEnv = compileEnvironmentFor(kind)$/;"	C
compileEnv	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^            val compileEnv = compileEnvironmentFor(kind)$/;"	C
compileEnvironmentFor	server/bin/main/org/javacs/kt/Compiler.kt	/^    private fun compileEnvironmentFor(kind: CompilationKind): CompilationEnvironment = when (kin/;"	m
compileEnvironmentFor	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private fun compileEnvironmentFor(kind: CompilationKind): CompilationEnvironment = when (kin/;"	m
compileFile	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^    fun compileFile(): CompiledFile = Compiler(setOf(), setOf()).use { compiler ->$/;"	m
compileFile	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^    fun compileFile(): CompiledFile = Compiler(setOf(), setOf()).use { compiler ->$/;"	m
compileFiles	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun compileFiles(all: Collection<URI>): BindingContext {$/;"	m
compileFiles	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun compileFiles(all: Collection<URI>): BindingContext {$/;"	m
compileIfChanged	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun compileIfChanged() = parseIfChanged().apply { doCompileIfChanged() }$/;"	m
compileIfChanged	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun compileIfChanged() = parseIfChanged().apply { doCompileIfChanged() }$/;"	m
compileIfNull	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun compileIfNull() = parseIfChanged().apply { doCompileIfNull() }$/;"	m
compileIfNull	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun compileIfNull() = parseIfChanged().apply { doCompileIfNull() }$/;"	m
compileKtExpression	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun compileKtExpression(expression: KtExpression, scopeWithImports: LexicalScope, sourcePath/;"	m
compileKtExpression	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun compileKtExpression(expression: KtExpression, scopeWithImports: LexicalScope, sourcePath/;"	m
compileKtFile	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun compileKtFile(file: KtFile, sourcePath: Collection<KtFile>, kind: CompilationKind = Comp/;"	m
compileKtFile	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun compileKtFile(file: KtFile, sourcePath: Collection<KtFile>, kind: CompilationKind = Comp/;"	m
compileKtFiles	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun compileKtFiles(files: Collection<KtFile>, sourcePath: Collection<KtFile>, kind: Compilat/;"	m
compileKtFiles	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun compileKtFiles(files: Collection<KtFile>, sourcePath: Collection<KtFile>, kind: Compilat/;"	m
compileLock	server/bin/main/org/javacs/kt/Compiler.kt	/^    private val compileLock = ReentrantLock() \/\/ TODO: Lock at file-level$/;"	C
compileLock	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private val compileLock = ReentrantLock() \/\/ TODO: Lock at file-level$/;"	C
compiled	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val compiled = if (shouldRecompile) sp.currentVersion(uri) else sp.latestCompiledVersion/;"	C
compiled	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val compiled = if (shouldRecompile) sp.currentVersion(uri) else sp.latestCompiledVersion/;"	C
compiledContainer	server/bin/main/org/javacs/kt/SourcePath.kt	/^        var compiledContainer: ComponentProvider? = null,$/;"	v
compiledContainer	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        var compiledContainer: ComponentProvider? = null,$/;"	v
compiledContext	server/bin/main/org/javacs/kt/SourcePath.kt	/^        var compiledContext: BindingContext? = null,$/;"	v
compiledContext	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        var compiledContext: BindingContext? = null,$/;"	v
compiledFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^        var compiledFile: KtFile? = null,$/;"	v
compiledFile	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^    val compiledFile = compileFile()$/;"	C
compiledFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        var compiledFile: KtFile? = null,$/;"	v
compiledFile	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^    val compiledFile = compileFile()$/;"	C
compiledJavaFiles	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private val compiledJavaFiles = ConcurrentHashMap<Path, PsiFile>()$/;"	C
compiler	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    var compiler = Compiler(javaSourcePath, classPath, buildScriptClassPath)$/;"	v
compiler	server/bin/main/org/javacs/kt/Configuration.kt	/^    val compiler: CompilerConfiguration = CompilerConfiguration(),$/;"	C
compiler	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val compiler = config.compiler$/;"	C
compiler	server/bin/test/org/javacs/kt/CompilerTest.kt	/^    val compiler = Compiler(setOf(), setOf())$/;"	C
compiler	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^        val compiler = languageServer.classPath.compiler$/;"	C
compiler	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    var compiler = Compiler(javaSourcePath, classPath, buildScriptClassPath)$/;"	v
compiler	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val compiler: CompilerConfiguration = CompilerConfiguration(),$/;"	C
compiler	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val compiler = config.compiler$/;"	C
compiler	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^    val compiler = Compiler(setOf(), setOf())$/;"	C
compiler	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^        val compiler = languageServer.classPath.compiler$/;"	C
completableElement	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun completableElement(file: CompiledFile, cursor: Int): KtElement? {$/;"	m
completableElement	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun completableElement(file: CompiledFile, cursor: Int): KtElement? {$/;"	m
completeBackquotedFunction	server/bin/test/completions/BackquotedFunction.kt	/^private fun completeBackquotedFunction() {$/;"	m
completeBackquotedFunction	server/src/test/resources/completions/BackquotedFunction.kt	/^private fun completeBackquotedFunction() {$/;"	m
completeIdentifierInsideCall	server/bin/test/completions/InstanceMember.kt	/^private fun completeIdentifierInsideCall() {$/;"	m
completeIdentifierInsideCall	server/src/test/resources/completions/InstanceMember.kt	/^private fun completeIdentifierInsideCall() {$/;"	m
completeMembers	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun completeMembers(file: CompiledFile, cursor: Int, receiverExpr: KtExpression, unwrapN/;"	m
completeMembers	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun completeMembers(file: CompiledFile, cursor: Int, receiverExpr: KtExpression, unwrapN/;"	m
completeQuestionDot	server/bin/test/completions/QuestionDot.kt	/^private fun completeQuestionDot(s: String?) {$/;"	m
completeQuestionDot	server/src/test/resources/completions/QuestionDot.kt	/^private fun completeQuestionDot(s: String?) {$/;"	m
completeStatics	server/bin/test/completions/Statics.kt	/^private fun completeStatics() {$/;"	m
completeStatics	server/src/test/resources/completions/Statics.kt	/^private fun completeStatics() {$/;"	m
completeTypeMembers	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun completeTypeMembers(type: KotlinType): Sequence<DeclarationDescriptor> =$/;"	m
completeTypeMembers	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun completeTypeMembers(type: KotlinType): Sequence<DeclarationDescriptor> =$/;"	m
completion	server/bin/main/org/javacs/kt/Configuration.kt	/^    val completion: CompletionConfiguration = CompletionConfiguration(),$/;"	C
completion	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun completion(position: CompletionParams) = async.compute {$/;"	m
completion	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val completion = config.completion$/;"	C
completion	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val completion: CompletionConfiguration = CompletionConfiguration(),$/;"	C
completion	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun completion(position: CompletionParams) = async.compute {$/;"	m
completion	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val completion = config.completion$/;"	C
completionItem	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun completionItem(d: DeclarationDescriptor, surroundingElement: KtElement, file: Compil/;"	m
completionItem	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun completionItem(d: DeclarationDescriptor, surroundingElement: KtElement, file: Compil/;"	m
completionParams	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun completionParams(relativePath: String, line: Int, column: Int): CompletionParams {$/;"	m
completionParams	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun completionParams(relativePath: String, line: Int, column: Int): CompletionParams {$/;"	m
completions	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^            val completions = completions(file, cursor, config.completion)$/;"	C
completions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val completions = elementCompletions(file, cursor, surroundingElement)$/;"	C
completions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^fun completions(file: CompiledFile, cursor: Int, config: CompletionConfiguration): CompletionLis/;"	m
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 1/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 2/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 3/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 4/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 5/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 6/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 7/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 8/;"	C
completions	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 9/;"	C
completions	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 7/;"	C
completions	server/bin/test/org/javacs/kt/ScriptTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 3/;"	C
completions	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^            val completions = completions(file, cursor, config.completion)$/;"	C
completions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val completions = elementCompletions(file, cursor, surroundingElement)$/;"	C
completions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^fun completions(file: CompiledFile, cursor: Int, config: CompletionConfiguration): CompletionLis/;"	m
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 1/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 2/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 3/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 4/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 5/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 6/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 7/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 8/;"	C
completions	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 9/;"	C
completions	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 7/;"	C
completions	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^        val completions = languageServer.textDocumentService.completion(completionParams(file, 3/;"	C
config	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val config = Configuration()$/;"	C
config	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val config: Configuration,$/;"	C
config	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val config: Configuration$/;"	C
config	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val config: ExternalSourcesConfiguration,$/;"	C
config	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    val config = createJvmCompilationConfigurationFromTemplate<SimpleScript> {$/;"	C
config	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val config = Configuration()$/;"	C
config	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val config: Configuration,$/;"	C
config	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val config: Configuration$/;"	C
config	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val config: ExternalSourcesConfiguration,$/;"	C
config	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    val config = createJvmCompilationConfigurationFromTemplate<SimpleScript> {$/;"	C
config	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val config = File.createTempFile("classpath", ".gradle")$/;"	C
config	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val config = File.createTempFile("classpath", ".gradle")$/;"	C
configurations	.vscode/launch.json	/^    "configurations": [$/;"	a
confirm	scripts/utils/cli.py	/^def confirm(what):$/;"	f
connect	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun connect(client: LanguageClient) {$/;"	m
connect	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    fun connect(client: LanguageClient) {$/;"	m
connect	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun connect(client: LanguageClient): Unit {$/;"	m
connect	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun connect(client: LanguageClient) {$/;"	m
connect	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    fun connect(client: LanguageClient) {$/;"	m
connect	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun connect(client: LanguageClient): Unit {$/;"	m
connectErrorBackend	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun connectErrorBackend(errBackend: (LogMessage) -> Unit) {$/;"	m
connectErrorBackend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun connectErrorBackend(errBackend: (LogMessage) -> Unit) {$/;"	m
connectJULFrontend	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun connectJULFrontend() {$/;"	m
connectJULFrontend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun connectJULFrontend() {$/;"	m
connectLoggingBackend	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private fun connectLoggingBackend(client: LanguageClient) {$/;"	m
connectLoggingBackend	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private fun connectLoggingBackend(client: LanguageClient) {$/;"	m
connectOutputBackend	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun connectOutputBackend(outBackend: (LogMessage) -> Unit) {$/;"	m
connectOutputBackend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun connectOutputBackend(outBackend: (LogMessage) -> Unit) {$/;"	m
connectStdioBackend	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun connectStdioBackend() {$/;"	m
connectStdioBackend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun connectStdioBackend() {$/;"	m
connection	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^        val connection = openJarURLConnection()$/;"	C
connection	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^        val connection = openJarURLConnection()$/;"	C
container	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val container: ComponentProvider,$/;"	C
container	server/bin/main/org/javacs/kt/Compiler.kt	/^        val container = TopDownAnalyzerFacadeForJVM.createContainer($/;"	C
container	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val container = declaration.containingDeclaration?.name?.toString() ?: "<top-level>"$/;"	C
container	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val container = source.parents.filterIsInstance<KtDeclaration>().firstOrNull() ?: re/;"	C
container	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            var container = source.parents.filterIsInstance<KtDeclaration>().firstOrNull() ?: re/;"	v
container	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val container = CompilerFixtures.createContainer($/;"	C
container	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val container: ComponentProvider,$/;"	C
container	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val container = TopDownAnalyzerFacadeForJVM.createContainer($/;"	C
container	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val container = declaration.containingDeclaration?.name?.toString() ?: "<top-level>"$/;"	C
container	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val container = source.parents.filterIsInstance<KtDeclaration>().firstOrNull() ?: re/;"	C
container	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            var container = source.parents.filterIsInstance<KtDeclaration>().firstOrNull() ?: re/;"	v
container	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val container = CompilerFixtures.createContainer($/;"	C
containsCharactersInOrder	server/bin/main/org/javacs/kt/completion/Completions.kt	/^fun containsCharactersInOrder($/;"	m
containsCharactersInOrder	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^fun containsCharactersInOrder(candidate: CharSequence, pattern: CharSequence, caseSensitive: Boo/;"	m
content	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val content: String,$/;"	C
content	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^                val content = sp.content(parseURI(position.textDocument.uri))$/;"	C
content	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val content = sp.content(uri)$/;"	C
content	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val content = contentProvider.contentOf(uri)$/;"	C
content	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val content = convertLineSeparators(source.content)$/;"	C
content	server/bin/main/org/javacs/kt/SourcePath.kt	/^            val content = it.toFile().readText()$/;"	C
content	server/bin/main/org/javacs/kt/SourcePath.kt	/^        var content: String,$/;"	v
content	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun content(uri: URI): String = sourceFile(uri).content$/;"	m
content	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^    val content = diagnostic.psiFile.text$/;"	C
content	server/bin/main/org/javacs/kt/position/Position.kt	/^    val content = try { expr.containingFile?.text } catch (e: NullPointerException) { null }$/;"	C
content	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val content = Files.readAllLines(file).joinToString("\\n")$/;"	C
content	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val content = Files.readAllLines(file).joinToString("\\n")$/;"	C
content	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val content = Files.readAllLines(file1).joinToString("\\n")$/;"	C
content	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val content = file.toFile().readText()$/;"	C
content	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val content: String,$/;"	C
content	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^                val content = sp.content(parseURI(position.textDocument.uri))$/;"	C
content	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val content = sp.content(uri)$/;"	C
content	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val content = contentProvider.contentOf(uri)$/;"	C
content	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val content = convertLineSeparators(source.content)$/;"	C
content	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^                val content = it.toFile().readText()$/;"	C
content	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        var content: String,$/;"	v
content	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun content(uri: URI): String = sourceFile(uri).content$/;"	m
content	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^    val content = diagnostic.psiFile.text$/;"	C
content	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val content = try { expr.containingFile?.text } catch (e: NullPointerException) { null }$/;"	C
content	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val content = Files.readAllLines(file).joinToString("\\n")$/;"	C
content	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val content = Files.readAllLines(file).joinToString("\\n")$/;"	C
content	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val content = Files.readAllLines(file1).joinToString("\\n")$/;"	C
content	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val content = file.toFile().readText()$/;"	C
contentAndOffsetFromElement	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun contentAndOffsetFromElement(psi: PsiElement, parent: KtElement, asReference: Boo/;"	m
contentAndOffsetFromElement	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun contentAndOffsetFromElement(psi: PsiElement, parent: KtElement, asReference: Boo/;"	m
contentName	grammars/Kotlin.tmLanguage.json	/^			"contentName": "entity.name.package.kotlin",$/;"	s	object:repository.import
contentName	grammars/Kotlin.tmLanguage.json	/^			"contentName": "entity.name.package.kotlin",$/;"	s	object:repository.package
contentName	grammars/codeblock.json	/^			"contentName": "meta.embedded.block.kotlin",$/;"	s	object:repository.kotlin-code-block
contentOf	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^    fun contentOf(uri: URI): String = when (uri.scheme) {$/;"	m
contentOf	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^    fun contentOf(uri: URI): String = when (uri.scheme) {$/;"	m
contentProvider	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val contentProvider: URIContentProvider$/;"	C
contentProvider	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private val contentProvider: URIContentProvider$/;"	C
contentProvider	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val contentProvider: URIContentProvider$/;"	C
contentProvider	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private val contentProvider: URIContentProvider$/;"	C
contents	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val contents: String = cachedContents[key] ?: run {$/;"	C
contents	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^        val contents = hover.contents.left.first().right$/;"	C
contents	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val contents = hover.contents.left.first().right$/;"	C
contents	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val contents: String = cachedContents[key] ?: run {$/;"	C
contents	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^        val contents = hover.contents.left.first().right$/;"	C
contents	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val contents = hover.contents.left.first().right$/;"	C
context	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val context = bindingContextOf(surroundingExpr, scope)$/;"	C
context	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val context = sp.compileFiles(files)$/;"	C
context	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val context = bindingContextOf(surroundingExpr, scope)$/;"	C
context	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val context = sp.compileFiles(files)$/;"	C
control-keywords	grammars/Kotlin.tmLanguage.json	/^		"control-keywords": {$/;"	o	object:repository
convertDiagnostic	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^fun convertDiagnostic(diagnostic: KotlinDiagnostic): List<Pair<URI, LangServerDiagnostic>> {$/;"	m
convertDiagnostic	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^fun convertDiagnostic(diagnostic: KotlinDiagnostic): List<Pair<URI, LangServerDiagnostic>> {$/;"	m
convertJavaToKotlin	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^fun convertJavaToKotlin(javaCode: String, compiler: Compiler): String {$/;"	m
convertJavaToKotlin	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^fun convertJavaToKotlin(javaCode: String, compiler: Compiler): String {$/;"	m
convertToKotlinIfNeeded	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private fun convertToKotlinIfNeeded(javaCode: String): String = if (config.autoConvertToKotl/;"	m
convertToKotlinIfNeeded	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private fun convertToKotlinIfNeeded(javaCode: String): String = if (config.autoConvertToKotl/;"	m
convertedKotlinCode	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^        val convertedKotlinCode = convertJavaToKotlin(javaCode, compiler).replace("\\r\\n", "\\n/;"	C
convertedKotlinCode	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^        val convertedKotlinCode = convertJavaToKotlin(javaCode, compiler).replace("\\r\\n", "\\n/;"	C
counter	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^    var counter = 0$/;"	v
counter	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^    var counter = 0$/;"	v
cp	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val cp: CompilerClassPath,$/;"	C
cp	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private val cp: CompilerClassPath,$/;"	C
cp	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val cp: CompilerClassPath,$/;"	C
cp	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val cp: CompilerClassPath,$/;"	C
cp	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private val cp: CompilerClassPath,$/;"	C
cp	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val cp: CompilerClassPath,$/;"	C
createContainer	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun createContainer(sourcePath: Collection<KtFile>): Pair<ComponentProvider, BindingTraceCon/;"	m
createContainer	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun createContainer(sourcePath: Collection<KtFile>): Pair<ComponentProvider, BindingTraceCon/;"	m
createKtDeclaration	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun createKtDeclaration(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: C/;"	m
createKtDeclaration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun createKtDeclaration(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: C/;"	m
createKtExpression	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun createKtExpression(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: Co/;"	m
createKtExpression	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun createKtExpression(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: Co/;"	m
createKtFile	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun createKtFile(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: Compilat/;"	m
createKtFile	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun createKtFile(content: String, file: Path = Paths.get("dummy.virtual.kt"), kind: Compilat/;"	m
createLanguageServer	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    private fun createLanguageServer(): KotlinLanguageServer {$/;"	m
createLanguageServer	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    private fun createLanguageServer(): KotlinLanguageServer {$/;"	m
createOutputDirectory	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private fun createOutputDirectory(): Path {$/;"	m
createOutputDirectory	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private fun createOutputDirectory(): Path {$/;"	m
createPsiFile	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun createPsiFile(content: String, file: Path = Paths.get("dummy.virtual.kt"), language: Lan/;"	m
createPsiFile	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun createPsiFile(content: String, file: Path = Paths.get("dummy.virtual.kt"), language: Lan/;"	m
createTempFile	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^    fun createTempFile(prefix: String = "tmp", suffix: String = ""): Path = Files.createTempFile/;"	m
createTempFile	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^    fun createTempFile(prefix: String = "tmp", suffix: String = ""): Path = Files.createTempFile/;"	m
createdOnDisk	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun createdOnDisk(file: Path): Boolean {$/;"	m
createdOnDisk	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun createdOnDisk(uri: URI) {$/;"	m
createdOnDisk	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun createdOnDisk(file: Path): Boolean {$/;"	m
createdOnDisk	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun createdOnDisk(uri: URI) {$/;"	m
current	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var current = previous[maze.end]!!$/;"	v
current	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var current = previous[maze.end]!!$/;"	v
currentChar	shared/bin/main/org/javacs/kt/Logger.kt	/^            val currentChar = msg.get(charIndex)$/;"	C
currentChar	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^            val currentChar = msg.get(charIndex)$/;"	C
currentTask	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^        val currentTask = executor.schedule({ task { currentTaskRef.get()?.isCancelled() ?: fals/;"	C
currentTask	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^        val currentTask = executor.submit { task { currentTaskRef.get()?.isCancelled() ?: false /;"	C
currentTask	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^        val currentTask = executor.schedule({ task { currentTaskRef.get()?.isCancelled() ?: fals/;"	C
currentTask	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^        val currentTask = executor.submit { task { currentTaskRef.get()?.isCancelled() ?: false /;"	C
currentTaskRef	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^        val currentTaskRef = AtomicReference<Future<*>>()$/;"	C
currentTaskRef	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^        val currentTaskRef = AtomicReference<Future<*>>()$/;"	C
currentVersion	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun currentVersion(uri: URI): CompiledFile =$/;"	m
currentVersion	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun currentVersion(uri: URI): CompiledFile =$/;"	m
cursorExpr	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        var cursorExpr = element?.findParent<KtExpression>() ?: return nullResult("Couldn't find/;"	v
cursorExpr	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        var cursorExpr = parseAtPoint(cursor, asReference = true)?.findParent<KtExpression>() ?:/;"	v
cursorExpr	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        var cursorExpr = element?.findParent<KtExpression>() ?: return nullResult("Couldn't find/;"	v
cursorExpr	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        var cursorExpr = parseAtPoint(cursor, asReference = true)?.findParent<KtExpression>() ?:/;"	v
d	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^        val d = LangServerDiagnostic($/;"	C
d	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^        val d = LangServerDiagnostic($/;"	C
dang	server/bin/test/hover/ObjectReference.kt	/^private fun dang() {$/;"	m
dang	server/src/test/resources/hover/ObjectReference.kt	/^private fun dang() {$/;"	m
data	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val data = Array(lines.size) { BooleanArray(longestLine.length) }$/;"	C
data	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val data = Array(lines.size) { BooleanArray(longestLine.length) }$/;"	C
debounce	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^    val debounce = Debouncer(Duration.ofSeconds(1))$/;"	C
debounce	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^    val debounce = Debouncer(Duration.ofSeconds(1))$/;"	C
debounceLint	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    var debounceLint = Debouncer(Duration.ofMillis(config.linting.debounceTime))$/;"	v
debounceLint	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    var debounceLint = Debouncer(Duration.ofMillis(config.linting.debounceTime))$/;"	v
debounceTime	server/bin/main/org/javacs/kt/Configuration.kt	/^    var debounceTime: Long = 250L$/;"	v
debounceTime	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    var debounceTime: Long = 250L$/;"	v
debug	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun debug(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.DEBUG, ms/;"	m
debug	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun debug(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.DEBUG, ms/;"	m
decimal-literal	grammars/Kotlin.tmLanguage.json	/^		"decimal-literal": {$/;"	o	object:repository
declaration	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val declaration = recover.compile[BindingContext.DECLARATION_TO_DESCRIPTOR, element] ?: retu/;"	C
declaration	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val declaration = recover.compile[BindingContext.DECLARATION_TO_DESCRIPTOR, element] ?: retu/;"	C
declarations	server/bin/main/org/javacs/kt/Compiler.kt	/^        val declarations = parse.declarations$/;"	C
declarations	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val declarations = parse.declarations$/;"	C
declaredType	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^        val declaredType = (bindingContext[BindingContext.REFERENCE_TARGET, element] as? Callabl/;"	C
declaredType	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^        val declaredType = (bindingContext[BindingContext.REFERENCE_TARGET, element] as? Callabl/;"	C
decompile	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	fun decompile(compiledClassOrJar: Path, newFileExtension: String): Path {$/;"	m
decompile	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	fun decompile(compiledClassOrJar: Path, newFileExtension: String): Path {$/;"	m
decompileClass	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^	fun decompileClass(compiledClass: Path): Path$/;"	m
decompileClass	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	override fun decompileClass(compiledClass: Path) = decompile(compiledClass, ".java")$/;"	m
decompileClass	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^	fun decompileClass(compiledClass: Path): Path$/;"	m
decompileClass	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	override fun decompileClass(compiledClass: Path) = decompile(compiledClass, ".java")$/;"	m
decompileJar	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^	fun decompileJar(compiledJar: Path): Path$/;"	m
decompileJar	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	override fun decompileJar(compiledJar: Path) = decompile(compiledJar, ".jar")$/;"	m
decompileJar	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^	fun decompileJar(compiledJar: Path): Path$/;"	m
decompileJar	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	override fun decompileJar(compiledJar: Path) = decompile(compiledJar, ".jar")$/;"	m
decompiler	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val decompiler: Decompiler = FernflowerDecompiler()$/;"	C
decompiler	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val decompiler: Decompiler = FernflowerDecompiler()$/;"	C
deepTrace	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun deepTrace(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.DEEP_/;"	m
deepTrace	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun deepTrace(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.DEEP_/;"	m
defaultClassPathResolver	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^fun defaultClassPathResolver(workspaceRoots: Collection<Path>): ClassPathResolver =$/;"	m
defaultClassPathResolver	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^fun defaultClassPathResolver(workspaceRoots: Collection<Path>): ClassPathResolver =$/;"	m
defaultCompileEnvironment	server/bin/main/org/javacs/kt/Compiler.kt	/^    private val defaultCompileEnvironment = CompilationEnvironment(javaSourcePath, classPath)$/;"	C
defaultCompileEnvironment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private val defaultCompileEnvironment = CompilationEnvironment(javaSourcePath, classPath)$/;"	C
definition	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun definition(position: TextDocumentPositionParams): CompletableFuture<Either<List/;"	m
definition	server/bin/test/definition/GoToProperties.kt	/^package definition$/;"	p
definition	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun definition(position: TextDocumentPositionParams): CompletableFuture<Either<List/;"	m
definition	server/src/test/resources/definition/GoToProperties.kt	/^package definition$/;"	p
definitionPattern	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^private val definitionPattern = Regex("(?:class|interface|object|fun)\\\\s+(\\\\w+)")$/;"	C
definitionPattern	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^private val definitionPattern = Regex("(?:class|interface|object|fun)\\\\s+(\\\\w+)")$/;"	C
definitions	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^        val definitions = languageServer.textDocumentService$/;"	C
definitions	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^        val definitions = languageServer.textDocumentService.definition(textDocumentPosition(fil/;"	C
definitions	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^        val definitions = languageServer.textDocumentService.definition(textDocumentPosition(fil/;"	C
delay	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    private val delay: Duration,$/;"	C
delay	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    private val delay: Duration,$/;"	C
delayMs	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    private val delayMs = delay.toMillis()$/;"	C
delayMs	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    private val delayMs = delay.toMillis()$/;"	C
delete	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun delete(uri: URI) {$/;"	m
delete	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun delete(uri: URI) {$/;"	m
deleteIfTemporary	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun deleteIfTemporary(uri: URI): Boolean =$/;"	m
deleteIfTemporary	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun deleteIfTemporary(uri: URI): Boolean =$/;"	m
deletedOnDisk	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun deletedOnDisk(file: Path): Boolean {$/;"	m
deletedOnDisk	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun deletedOnDisk(uri: URI) {$/;"	m
deletedOnDisk	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun deletedOnDisk(file: Path): Boolean {$/;"	m
deletedOnDisk	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun deletedOnDisk(uri: URI) {$/;"	m
dependencies	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val dependencies = findGradleCLIDependencies(command, projectDirectory)$/;"	C
dependencies	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val dependencies = findGradleCLIDependencies(command, projectDirectory)$/;"	C
dependencyResolver	server/bin/main/org/javacs/kt/Compiler.kt	/^                            override val dependencyResolver: DependenciesResolver = object : Dep/;"	C
dependencyResolver	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                            override val dependencyResolver: DependenciesResolver = object : Dep/;"	C
descendants	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val descendants = doc.preOrderTraversal()$/;"	C
descendants	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val descendants = doc.preOrderTraversal()$/;"	C
describeDeclaration	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun describeDeclaration(declaration: DeclarationDescriptor): String {$/;"	m
describeDeclaration	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun describeDeclaration(declaration: DeclarationDescriptor): String {$/;"	m
describeExpression	server/bin/main/org/javacs/kt/Compiler.kt	/^private fun describeExpression(expression: String): String = expression.lines().let { lines ->$/;"	m
describeExpression	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^private fun describeExpression(expression: String): String = expression.lines().let { lines ->$/;"	m
describePosition	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun describePosition(offset: Int, oldContent: Boolean = false): String {$/;"	m
describePosition	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun describePosition(position: TextDocumentPositionParams): String {$/;"	m
describePosition	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun describePosition(offset: Int, oldContent: Boolean = false): String {$/;"	m
describePosition	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun describePosition(position: TextDocumentPositionParams): String {$/;"	m
describeRange	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun describeRange(range: TextRange, oldContent: Boolean = false): String {$/;"	m
describeRange	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun describeRange(range: TextRange, oldContent: Boolean = false): String {$/;"	m
describeURI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^fun describeURI(uri: String): String = describeURI(parseURI(uri))$/;"	m
describeURI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^fun describeURI(uri: URI): String =$/;"	m
describeURI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^fun describeURI(uri: String): String = describeURI(parseURI(uri))$/;"	m
describeURI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^fun describeURI(uri: URI): String =$/;"	m
describeURIs	shared/bin/main/org/javacs/kt/util/URIs.kt	/^fun describeURIs(uris: Collection<URI>): String =$/;"	m
describeURIs	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^fun describeURIs(uris: Collection<URI>): String =$/;"	m
descriptor	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^        val descriptor = bindingContext[BindingContext.DECLARATION_TO_DESCRIPTOR, element]$/;"	C
descriptor	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^        val descriptor = bindingContext[BindingContext.DECLARATION_TO_DESCRIPTOR, element]$/;"	C
descriptors	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    var descriptors = emptySequence<DeclarationDescriptor>()$/;"	v
descriptors	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    var descriptors = emptySequence<DeclarationDescriptor>()$/;"	v
deselectAll	shared/build/reports/tests/test/js/report.js	/^    function deselectAll() {$/;"	f
destination	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^    var destination = location(target)$/;"	v
destination	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^    var destination = location(target)$/;"	v
diagnostics	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    val diagnostics = mutableListOf<Diagnostic>()$/;"	C
diagnostics	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    val diagnostics = mutableListOf<Diagnostic>()$/;"	C
didChange	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didChange(params: DidChangeTextDocumentParams) {$/;"	m
didChange	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didChange(params: DidChangeTextDocumentParams) {$/;"	m
didChangeConfiguration	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeConfiguration(params: DidChangeConfigurationParams) {$/;"	m
didChangeConfiguration	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeConfiguration(params: DidChangeConfigurationParams) {$/;"	m
didChangeWatchedFiles	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeWatchedFiles(params: DidChangeWatchedFilesParams) {$/;"	m
didChangeWatchedFiles	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeWatchedFiles(params: DidChangeWatchedFilesParams) {$/;"	m
didChangeWorkspaceFolders	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeWorkspaceFolders(params: DidChangeWorkspaceFoldersParams) {$/;"	m
didChangeWorkspaceFolders	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun didChangeWorkspaceFolders(params: DidChangeWorkspaceFoldersParams) {$/;"	m
didClose	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didClose(params: DidCloseTextDocumentParams) {$/;"	m
didClose	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didClose(params: DidCloseTextDocumentParams) {$/;"	m
didOpen	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didOpen(params: DidOpenTextDocumentParams) {$/;"	m
didOpen	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didOpen(params: DidOpenTextDocumentParams) {$/;"	m
didSave	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didSave(params: DidSaveTextDocumentParams) {$/;"	m
didSave	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun didSave(params: DidSaveTextDocumentParams) {$/;"	m
die	gradlew	/^die () {$/;"	f
die	server/bin/test/additionalWorkspace/gradlew	/^die () {$/;"	f
die	server/build/install/server/bin/kotlin-language-server	/^die () {$/;"	f
die	server/build/scripts/kotlin-language-server	/^die () {$/;"	f
die	server/src/test/resources/additionalWorkspace/gradlew	/^die () {$/;"	f
dirPath	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^    private val dirPath: Path = Files.createTempDirectory(prefix)$/;"	C
dirPath	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^    private val dirPath: Path = Files.createTempDirectory(prefix)$/;"	C
disk	server/bin/main/org/javacs/kt/SourceFiles.kt	/^                val disk = readFromDisk(uri, temporary = false)$/;"	C
disk	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^                val disk = readFromDisk(uri, temporary = false)$/;"	C
disposable	server/bin/main/org/javacs/kt/Compiler.kt	/^    private val disposable = Disposer.newDisposable()$/;"	C
disposable	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private val disposable = Disposer.newDisposable()$/;"	C
distributionBase	gradle/wrapper/gradle-wrapper.properties	/^distributionBase=GRADLE_USER_HOME$/;"	k
distributionBase	server/bin/test/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionBase=GRADLE_USER_HOME$/;"	k
distributionBase	server/src/test/resources/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionBase=GRADLE_USER_HOME$/;"	k
distributionPath	gradle/wrapper/gradle-wrapper.properties	/^distributionPath=wrapper\/dists$/;"	k
distributionPath	server/bin/test/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionPath=wrapper\/dists$/;"	k
distributionPath	server/src/test/resources/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionPath=wrapper\/dists$/;"	k
distributionUrl	gradle/wrapper/gradle-wrapper.properties	/^distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-6.6.1-bin.zip$/;"	k
distributionUrl	server/bin/test/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-5.6-rc-1-bin.zip$/;"	k
distributionUrl	server/src/test/resources/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-5.6-rc-1-bin.zip$/;"	k
div.deselected	shared/build/reports/tests/test/css/base-style.css	/^div.deselected {$/;"	c
div.failures	shared/build/reports/tests/test/css/style.css	/^div.failures, #successRate.failures {$/;"	c
div.selected	shared/build/reports/tests/test/css/base-style.css	/^div.selected {$/;"	c
div.success	shared/build/reports/tests/test/css/style.css	/^div.success, #successRate.success {$/;"	c
div.tab	shared/build/reports/tests/test/css/base-style.css	/^div.tab {$/;"	c
div.tab table	shared/build/reports/tests/test/css/base-style.css	/^div.tab table {$/;"	s
div.tab table	shared/build/reports/tests/test/css/base-style.css	/^div.tab th, div.tab table {$/;"	s
div.tab td	shared/build/reports/tests/test/css/base-style.css	/^div.tab td {$/;"	s
div.tab td.numeric	shared/build/reports/tests/test/css/base-style.css	/^div.tab td.numeric, div.tab th.numeric {$/;"	c
div.tab td:first-child	shared/build/reports/tests/test/css/base-style.css	/^div.tab td:first-child {$/;"	s
div.tab th	shared/build/reports/tests/test/css/base-style.css	/^div.tab th {$/;"	s
div.tab th	shared/build/reports/tests/test/css/base-style.css	/^div.tab th, div.tab table {$/;"	s
div.tab th.numeric	shared/build/reports/tests/test/css/base-style.css	/^div.tab td.numeric, div.tab th.numeric {$/;"	c
div.tab th:first-child	shared/build/reports/tests/test/css/base-style.css	/^div.tab th:first-child {$/;"	s
doCompile	server/bin/main/org/javacs/kt/SourcePath.kt	/^        private fun doCompile() {$/;"	m
doCompile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        private fun doCompile() {$/;"	m
doCompileIfChanged	server/bin/main/org/javacs/kt/SourcePath.kt	/^        private fun doCompileIfChanged() {$/;"	m
doCompileIfChanged	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        private fun doCompileIfChanged() {$/;"	m
doCompileIfNull	server/bin/main/org/javacs/kt/SourcePath.kt	/^        private fun doCompileIfNull() {$/;"	m
doCompileIfNull	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        private fun doCompileIfNull() {$/;"	m
doDocumentSymbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun doDocumentSymbols(element: PsiElement): List<DocumentSymbol> {$/;"	m
doDocumentSymbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun doDocumentSymbols(element: PsiElement): List<DocumentSymbol> {$/;"	m
doFindReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun doFindReferences(file: Path, cursor: Int, sp: SourcePath): Collection<KtElement> {$/;"	m
doFindReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun doFindReferences(file: Path, cursor: Int, sp: SourcePath): Collection<KtElement> {$/;"	m
doLint	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun doLint(cancelCallback: () -> Boolean) {$/;"	m
doLint	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun doLint(cancelCallback: () -> Boolean) {$/;"	m
doLogHidden	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun doLogHidden(target: DeclarationDescriptor, from: DeclarationDescriptor) {$/;"	m
doLogHidden	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun doLogHidden(target: DeclarationDescriptor, from: DeclarationDescriptor) {$/;"	m
doPrepareCompiledFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^        private fun doPrepareCompiledFile(): CompiledFile =$/;"	m
doPrepareCompiledFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        private fun doPrepareCompiledFile(): CompiledFile =$/;"	m
doWorkspaceSymbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun doWorkspaceSymbols(sp: SourcePath): Sequence<PsiNamedElement> =$/;"	m
doWorkspaceSymbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun doWorkspaceSymbols(sp: SourcePath): Sequence<PsiNamedElement> =$/;"	m
doc	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val doc = container.docComment ?: return null$/;"	C
doc	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val doc = source.docComment ?: return null$/;"	C
doc	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val doc = findDoc(declaration) ?: return ""$/;"	C
doc	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val doc = VersionedTextDocumentIdentifier(uri(relativePath).toString(), version++)$/;"	C
doc	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val doc = container.docComment ?: return null$/;"	C
doc	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val doc = source.docComment ?: return null$/;"	C
doc	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val doc = findDoc(declaration) ?: return ""$/;"	C
doc	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val doc = VersionedTextDocumentIdentifier(uri(relativePath).toString(), version++)$/;"	C
docService	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val docService: KotlinTextDocumentService,$/;"	C
docService	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val docService: KotlinTextDocumentService,$/;"	C
docstring	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val docstring = docstring(desc)$/;"	C
docstring	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val docstring = docstring(param)$/;"	C
docstring	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun docstring(declaration: DeclarationDescriptorWithSource): String {$/;"	m
docstring	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val docstring = docstring(desc)$/;"	C
docstring	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val docstring = docstring(param)$/;"	C
docstring	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun docstring(declaration: DeclarationDescriptorWithSource): String {$/;"	m
document	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val document = TextDocumentItem(file.toUri().toString(), "Kotlin", 0, content)$/;"	C
document	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val document = TextDocumentItem(file.toUri().toString(), "Kotlin", 0, content)$/;"	C
documentHighlight	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun documentHighlight(position: TextDocumentPositionParams): CompletableFuture<List/;"	m
documentHighlight	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun documentHighlight(position: TextDocumentPositionParams): CompletableFuture<List/;"	m
documentSymbol	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun documentSymbol(params: DocumentSymbolParams): CompletableFuture<List<Either<Sym/;"	m
documentSymbol	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun documentSymbol(params: DocumentSymbolParams): CompletableFuture<List<Either<Sym/;"	m
documentSymbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^fun documentSymbols(file: KtFile): List<Either<SymbolInformation, DocumentSymbol>> =$/;"	m
documentSymbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^fun documentSymbols(file: KtFile): List<Either<SymbolInformation, DocumentSymbol>> =$/;"	m
doesntLookLikeImport	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun doesntLookLikeImport(importDirective: KtImportDirective): Sequence<DeclarationDescri/;"	m
doesntLookLikeImport	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun doesntLookLikeImport(importDirective: KtImportDirective): Sequence<DeclarationDescri/;"	m
doesntLookLikePackage	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun doesntLookLikePackage(packageDirective: KtPackageDirective): Sequence<DeclarationDes/;"	m
doh	server/bin/test/hover/ObjectReference.kt	/^    fun doh() {$/;"	m
doh	server/src/test/resources/hover/ObjectReference.kt	/^    fun doh() {$/;"	m
door	server/bin/test/formatting/NonFormatted.kt	/^    val     door=Door (  )$/;"	C
door	server/bin/test/org/javacs/kt/FormattingTest.kt	/^    val door = Door()$/;"	C
door	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^    val door = Door()$/;"	C
door	server/src/test/resources/formatting/NonFormatted.kt	/^    val     door=Door (  )$/;"	C
dotOffset	shared/bin/main/org/javacs/kt/util/URIs.kt	/^        val dotOffset = str.lastIndexOf(".")$/;"	C
dotOffset	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^        val dotOffset = str.lastIndexOf(".")$/;"	C
dotParent	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val dotParent = surroundingExpr.parent as? KtDotQualifiedExpression$/;"	C
dotParent	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val dotParent = target.findParent<KtDotQualifiedExpression>()$/;"	C
dotParent	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val dotParent = surroundingExpr.parent as? KtDotQualifiedExpression$/;"	C
dotParent	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val dotParent = target.findParent<KtDotQualifiedExpression>()$/;"	C
doubleDot	server/bin/test/completions/DoubleDot.kt	/^private fun doubleDot(p: String) {$/;"	m
doubleDot	server/src/test/resources/completions/DoubleDot.kt	/^private fun doubleDot(p: String) {$/;"	m
e	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val e = Example()$/;"	C
e	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val e = Example()$/;"	C
edit	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun edit(uri: URI, newVersion: Int, contentChanges: List<TextDocumentContentChangeEvent>) {$/;"	m
edit	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val edit = TextDocumentContentChangeEvent(range, oldText.length, newText)$/;"	C
edit	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun edit(uri: URI, newVersion: Int, contentChanges: List<TextDocumentContentChangeEvent>) {$/;"	m
edit	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val edit = TextDocumentContentChangeEvent(range, oldText.length, newText)$/;"	C
edited	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val edited = compiler.createKtFile(editedText, file)$/;"	C
edited	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val edited = compiler.createKtFile(editedText, file)$/;"	C
editedText	server/bin/test/org/javacs/kt/CompilerTest.kt	/^    val editedText = """$/;"	C
editedText	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^    val editedText = """$/;"	C
edits	server/bin/test/org/javacs/kt/FormattingTest.kt	/^        val edits = languageServer.textDocumentService.formatting(DocumentFormattingParams($/;"	C
edits	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^        val edits = languageServer.textDocumentService.formatting(DocumentFormattingParams($/;"	C
el	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val el = file.elementAtPoint(cursor) ?: return { true }$/;"	C
el	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val el = file.parseAtPoint(cursor - 1) ?: return null$/;"	C
el	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val el = file.elementAtPoint(cursor) ?: return { true }$/;"	C
el	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val el = file.parseAtPoint(cursor - 1) ?: return null$/;"	C
element	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val element = parseAtPoint(cursor, asReference = true)$/;"	C
element	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val element = recover.elementAtPoint(cursor)?.findParent<KtNamedDeclaration>() ?: return emp/;"	C
element	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val element = parseAtPoint(cursor, asReference = true)$/;"	C
element	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val element = recover.elementAtPoint(cursor)?.findParent<KtNamedDeclaration>() ?: return emp/;"	C
elementAtPoint	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun elementAtPoint(cursor: Int): KtElement? {$/;"	m
elementAtPoint	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun elementAtPoint(cursor: Int): KtElement? {$/;"	m
elementCompletionItems	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun elementCompletionItems(file: CompiledFile, cursor: Int, config: CompletionConfigurat/;"	m
elementCompletionItems	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun elementCompletionItems(file: CompiledFile, cursor: Int, config: CompletionConfigurat/;"	m
elementCompletions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun elementCompletions(file: CompiledFile, cursor: Int, surroundingElement: KtElement): /;"	m
elementCompletions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun elementCompletions(file: CompiledFile, cursor: Int, surroundingElement: KtElement): /;"	m
empty	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun empty(message: String): CompletionList {$/;"	m
empty	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun empty(message: String): CompletionList {$/;"	m
empty	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^        val empty = object : ClassPathResolver {$/;"	C
empty	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^        val empty = object : ClassPathResolver {$/;"	C
enabled	server/bin/main/org/javacs/kt/Configuration.kt	/^    var enabled: Boolean = true$/;"	v
enabled	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    var enabled: Boolean = true$/;"	v
end	gradlew.bat	/^:end$/;"	l
end	grammars/Kotlin.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	object:repository.comment-javadoc.patterns.0
end	grammars/Kotlin.tmLanguage.json	/^			"end": "$",$/;"	s	object:repository.annotation-site
end	grammars/Kotlin.tmLanguage.json	/^			"end": "$",$/;"	s	object:repository.comment-line
end	grammars/Kotlin.tmLanguage.json	/^			"end": "'",$/;"	s	object:repository.character
end	grammars/Kotlin.tmLanguage.json	/^			"end": "(\\\\})",$/;"	s	object:repository.string-escape-bracketed
end	grammars/Kotlin.tmLanguage.json	/^			"end": ";|$",$/;"	s	object:repository.import
end	grammars/Kotlin.tmLanguage.json	/^			"end": ";|$",$/;"	s	object:repository.package
end	grammars/Kotlin.tmLanguage.json	/^			"end": "\\"",$/;"	s	object:repository.string
end	grammars/Kotlin.tmLanguage.json	/^			"end": "\\"\\"\\"",$/;"	s	object:repository.string-multiline
end	grammars/Kotlin.tmLanguage.json	/^			"end": "\\\\*\/",$/;"	s	object:repository.comment-block
end	grammars/Kotlin.tmLanguage.json	/^			"end": "\\\\]",$/;"	s	object:repository.annotation-site-list
end	grammars/codeblock.json	/^			"end": "(^|\\\\G)(?=\\\\s*[`~]{3,}\\\\s*$)",$/;"	s	object:repository.kotlin-code-block
end	grammars/kotlin.configuration.json	/^            "end": "^\\\\s*\/\/\\\\s*#endregion"$/;"	s	object:folding.markers
end	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val end = position(c, range.endOffset)$/;"	C
end	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val end = params.range.end$/;"	C
end	server/bin/test/additionalWorkspace/gradlew.bat	/^:end$/;"	l
end	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val end: Point) {}$/;"	C
end	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var end: Point? = null$/;"	v
end	server/build/install/server/bin/kotlin-language-server.bat	/^:end$/;"	l
end	server/build/scripts/kotlin-language-server.bat	/^:end$/;"	l
end	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val end = position(c, range.endOffset)$/;"	C
end	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val end = params.range.end$/;"	C
end	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:end$/;"	l
end	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val end: Point) {}$/;"	C
end	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var end: Point? = null$/;"	v
endCaptures	grammars/Kotlin.tmLanguage.json	/^			"endCaptures": {$/;"	o	object:repository.string-escape-bracketed
environment	server/bin/main/org/javacs/kt/Compiler.kt	/^    val environment: KotlinCoreEnvironment$/;"	C
environment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    val environment: KotlinCoreEnvironment$/;"	C
equals	server/bin/test/references/ReferenceOperator.kt	/^    override fun equals(other: Any?): Boolean = TODO()$/;"	m
equals	server/src/test/resources/references/ReferenceOperator.kt	/^    override fun equals(other: Any?): Boolean = TODO()$/;"	m
equalsIdentifier	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun equalsIdentifier(identifier: String): (DeclarationDescriptor) -> Boolean {$/;"	m
equalsIdentifier	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun equalsIdentifier(identifier: String): (DeclarationDescriptor) -> Boolean =$/;"	m
errBackend	shared/bin/main/org/javacs/kt/Logger.kt	/^    private var errBackend: ((LogMessage) -> Unit)? = null$/;"	v
errBackend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private var errBackend: ((LogMessage) -> Unit)? = null$/;"	v
errQueue	shared/bin/main/org/javacs/kt/Logger.kt	/^    private val errQueue: Queue<LogMessage> = ArrayDeque()$/;"	C
errQueue	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private val errQueue: Queue<LogMessage> = ArrayDeque()$/;"	C
errStream	shared/bin/main/org/javacs/kt/Logger.kt	/^    private val errStream = DelegatePrintStream { logError(LogMessage(LogLevel.ERROR, it.trimEnd/;"	C
errStream	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private val errStream = DelegatePrintStream { logError(LogMessage(LogLevel.ERROR, it.trimEnd/;"	C
error	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun error(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.ERROR, ms/;"	m
error	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun error(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.ERROR, ms/;"	m
errors	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    var errors = ""$/;"	v
errors	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    var errors = ""$/;"	v
errorsThread	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val errorsThread = Thread { stderr.bufferedReader().use { errors += it.readText() } }$/;"	C
errorsThread	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val errorsThread = Thread { stderr.bufferedReader().use { errors += it.readText() } }$/;"	C
escape	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun escape(id: String): String =$/;"	m
escape	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun escape(id: String): String =$/;"	m
eval	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    fun eval(code: SourceCode): ResultWithDiagnostics<EvaluationResult> {$/;"	m
eval	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    fun eval(code: SourceCode): ResultWithDiagnostics<EvaluationResult> {$/;"	m
example	images/Example.kt	/^fun example() = "Hello world!"$/;"	m
example	server/bin/test/completions/MiddleOfFunction.kt	/^    fun example(p: String): String {$/;"	m
example	server/bin/test/references/ReferenceCollectionish.kt	/^    val example = ReferenceCollectionish()$/;"	C
example	server/bin/test/references/ReferenceGetterSetter.kt	/^    val example = ReferenceGetterSetter()$/;"	C
example	server/bin/test/references/ReferenceInvoke.kt	/^    val example = ReferenceInvoke()$/;"	C
example	server/bin/test/references/ReferenceOperator.kt	/^    var example = ReferenceOperator()$/;"	v
example	server/bin/test/references/ReferenceOperatorUsingName.kt	/^    var example = ReferenceOperatorUsingName()$/;"	v
example	server/src/test/resources/completions/MiddleOfFunction.kt	/^    fun example(p: String): String {$/;"	m
example	server/src/test/resources/references/ReferenceCollectionish.kt	/^    val example = ReferenceCollectionish()$/;"	C
example	server/src/test/resources/references/ReferenceGetterSetter.kt	/^    val example = ReferenceGetterSetter()$/;"	C
example	server/src/test/resources/references/ReferenceInvoke.kt	/^    val example = ReferenceInvoke()$/;"	C
example	server/src/test/resources/references/ReferenceOperator.kt	/^    var example = ReferenceOperator()$/;"	v
example	server/src/test/resources/references/ReferenceOperatorUsingName.kt	/^    var example = ReferenceOperatorUsingName()$/;"	v
example2	server/bin/test/references/ReferenceOperator.kt	/^    val example2 = ReferenceEquals()$/;"	C
example2	server/src/test/resources/references/ReferenceOperator.kt	/^    val example2 = ReferenceEquals()$/;"	C
excludedPatterns	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^	private val excludedPatterns = listOf(".*", "bin", "build", "node_modules", "target").map { Fil/;"	C
excludedPatterns	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^	private val excludedPatterns = listOf(".*", "bin", "build", "node_modules", "target").map { Fil/;"	C
exclusions	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private var exclusions = SourceExclusions(workspaceRoots)$/;"	v
exclusions	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private var exclusions = SourceExclusions(workspaceRoots)$/;"	v
execAndReadStdout	shared/bin/main/org/javacs/kt/util/Utils.kt	/^fun execAndReadStdout(shellCommand: String, directory: Path): String {$/;"	m
execAndReadStdout	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^fun execAndReadStdout(shellCommand: String, directory: Path): String {$/;"	m
execAndReadStdoutAndStderr	shared/bin/main/org/javacs/kt/util/Utils.kt	/^fun execAndReadStdoutAndStderr(shellCommand: String, directory: Path): Pair<String, String> {$/;"	m
execAndReadStdoutAndStderr	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^fun execAndReadStdoutAndStderr(shellCommand: String, directory: Path): Pair<String, String> {$/;"	m
execute	gradlew.bat	/^:execute$/;"	l
execute	server/bin/test/additionalWorkspace/gradlew.bat	/^:execute$/;"	l
execute	server/build/install/server/bin/kotlin-language-server.bat	/^:execute$/;"	l
execute	server/build/scripts/kotlin-language-server.bat	/^:execute$/;"	l
execute	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:execute$/;"	l
execute	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^    fun execute(task: () -> Unit) =$/;"	m
execute	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^    fun execute(task: () -> Unit) =$/;"	m
executeCommand	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun executeCommand(params: ExecuteCommandParams): CompletableFuture<Any> {$/;"	m
executeCommand	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun executeCommand(params: ExecuteCommandParams): CompletableFuture<Any> {$/;"	m
executor	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    private val executor: ScheduledExecutorService = Executors.newScheduledThreadPool(1) {$/;"	C
executor	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    private val executor: ScheduledExecutorService = Executors.newScheduledThreadPool(1) {$/;"	C
existing	server/bin/main/org/javacs/kt/SourceFiles.kt	/^            val existing = files[uri]!!$/;"	C
existing	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^            val existing = files[uri]!!$/;"	C
exit	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun exit() {}$/;"	m
exit	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun exit() {}$/;"	m
exitIfNegative	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^    private fun exitIfNegative(call: () -> Int): Int {$/;"	m
exitIfNegative	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^    private fun exitIfNegative(call: () -> Int): Int {$/;"	m
expandForReference	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun expandForReference(cursor: Int, surroundingExpr: KtExpression): KtExpression {$/;"	m
expandForReference	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun expandForReference(cursor: Int, surroundingExpr: KtExpression): KtExpression {$/;"	m
expandForType	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun expandForType(cursor: Int, surroundingExpr: KtExpression): KtExpression {$/;"	m
expandForType	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun expandForType(cursor: Int, surroundingExpr: KtExpression): KtExpression {$/;"	m
expected	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^        val expected = listOf(DocumentSymbol("DocumentSymbols", SymbolKind.Class, Range(Position/;"	C
expected	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^        val expected = listOf(DocumentSymbol("DocumentSymbols", SymbolKind.Class, Range(Position/;"	C
expected	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^                val expected = "${artifact}-${version}.jar"$/;"	C
expected	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^                val expected = "${artifact}-${version}.jar"$/;"	C
expectedKotlinCode	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^        val expectedKotlinCode = workspaceRoot$/;"	C
expectedKotlinCode	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^        val expectedKotlinCode = workspaceRoot$/;"	C
explodeConstructors	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun explodeConstructors(declaration: DeclarationDescriptor): Sequence<DeclarationDescrip/;"	m
explodeConstructors	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun explodeConstructors(declaration: DeclarationDescriptor): Sequence<DeclarationDescrip/;"	m
expression	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val expression = file.parseAtPoint(cursor)?.findParent<KtExpression>() ?: return null$/;"	C
expression	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val expression = file.parseAtPoint(cursor)?.findParent<KtExpression>() ?: return null$/;"	C
expressionType	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val expressionType = bindingContext[BindingContext.EXPRESSION_TYPE_INFO, element]?.type ?: e/;"	C
expressionType	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val expressionType = bindingContext[BindingContext.EXPRESSION_TYPE_INFO, element]?.type ?: e/;"	C
extension	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val extension: String? = uri.fileExtension ?: language?.associatedFileType?.defaultExten/;"	C
extension	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val extension: String? = uri.fileExtension ?: language?.associatedFileType?.defaultExten/;"	C
extensionFunctions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun extensionFunctions(scope: LexicalScope): Sequence<CallableDescriptor> =$/;"	m
extensionFunctions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun extensionFunctions(scope: LexicalScope): Sequence<CallableDescriptor> =$/;"	m
extensions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val extensions = extensionFunctions(lexicalScope).filter { isExtensionFor(receiverTy/;"	C
extensions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val extensions = extensionFunctions(lexicalScope).filter { isExtensionFor(receiverTy/;"	C
externalSources	server/bin/main/org/javacs/kt/Configuration.kt	/^    val externalSources: ExternalSourcesConfiguration = ExternalSourcesConfiguration()$/;"	C
externalSources	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val externalSources = config.externalSources$/;"	C
externalSources	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val externalSources: ExternalSourcesConfiguration = ExternalSourcesConfiguration()$/;"	C
externalSources	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val externalSources = config.externalSources$/;"	C
extractPropertyName	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun extractPropertyName(d: DeclarationDescriptor): String {$/;"	m
extractPropertyName	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun extractPropertyName(d: DeclarationDescriptor): String {$/;"	m
extractRange	server/bin/main/org/javacs/kt/position/Position.kt	/^fun extractRange(content: String, range: Range) =$/;"	m
extractRange	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun extractRange(content: String, range: Range) =$/;"	m
extractToTemporaryFile	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    fun extractToTemporaryFile(dir: TemporaryDirectory): Path = withJarURLConnection {$/;"	m
extractToTemporaryFile	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    fun extractToTemporaryFile(dir: TemporaryDirectory): Path = withJarURLConnection {$/;"	m
extractVersion	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun extractVersion(artifactVersionDir: Path): List<String> {$/;"	m
extractVersion	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun extractVersion(artifactVersionDir: Path): List<String> {$/;"	m
fail	gradlew.bat	/^:fail$/;"	l
fail	server/bin/test/additionalWorkspace/gradlew.bat	/^:fail$/;"	l
fail	server/build/install/server/bin/kotlin-language-server.bat	/^:fail$/;"	l
fail	server/build/scripts/kotlin-language-server.bat	/^:fail$/;"	l
fail	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:fail$/;"	l
fernflower	server/lib/org/jetbrains/fernflower/1.0/fernflower-1.0.pom	/^    <artifactId>fernflower<\/artifactId>$/;"	a	groupId:org.jetbrains
fetch	scripts/utils/teamcity.py	/^    def fetch(self, site_path):$/;"	m	class:TeamCityConnection
fetchSignatureHelpAt	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^fun fetchSignatureHelpAt(file: CompiledFile, cursor: Int): SignatureHelp? {$/;"	m
fetchSignatureHelpAt	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^fun fetchSignatureHelpAt(file: CompiledFile, cursor: Int): SignatureHelp? {$/;"	m
fetchSourceJar	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^	override fun fetchSourceJar(compiledJar: Path) = decompileJar(compiledJar)$/;"	m
fetchSourceJar	server/bin/main/org/javacs/kt/externalsources/SourceJarProvider.kt	/^    fun fetchSourceJar(compiledJar: Path): Path$/;"	m
fetchSourceJar	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^	override fun fetchSourceJar(compiledJar: Path) = decompileJar(compiledJar)$/;"	m
fetchSourceJar	server/src/main/kotlin/org/javacs/kt/externalsources/SourceJarProvider.kt	/^    fun fetchSourceJar(compiledJar: Path): Path$/;"	m
field	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var field = makeField(fieldText)$/;"	v
field	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var field = makeField(fieldText)$/;"	v
file	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val file = parse.toPath().fileName$/;"	C
file	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val file = declaration.findPsi()?.containingFile?.toPath()?.fileName?.toString() ?: "<unknow/;"	C
file	server/bin/main/org/javacs/kt/position/Position.kt	/^                val file = sourceFile.psiFile.toURIString()$/;"	C
file	server/bin/main/org/javacs/kt/position/Position.kt	/^    val file = expr.containingFile.toURIString()$/;"	C
file	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^        val file = element.containingFile$/;"	C
file	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^    val file = d.containingFile$/;"	C
file	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^    val file = "MainWorkspaceFile.kt"$/;"	C
file	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val file = testResourcesRoot().resolve("compiledFile\/CompiledFileExample.kt")$/;"	C
file	server/bin/test/org/javacs/kt/CompilerTest.kt	/^    val file = myTestResources.resolve("FileToEdit.kt")$/;"	C
file	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^    val file = "DocumentSymbols.kt"$/;"	C
file	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val file =  workspaceRoot.resolve(relativePath)$/;"	C
file	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val file = workspaceRoot.resolve(relativePath)$/;"	C
file	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val file = fileSystem.findFileByPath(locate.path)$/;"	C
file	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val file = parse.toPath().fileName$/;"	C
file	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val file = declaration.findPsi()?.containingFile?.toPath()?.fileName?.toString() ?: "<unknow/;"	C
file	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^                val file = sourceFile.psiFile.toURIString()$/;"	C
file	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val file = expr.containingFile.toURIString()$/;"	C
file	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^        val file = element.containingFile$/;"	C
file	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^    val file = d.containingFile$/;"	C
file	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^    val file = "MainWorkspaceFile.kt"$/;"	C
file	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val file = testResourcesRoot().resolve("compiledFile\/CompiledFileExample.kt")$/;"	C
file	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^    val file = myTestResources.resolve("FileToEdit.kt")$/;"	C
file	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^    val file = "DocumentSymbols.kt"$/;"	C
file	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val file =  workspaceRoot.resolve(relativePath)$/;"	C
file	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val file = workspaceRoot.resolve(relativePath)$/;"	C
file	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val file = fileSystem.findFileByPath(URLDecoder.decode(locate.path, StandardCharsets/;"	C
file	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^        val file = File(dir, fileName)$/;"	C
file	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^        val file = File(dir, fileName)$/;"	C
file1	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val file1 = testResourcesRoot().resolve("hover\/Recover.kt")$/;"	C
file1	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val file1 = testResourcesRoot().resolve("hover\/Recover.kt")$/;"	C
fileClassPath	server/bin/main/org/javacs/kt/Compiler.kt	/^                        val fileClassPath = classPath.map { it.toFile() }$/;"	C
fileClassPath	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                        val fileClassPath = classPath.map { it.toFile() }$/;"	C
fileExtension	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    val fileExtension: String?$/;"	C
fileExtension	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    val fileExtension: String?$/;"	C
fileId	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^        val fileId = TextDocumentIdentifier(uri(file).toString())$/;"	C
fileId	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val fileId = TextDocumentIdentifier(file.toUri().toString())$/;"	C
fileId	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^        val fileId = TextDocumentIdentifier(uri(file).toString())$/;"	C
fileId	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val fileId = TextDocumentIdentifier(file.toUri().toString())$/;"	C
fileName	server/bin/main/org/javacs/kt/CompiledFile.kt	/^private fun fileName(file: KtFile): String {$/;"	m
fileName	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val fileName = uri.filePath?.fileName?.toString() ?: return null$/;"	C
fileName	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    val fileName: String$/;"	C
fileName	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^private fun fileName(file: KtFile): String {$/;"	m
fileName	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val fileName = uri.filePath?.fileName?.toString() ?: return null$/;"	C
fileName	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    val fileName: String$/;"	C
fileSymbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun fileSymbols(file: PsiFile): Sequence<PsiNamedElement> =$/;"	m
fileSymbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun fileSymbols(file: PsiFile): Sequence<PsiNamedElement> =$/;"	m
fileTypes	grammars/Kotlin.tmLanguage.json	/^	"fileTypes": [$/;"	a
fileTypes	grammars/codeblock.json	/^	"fileTypes": [],$/;"	a
fileUri	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val fileUri = gson.fromJson(args[0] as JsonElement, String::class.java)$/;"	C
fileUri	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val fileUri = gson.fromJson(args[0] as JsonElement, String::class.java)$/;"	C
files	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val files = clearLint()$/;"	C
files	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val files = NotifySourcePath(sp)$/;"	C
files	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val files = mutableMapOf<URI, SourceVersion>()$/;"	C
files	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private val files = mutableMapOf<URI, SourceFile>()$/;"	C
files	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val files = clearLint()$/;"	C
files	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val files = NotifySourcePath(sp)$/;"	C
files	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val files = mutableMapOf<URI, SourceVersion>()$/;"	C
files	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private val files = mutableMapOf<URI, SourceFile>()$/;"	C
find	scripts/utils/teamcity.py	/^    def find(self, xpath):$/;"	m	class:TeamCityNode
find	server/bin/main/org/javacs/kt/position/Position.kt	/^    var find = 0$/;"	v
find	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var find = 0$/;"	v
findChildElements	shared/build/reports/tests/test/js/report.js	/^    function findChildElements(container, name, targetClass) {$/;"	f
findCodeBlocks	shared/build/reports/tests/test/js/report.js	/^    function findCodeBlocks() {$/;"	f
findCommandOnPath	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^fun findCommandOnPath(name: String): Path? =$/;"	m
findCommandOnPath	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^fun findCommandOnPath(name: String): Path? =$/;"	m
findCompletionsForLettersInFullMethod	server/bin/test/completions/InstanceMember.kt	/^private fun findCompletionsForLettersInFullMethod() {$/;"	m
findCompletionsForLettersInFullMethod	server/src/test/resources/completions/InstanceMember.kt	/^private fun findCompletionsForLettersInFullMethod() {$/;"	m
findComponentReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun findComponentReferences(element: KtNamedDeclaration, recompile: BindingContext): Lis/;"	m
findComponentReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun findComponentReferences(element: KtNamedDeclaration, recompile: BindingContext): Lis/;"	m
findDelegateReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun findDelegateReferences(element: KtNamedDeclaration, recompile: BindingContext): List/;"	m
findDelegateReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun findDelegateReferences(element: KtNamedDeclaration, recompile: BindingContext): List/;"	m
findDoc	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^fun findDoc(declaration: DeclarationDescriptorWithSource): KDocTag? {$/;"	m
findDoc	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^fun findDoc(declaration: DeclarationDescriptorWithSource): KDocTag? {$/;"	m
findExecutableOnPath	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^private fun findExecutableOnPath(fileName: String): Path? {$/;"	m
findExecutableOnPath	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^private fun findExecutableOnPath(fileName: String): Path? {$/;"	m
findFunctionReference	server/bin/test/completions/InstanceMember.kt	/^private fun findFunctionReference() {$/;"	m
findFunctionReference	server/src/test/resources/completions/InstanceMember.kt	/^private fun findFunctionReference() {$/;"	m
findGradleCLIDependencies	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun findGradleCLIDependencies(command: String, projectDirectory: Path): Set<Path>? {$/;"	m
findGradleCLIDependencies	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun findGradleCLIDependencies(command: String, projectDirectory: Path): Set<Path>? {$/;"	m
findHeaders	shared/build/reports/tests/test/js/report.js	/^    function findHeaders(container) {$/;"	f
findIteratorReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun findIteratorReferences(element: KtNamedDeclaration, recompile: BindingContext): List/;"	m
findIteratorReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun findIteratorReferences(element: KtNamedDeclaration, recompile: BindingContext): List/;"	m
findJavaFromJavaHome	gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findJavaFromJavaHome	server/bin/test/additionalWorkspace/gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findJavaFromJavaHome	server/build/install/server/bin/kotlin-language-server.bat	/^:findJavaFromJavaHome$/;"	l
findJavaFromJavaHome	server/build/scripts/kotlin-language-server.bat	/^:findJavaFromJavaHome$/;"	l
findJavaFromJavaHome	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findJavaInstanceMembers	server/bin/test/completions/InstanceMembersJava.kt	/^private fun findJavaInstanceMembers(p: Path) {$/;"	m
findJavaInstanceMembers	server/src/test/resources/completions/InstanceMembersJava.kt	/^private fun findJavaInstanceMembers(p: Path) {$/;"	m
findJavaSourceFiles	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^private fun findJavaSourceFiles(root: Path): Set<Path> {$/;"	m
findJavaSourceFiles	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^private fun findJavaSourceFiles(root: Path): Set<Path> {$/;"	m
findKotlinCliCompilerLibrary	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findKotlinCliCompilerLibrary(name: String): Path? =$/;"	m
findKotlinCliCompilerLibrary	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findKotlinCliCompilerLibrary(name: String): Path? =$/;"	m
findKotlinStdlib	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^fun findKotlinStdlib(): Path? =$/;"	m
findKotlinStdlib	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^fun findKotlinStdlib(): Path? =$/;"	m
findListExtensionFunctions	server/bin/test/completions/InstanceMember.kt	/^private fun findListExtensionFunctions() {$/;"	m
findListExtensionFunctions	server/src/test/resources/completions/InstanceMember.kt	/^private fun findListExtensionFunctions() {$/;"	m
findLocalArtifact	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifact(group: String, artifact: String) =$/;"	m
findLocalArtifact	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifact(group: String, artifact: String) =$/;"	m
findLocalArtifactDirUsingGradle	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifactDirUsingGradle(group: String, artifact: String) =$/;"	m
findLocalArtifactDirUsingGradle	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifactDirUsingGradle(group: String, artifact: String) =$/;"	m
findLocalArtifactDirUsingMaven	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifactDirUsingMaven(group: String, artifact: String) =$/;"	m
findLocalArtifactDirUsingMaven	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun findLocalArtifactDirUsingMaven(group: String, artifact: String) =$/;"	m
findMavenArtifact	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun findMavenArtifact(a: Artifact, source: Boolean): Path? {$/;"	m
findMavenArtifact	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun findMavenArtifact(a: Artifact, source: Boolean): Path? {$/;"	m
findNameReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun findNameReferences(element: KtNamedDeclaration, recompile: BindingContext): List<KtR/;"	m
findNameReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun findNameReferences(element: KtNamedDeclaration, recompile: BindingContext): List<KtR/;"	m
findPartialIdentifier	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun findPartialIdentifier(file: CompiledFile, cursor: Int): String {$/;"	m
findPartialIdentifier	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun findPartialIdentifier(file: CompiledFile, cursor: Int): String {$/;"	m
findPath	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun findPath(maze: Maze): List<Point>? {$/;"	m
findPath	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun findPath(maze: Maze): List<Point>? {$/;"	m
findReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^fun findReferences(file: Path, cursor: Int, sp: SourcePath): List<Location> {$/;"	m
findReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^fun findReferences(file: Path, cursor: Int, sp: SourcePath): List<Location> {$/;"	m
findSourceFiles	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private fun findSourceFiles(root: Path): Set<URI> {$/;"	m
findSourceFiles	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private fun findSourceFiles(root: Path): Set<URI> {$/;"	m
findTabs	shared/build/reports/tests/test/js/report.js	/^    function findTabs(container) {$/;"	f
findTitles	shared/build/reports/tests/test/js/report.js	/^    function findTitles(tabs) {$/;"	f
findUnqualifiedFunctionReference	server/bin/test/completions/InstanceMember.kt	/^private fun findUnqualifiedFunctionReference() {$/;"	m
findUnqualifiedFunctionReference	server/src/test/resources/completions/InstanceMember.kt	/^private fun findUnqualifiedFunctionReference() {$/;"	m
findall	scripts/utils/teamcity.py	/^    def findall(self, xpath):$/;"	m	class:TeamCityNode
finished	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val finished = System.currentTimeMillis()$/;"	C
finished	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val finished = System.currentTimeMillis()$/;"	C
first	scripts/utils/lists.py	/^def first(ls):$/;"	f
first	server/bin/test/script/FunctionScript.kts	/^    val first = 1$/;"	C
first	server/src/test/resources/script/FunctionScript.kts	/^    val first = 1$/;"	C
flush	shared/bin/main/org/javacs/kt/Logger.kt	/^    override fun flush() {}$/;"	m
flush	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    override fun flush() {}$/;"	m
flushErrQueue	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun flushErrQueue() {$/;"	m
flushErrQueue	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun flushErrQueue() {$/;"	m
flushOutQueue	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun flushOutQueue() {$/;"	m
flushOutQueue	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun flushOutQueue() {$/;"	m
folder	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val folder = WorkspaceFolder()$/;"	C
folder	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val folder = WorkspaceFolder()$/;"	C
folderResolvers	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun folderResolvers(workspaceRoot: Path, folder: Path, ignored: List<PathMatcher>): Coll/;"	m
folderResolvers	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun folderResolvers(root: Path, ignored: List<PathMatcher>): Collection<ClassPathResolve/;"	m
folding	grammars/kotlin.configuration.json	/^   "folding": {$/;"	o
follow	scripts/utils/teamcity.py	/^    def follow(self, xpath=None):$/;"	m	class:TeamCityNode
follow_href	scripts/utils/teamcity.py	/^    def follow_href(self):$/;"	m	class:TeamCityNode
foo	server/bin/test/completions/FillEmptyBody.kt	/^    fun foo() {$/;"	m
foo	server/bin/test/completions/FunctionScope.kt	/^    fun foo(anArgument: Int) {$/;"	m
foo	server/bin/test/completions/InstanceMember.kt	/^private fun foo() {$/;"	m
foo	server/bin/test/hover/FunctionReference.kt	/^private fun foo(): List<String> {$/;"	m
foo	server/bin/test/hover/Literals.kt	/^private fun foo() {$/;"	m
foo	server/bin/test/hover/ObjectReference.kt	/^private fun foo() {$/;"	m
foo	server/bin/test/lint/LintErrors.kt	/^    fun foo() {$/;"	m
foo	server/bin/test/references/ReferenceTo.kt	/^    fun foo() {$/;"	m
foo	server/bin/test/script/ExampleScript.kts	/^val foo = 1/;"	C
foo	server/bin/test/script/FunctionScript.kts	/^fun foo() {$/;"	m
foo	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun foo(bar: Int) {$/;"	m
foo	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun foo(bar: String) {$/;"	m
foo	server/src/test/resources/completions/FillEmptyBody.kt	/^    fun foo() {$/;"	m
foo	server/src/test/resources/completions/FunctionScope.kt	/^    fun foo(anArgument: Int) {$/;"	m
foo	server/src/test/resources/completions/InstanceMember.kt	/^private fun foo() {$/;"	m
foo	server/src/test/resources/hover/FunctionReference.kt	/^private fun foo(): List<String> {$/;"	m
foo	server/src/test/resources/hover/Literals.kt	/^private fun foo() {$/;"	m
foo	server/src/test/resources/hover/ObjectReference.kt	/^private fun foo() {$/;"	m
foo	server/src/test/resources/lint/LintErrors.kt	/^    fun foo() {$/;"	m
foo	server/src/test/resources/references/ReferenceTo.kt	/^    fun foo() {$/;"	m
foo	server/src/test/resources/script/ExampleScript.kts	/^val foo = 1/;"	C
foo	server/src/test/resources/script/FunctionScript.kts	/^fun foo() {$/;"	m
foo	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun foo(bar: Int) {$/;"	m
foo	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun foo(bar: String) {$/;"	m
fooVar	server/bin/test/completions/InstanceMember.kt	/^    var fooVar = 1$/;"	v
fooVar	server/src/test/resources/completions/InstanceMember.kt	/^    var fooVar = 1$/;"	v
forAllCodeBlocks	shared/build/reports/tests/test/js/report.js	/^    function forAllCodeBlocks(operation) {$/;"	f
format	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun format(msg: String): String {$/;"	m
format	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun format(msg: String): String {$/;"	m
formatKotlinCode	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^fun formatKotlinCode($/;"	m
formatKotlinCode	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^fun formatKotlinCode($/;"	m
formatted	server/bin/test/org/javacs/kt/FormattingTest.kt	/^        val formatted = languageServer.textDocumentService.formatting(DocumentFormattingParams($/;"	C
formatted	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^        val formatted = languageServer.textDocumentService.formatting(DocumentFormattingParams($/;"	C
formatted	shared/bin/main/org/javacs/kt/Logger.kt	/^    val formatted: String$/;"	C
formatted	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    val formatted: String$/;"	C
formatting	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun formatting(params: DocumentFormattingParams): CompletableFuture<List<TextEdit>>/;"	m
formatting	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun formatting(params: DocumentFormattingParams): CompletableFuture<List<TextEdit>>/;"	m
found	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^        val found = languageServer.textDocumentService.documentSymbol(DocumentSymbolParams(fileI/;"	C
found	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val found = languageServer.workspaceService.symbol(WorkspaceSymbolParams("")).get()$/;"	C
found	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^        val found = languageServer.textDocumentService.documentSymbol(DocumentSymbolParams(fileI/;"	C
found	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^        val found = languageServer.workspaceService.symbol(WorkspaceSymbolParams("")).get()$/;"	C
free	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val free = rt.freeMemory().toDouble() \/ 1000000.0$/;"	C
free	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val free = rt.freeMemory().toDouble() \/ 1000000.0$/;"	C
from	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val from = el.parentsWithSelf$/;"	C
from	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val from = "ResolveFromFile.kt"$/;"	C
from	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val from = el.parentsWithSelf$/;"	C
from	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val from = "ResolveFromFile.kt"$/;"	C
from	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        fun from(path: Path) : StdLibItem? {$/;"	m
from	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        fun from(path: Path) : StdLibItem? {$/;"	m
fromClasspath	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private fun fromClasspath() =$/;"	m
fromClasspath	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private fun fromClasspath() =$/;"	m
fromFile	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val fromFile = DescriptorUtils.getContainingSourceFile(from)$/;"	C
fromFile	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val fromFile = DescriptorUtils.getContainingSourceFile(from)$/;"	C
fromParents	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val fromParents = from.parentsWithSelf.mapNotNull(::isParentClass).toList()$/;"	C
fromParents	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val fromParents = from.parentsWithSelf.mapNotNull(::isParentClass).toList()$/;"	C
function	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val function = original.findElementAt(49)!!.parentsWithSelf.filterIsInstance<KtNamedFunc/;"	C
function	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val function = original.findElementAt(49)!!.parentsWithSelf.filterIsInstance<KtNamedFunc/;"	C
function-call	grammars/Kotlin.tmLanguage.json	/^		"function-call": {$/;"	o	object:repository
function-declaration	grammars/Kotlin.tmLanguage.json	/^		"function-declaration": {$/;"	o	object:repository
functionInsertFormat	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private val functionInsertFormat$/;"	C
functionInsertFormat	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private val functionInsertFormat$/;"	C
functionInsertText	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun functionInsertText(desc: FunctionDescriptor): String {$/;"	m
functionInsertText	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun functionInsertText(desc: FunctionDescriptor): String {$/;"	m
generateMavenDependencyList	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun generateMavenDependencyList(pom: Path): Path {$/;"	m
generateMavenDependencyList	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun generateMavenDependencyList(pom: Path): Path {$/;"	m
getCheckBox	shared/build/reports/tests/test/js/report.js	/^    function getCheckBox() {$/;"	f
getClassAttribute	shared/build/reports/tests/test/js/report.js	/^    function getClassAttribute(element) {$/;"	f
getDefaultNotNull	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getDefaultNotNull(): String = "NotNull"$/;"	m
getDefaultNotNull	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getDefaultNotNull(): String = "NotNull"$/;"	m
getDefaultNullable	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getDefaultNullable(): String = "Nullable"$/;"	m
getDefaultNullable	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getDefaultNullable(): String = "Nullable"$/;"	m
getDocString	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^fun getDocString(file: CompiledFile, cursor: Int): String {$/;"	m
getDocString	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^fun getDocString(file: CompiledFile, cursor: Int): String {$/;"	m
getGradleCommand	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun getGradleCommand(workspace: Path): Path {$/;"	m
getGradleCommand	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun getGradleCommand(workspace: Path): Path {$/;"	m
getInstrumentedNotNulls	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getInstrumentedNotNulls(): List<String> = emptyList()$/;"	m
getInstrumentedNotNulls	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getInstrumentedNotNulls(): List<String> = emptyList()$/;"	m
getLabelForCheckBox	shared/build/reports/tests/test/js/report.js	/^    function getLabelForCheckBox() {$/;"	f
getNotNulls	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getNotNulls(): List<String> = notNullsList$/;"	m
getNotNulls	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getNotNulls(): List<String> = notNullsList$/;"	m
getNullables	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getNullables(): List<String> = nullablesList$/;"	m
getNullables	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun getNullables(): List<String> = nullablesList$/;"	m
getProtocolExtensionService	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    fun getProtocolExtensionService(): KotlinProtocolExtensions = protocolExtensions$/;"	m
getProtocolExtensionService	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    fun getProtocolExtensionService(): KotlinProtocolExtensions = protocolExtensions$/;"	m
getSignatureTriplet	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun getSignatureTriplet(file: CompiledFile, cursor: Int): Triple<List<SignatureInformati/;"	m
getSignatureTriplet	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun getSignatureTriplet(file: CompiledFile, cursor: Int): Triple<List<SignatureInformati/;"	m
getSignatures	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun getSignatures(file: CompiledFile, cursor: Int): List<SignatureInformation>? {$/;"	m
getSignatures	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun getSignatures(file: CompiledFile, cursor: Int): List<SignatureInformation>? {$/;"	m
getStringLength	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun getStringLength(obj: Any): Int? {$/;"	m
getStringLength	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun getStringLength(obj: Any): Int? {$/;"	m
getTextDocumentService	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun getTextDocumentService(): KotlinTextDocumentService = textDocuments$/;"	m
getTextDocumentService	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun getTextDocumentService(): KotlinTextDocumentService = textDocuments$/;"	m
getUser	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun getUser(): User1 {$/;"	m
getUser	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun getUser(): User1 {$/;"	m
getWorkspaceService	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun getWorkspaceService(): KotlinWorkspaceService = workspaces$/;"	m
getWorkspaceService	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun getWorkspaceService(): KotlinWorkspaceService = workspaces$/;"	m
get_kotlin_project	scripts/utils/teamcity.py	/^    def get_kotlin_project(self):$/;"	m	class:TeamCityConnection
git_branch	scripts/bump_version.py	/^def git_branch(repo_path):$/;"	f
git_history_since_last_tag	scripts/bump_version.py	/^def git_history_since_last_tag(repo_path):$/;"	f
git_last_tag	scripts/bump_version.py	/^def git_last_tag(repo_path):$/;"	f
git_working_dir_is_clean	scripts/bump_version.py	/^def git_working_dir_is_clean(repo_path):$/;"	f
global	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        fun global(workingDir: Path?): ClassPathResolver =$/;"	m
global	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        fun global(workingDir: Path?): ClassPathResolver =$/;"	m
globalConfigRoot	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        private val globalConfigRoot: Path =$/;"	C
globalConfigRoot	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        private val globalConfigRoot: Path =$/;"	C
globalNumber	server/bin/test/definition/GoToProperties.kt	/^const val globalNumber: Int = 2$/;"	C
globalNumber	server/src/test/resources/definition/GoToProperties.kt	/^const val globalNumber: Int = 2$/;"	C
goToDefinition	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^fun goToDefinition($/;"	m
goToDefinition	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^fun goToDefinition($/;"	m
gradle	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val gradle = getGradleCommand(projectDirectory)$/;"	C
gradle	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val gradle = getGradleCommand(projectDirectory)$/;"	C
gradle.version	.gradle/buildOutputCleanup/cache.properties	/^gradle.version=6.6.1$/;"	k
gradle.version	server/bin/test/kotlinDSLWorkspace/.gradle/buildOutputCleanup/cache.properties	/^gradle.version=5.6.3$/;"	k
gradleCaches	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private val gradleCaches by lazy {$/;"	C
gradleCaches	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private val gradleCaches by lazy {$/;"	C
gradleErrorWherePattern	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private val gradleErrorWherePattern by lazy { "\\\\*\\\\s+Where:[\\r\\n]+(\\\\S\\\\.*)".toRegex(/;"	C
gradleErrorWherePattern	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private val gradleErrorWherePattern by lazy { "\\\\*\\\\s+Where:[\\r\\n]+(\\\\S\\\\.*)".toRegex(/;"	C
gradleScriptToTempFile	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun gradleScriptToTempFile(scriptName: String, deleteOnExit: Boolean = false): File {$/;"	m
gradleScriptToTempFile	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun gradleScriptToTempFile(scriptName: String, deleteOnExit: Boolean = false): File {$/;"	m
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
group	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val group: String,$/;"	C
group	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val group: String,$/;"	C
gson	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val gson = Gson()$/;"	C
gson	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val gson = Gson()$/;"	C
h1	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun h1(init: H1.() -> Unit) = initTag(H1(), init)$/;"	m
h1	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun h1(init: H1.() -> Unit) = initTag(H1(), init)$/;"	m
h1	shared/build/reports/tests/test/css/base-style.css	/^h1, h2, h3 {$/;"	s
h2	shared/build/reports/tests/test/css/base-style.css	/^h1, h2, h3 {$/;"	s
h2	shared/build/reports/tests/test/css/base-style.css	/^h2 {$/;"	s
h3	shared/build/reports/tests/test/css/base-style.css	/^h1, h2, h3 {$/;"	s
hard-keywords	grammars/Kotlin.tmLanguage.json	/^		"hard-keywords": {$/;"	o	object:repository
hasErrors	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun hasErrors() = false$/;"	m
hasErrors	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun hasErrors() = false$/;"	m
hasForLoop	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun hasForLoop(source: KtFile): Boolean =$/;"	m
hasForLoop	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun hasForLoop(source: KtFile): Boolean =$/;"	m
hasForLoops	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun hasForLoops(sp: SourcePath): Set<KtFile> =$/;"	m
hasForLoops	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun hasForLoops(sp: SourcePath): Set<KtFile> =$/;"	m
hasHardcodedContracts	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun hasHardcodedContracts(element: PsiElement): Boolean = false$/;"	m
hasHardcodedContracts	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun hasHardcodedContracts(element: PsiElement): Boolean = false$/;"	m
hasPropertyDelegate	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^fun hasPropertyDelegate(source: KtFile): Boolean =$/;"	m
hasPropertyDelegate	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^fun hasPropertyDelegate(source: KtFile): Boolean =$/;"	m
hasPropertyDelegates	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun hasPropertyDelegates(sp: SourcePath): Set<KtFile> =$/;"	m
hasPropertyDelegates	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun hasPropertyDelegates(sp: SourcePath): Set<KtFile> =$/;"	m
hasSelection	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val hasSelection = (end.character - start.character) != 0 || (end.line - start.line) != /;"	C
hasSelection	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val hasSelection = (end.character - start.character) != 0 || (end.line - start.line) != /;"	C
hasTrailingLambda	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^            val hasTrailingLambda = parameters.lastOrNull()?.type?.isFunctionType ?: false$/;"	C
hasTrailingLambda	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^            val hasTrailingLambda = parameters.lastOrNull()?.type?.isFunctionType ?: false$/;"	C
head	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun head(init: Head.() -> Unit) = initTag(Head(), init)$/;"	m
head	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun head(init: Head.() -> Unit) = initTag(Head(), init)$/;"	m
height	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val height: Int,$/;"	C
height	server/bin/test/org/javacs/kt/FormattingTest.kt	/^    val height: Int = 4$/;"	C
height	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^    val height: Int = 4$/;"	C
height	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val height: Int,$/;"	C
help	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 3/;"	C
help	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 4/;"	C
help	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 5/;"	C
help	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 6/;"	C
help	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 3/;"	C
help	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 4/;"	C
help	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 5/;"	C
help	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^        val help = languageServer.textDocumentService.signatureHelp(textDocumentPosition(file, 6/;"	C
hex-literal	grammars/Kotlin.tmLanguage.json	/^		"hex-literal": {$/;"	o	object:repository
hostName	.vscode/launch.json	/^            "hostName": "localhost",$/;"	s	object:configurations.1
hostName	.vscode/launch.json	/^            "hostName": "localhost",$/;"	s	object:configurations.2
hostName	.vscode/launch.json	/^            "hostName": "localhost",$/;"	s	object:configurations.3
hover	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun hover(position: TextDocumentPositionParams): CompletableFuture<Hover?> = async./;"	m
hover	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val hover = Either.forRight<String, MarkedString>(MarkedString("kotlin", hoverText))$/;"	C
hover	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, 14))./;"	C
hover	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 4, 8)).g/;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 10, 15))/;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 10, 7))./;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 11))./;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 45))./;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 7)).g/;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 3, 19))./;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, 13))./;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 6, 7)).g/;"	C
hover	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(from, 3, 26))./;"	C
hover	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun hover(position: TextDocumentPositionParams): CompletableFuture<Hover?> = async./;"	m
hover	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val hover = Either.forRight<String, MarkedString>(MarkedString("kotlin", hoverText))$/;"	C
hover	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, 14))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 4, 8)).g/;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 10, 15))/;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 10, 7))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 11))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 45))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 2, 7)).g/;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 3, 19))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, 13))./;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(file, 6, 7)).g/;"	C
hover	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val hover = languageServer.textDocumentService.hover(textDocumentPosition(from, 3, 26))./;"	C
hoverAgain	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val hoverAgain = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, /;"	C
hoverAgain	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^        val hoverAgain = languageServer.textDocumentService.hover(textDocumentPosition(file, 5, /;"	C
hoverAt	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^fun hoverAt(file: CompiledFile, cursor: Int): Hover? {$/;"	m
hoverAt	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^fun hoverAt(file: CompiledFile, cursor: Int): Hover? {$/;"	m
hoverText	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val hoverText = DECL_RENDERER.render(target)$/;"	C
hoverText	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val hoverText = renderTypeOf(expression, file.bindingContextOf(expression, scope)) ?: return/;"	C
hoverText	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val hoverText = DECL_RENDERER.render(target)$/;"	C
hoverText	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val hoverText = renderTypeOf(expression, file.bindingContextOf(expression, scope)) ?: return/;"	C
html	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val html = HTML()$/;"	C
html	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun html(init: HTML.() -> Unit): HTML {$/;"	m
html	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val html = HTML()$/;"	C
html	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun html(init: HTML.() -> Unit): HTML {$/;"	m
i	server/bin/test/j2k/JavaJSONConverter.kt	/^        var i: Int = 0$/;"	v
i	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var i = 0$/;"	v
i	server/src/test/resources/j2k/JavaJSONConverter.kt	/^        var i: Int = 0$/;"	v
i	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var i = 0$/;"	v
i	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    var i = 0$/;"	v
i	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    var i = 0$/;"	v
iCandidate	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    var iCandidate = 0$/;"	v
iCandidate	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var iCandidate = 0$/;"	v
iCandidate	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^    var iCandidate = 0$/;"	v
iMax	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^                    val iMax = Math.max(iCandidate, iPattern)$/;"	C
iPattern	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    var iPattern = 0$/;"	v
iPattern	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var iPattern = 0$/;"	v
iPattern	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^    var iPattern = 0$/;"	v
id	scripts/utils/teamcity.py	/^    def id(self):$/;"	m	class:TeamCityNode
idParent	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val idParent = target.findParent<KtNameReferenceExpression>()$/;"	C
idParent	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val idParent = target.findParent<KtNameReferenceExpression>()$/;"	C
identifier	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val identifier = target.text \/\/ TODO when call is foo.bar(), is this bar or foo.bar ?$/;"	C
identifier	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val identifier = target.text \/\/ TODO when call is foo.bar(), is this bar or foo.bar ?$/;"	C
identifierOverloads	server/bin/main/org/javacs/kt/completion/Completions.kt	/^fun identifierOverloads(scope: LexicalScope, identifier: String): Sequence<CallableDescriptor> {$/;"	m
identifierOverloads	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^fun identifierOverloads(scope: LexicalScope, identifier: String): Sequence<CallableDescriptor> {$/;"	m
identifiers	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun identifiers(scope: LexicalScope): Sequence<DeclarationDescriptor> =$/;"	m
identifiers	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun identifiers(scope: LexicalScope): Sequence<DeclarationDescriptor> =$/;"	m
ignored	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^    val ignored: List<PathMatcher> = ignoredPathPatterns(workspaceRoot.resolve(".gitignore"))$/;"	C
ignored	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^    val ignored: List<PathMatcher> = ignoredPathPatterns(workspaceRoot.resolve(".gitignore"))$/;"	C
ignoredPathPatterns	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun ignoredPathPatterns(path: Path): List<PathMatcher> =$/;"	m
ignoredPathPatterns	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun ignoredPathPatterns(path: Path): List<PathMatcher> =$/;"	m
implicit	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val implicit = scope.implicitReceiver ?: return emptySequence()$/;"	C
implicit	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val implicit = scope.implicitReceiver ?: return emptySequence()$/;"	C
implicitMembers	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun implicitMembers(scope: HierarchicalScope): Sequence<DeclarationDescriptor> {$/;"	m
implicitMembers	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun implicitMembers(scope: HierarchicalScope): Sequence<DeclarationDescriptor> {$/;"	m
import	grammars/Kotlin.tmLanguage.json	/^		"import": {$/;"	o	object:repository
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.class-declaration.captures.3.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.function-call.captures.2.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.function-declaration.captures.2.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.type-alias.captures.3.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.type-annotation.captures.0.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^							"include": "#type-parameter"$/;"	s	object:repository.variable-declaration.captures.2.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#annotation-simple"$/;"	s	object:repository.code.patterns.2
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#annotation-site"$/;"	s	object:repository.code.patterns.4
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#annotation-site-list"$/;"	s	object:repository.code.patterns.3
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#binary-literal"$/;"	s	object:repository.code.patterns.23
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#boolean-literal"$/;"	s	object:repository.code.patterns.24
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#character"$/;"	s	object:repository.code.patterns.18
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#class-declaration"$/;"	s	object:repository.code.patterns.5
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#code"$/;"	s	object:repository.string-escape-bracketed.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comment-block"$/;"	s	object:repository.comments.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comment-javadoc"$/;"	s	object:repository.comments.patterns.2
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comment-line"$/;"	s	object:repository.comments.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comments"$/;"	s	object:repository.code.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comments"$/;"	s	object:repository.import.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#comments"$/;"	s	object:repository.package.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#control-keywords"$/;"	s	object:repository.keywords.patterns.4
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#decimal-literal"$/;"	s	object:repository.code.patterns.21
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#function-call"$/;"	s	object:repository.code.patterns.12
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#function-declaration"$/;"	s	object:repository.code.patterns.8
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#hard-keywords"$/;"	s	object:repository.import.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#hard-keywords"$/;"	s	object:repository.keywords.patterns.3
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#hex-literal"$/;"	s	object:repository.code.patterns.22
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#key"$/;"	s	object:repository.code.patterns.14
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#keywords"$/;"	s	object:repository.code.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#method-reference"$/;"	s	object:repository.code.patterns.13
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#null-literal"$/;"	s	object:repository.code.patterns.25
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#object-declaration"$/;"	s	object:repository.code.patterns.6
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#operators"$/;"	s	object:repository.code.patterns.19
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#postfix-modifiers"$/;"	s	object:repository.keywords.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#prefix-modifiers"$/;"	s	object:repository.keywords.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#self-reference"$/;"	s	object:repository.code.patterns.20
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#soft-keywords"$/;"	s	object:repository.keywords.patterns.2
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string"$/;"	s	object:repository.code.patterns.15
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-empty"$/;"	s	object:repository.code.patterns.16
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-escape-bracketed"$/;"	s	object:repository.string-multiline.patterns.2
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-escape-bracketed"$/;"	s	object:repository.string.patterns.2
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-escape-simple"$/;"	s	object:repository.string-multiline.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-escape-simple"$/;"	s	object:repository.string.patterns.1
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#string-multiline"$/;"	s	object:repository.code.patterns.17
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#type-alias"$/;"	s	object:repository.code.patterns.7
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#type-annotation"$/;"	s	object:repository.code.patterns.11
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#type-constraint"$/;"	s	object:repository.code.patterns.10
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#unescaped-annotation"$/;"	s	object:repository.annotation-site-list.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#unescaped-annotation"$/;"	s	object:repository.annotation-site.patterns.0
include	grammars/Kotlin.tmLanguage.json	/^					"include": "#variable-declaration"$/;"	s	object:repository.code.patterns.9
include	grammars/Kotlin.tmLanguage.json	/^			"include": "#code"$/;"	s	object:patterns.2
include	grammars/Kotlin.tmLanguage.json	/^			"include": "#import"$/;"	s	object:patterns.0
include	grammars/Kotlin.tmLanguage.json	/^			"include": "#package"$/;"	s	object:patterns.1
include	grammars/codeblock.json	/^					"include": "source.kotlin"$/;"	s	object:repository.kotlin-code-block.patterns.0
include	grammars/codeblock.json	/^			"include": "#kotlin-code-block"$/;"	s	object:patterns.0
increment_major	scripts/bump_version.py	/^def increment_major(ver):$/;"	f
increment_minor	scripts/bump_version.py	/^def increment_minor(ver):$/;"	f
increment_patch	scripts/bump_version.py	/^def increment_patch(ver):$/;"	f
incrementalCompiler	server/bin/main/org/javacs/kt/Compiler.kt	/^                val incrementalCompiler = container.get<ExpressionTypingServices>()$/;"	C
incrementalCompiler	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                val incrementalCompiler = container.get<ExpressionTypingServices>()$/;"	C
indent	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indent: String = "".padStart(indentLevel * indentSize, ' ')$/;"	C
indent	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indent: String = "".padStart(indentLevel * indentSize, ' ')$/;"	C
indentLevel	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indentLevel: Int = 0,$/;"	C
indentLevel	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indentLevel: Int = 0,$/;"	C
indentSize	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indentSize: Int = 4 \/\/ spaces$/;"	C
indentSize	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private val indentSize: Int = 4 \/\/ spaces$/;"	C
indentedStatements	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^                val indentedStatements = body.statements$/;"	C
indentedStatements	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val indentedStatements = this$/;"	C
indentedStatements	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^                val indentedStatements = body.statements$/;"	C
indentedStatements	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val indentedStatements = this$/;"	C
info	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun info(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.INFO, msg,/;"	m
info	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun info(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.INFO, msg,/;"	m
init	gradlew.bat	/^:init$/;"	l
init	server/bin/test/additionalWorkspace/gradlew.bat	/^:init$/;"	l
init	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun init(name: String) {$/;"	m
init	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val init = InitializeParams().apply {$/;"	C
init	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val init = InitializeParams().apply {$/;"	C
init	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:init$/;"	l
init	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun init(name: String) {$/;"	m
initControls	shared/build/reports/tests/test/js/report.js	/^    function initControls() {$/;"	f
initTabs	shared/build/reports/tests/test/js/report.js	/^    function initTabs() {$/;"	f
initialize	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun initialize(params: InitializeParams): CompletableFuture<InitializeResult> {$/;"	m
initialize	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun initialize(params: InitializeParams): CompletableFuture<InitializeResult> {$/;"	m
initialized	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val initialized = files.values.any { it.parsed != null }$/;"	C
initialized	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val initialized = files.values.any { it.parsed != null }$/;"	C
injectionSelector	grammars/codeblock.json	/^	"injectionSelector": "L:markup.fenced_code.block.markdown",$/;"	s
insertPlaceholders	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun insertPlaceholders(msg: String, placeholders: Array<out Any?>): String {$/;"	m
insertPlaceholders	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun insertPlaceholders(msg: String, placeholders: Array<out Any?>): String {$/;"	m
insertText	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val insertText = completions.items.map { it.insertText }$/;"	C
insertText	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val insertText = completions.items.map { it.insertText }$/;"	C
instance	server/bin/test/completions/InstanceMember.kt	/^    val instance = SomeClass()$/;"	C
instance	server/src/test/resources/completions/InstanceMember.kt	/^    val instance = SomeClass()$/;"	C
instanceFee	server/bin/test/completions/InstanceMember.kt	/^    fun instanceFee() = "Fee"$/;"	m
instanceFee	server/src/test/resources/completions/InstanceMember.kt	/^    fun instanceFee() = "Fee"$/;"	m
instanceFoo	server/bin/test/completions/InstanceMember.kt	/^    fun instanceFoo() = "Foo"$/;"	m
instanceFoo	server/src/test/resources/completions/InstanceMember.kt	/^    fun instanceFoo() = "Foo"$/;"	m
intFunction	server/bin/test/hover/Recover.kt	/^private fun intFunction() =$/;"	m
intFunction	server/src/test/resources/hover/Recover.kt	/^private fun intFunction() =$/;"	m
intFunctionRef	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val intFunctionRef = recompile.findElementAt(41)!!.parentsWithSelf.filterIsInstance<KtRe/;"	C
intFunctionRef	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val intFunctionRef = recompile.findElementAt(41)!!.parentsWithSelf.filterIsInstance<KtRe/;"	C
invokeDecompiler	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private fun invokeDecompiler(input: Path, output: Path) {$/;"	m
invokeDecompiler	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private fun invokeDecompiler(input: Path, output: Path) {$/;"	m
isBuildScript	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private fun isBuildScript(file: Path): Boolean = file.fileName.toString().let { it == "pom.x/;"	m
isBuildScript	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private fun isBuildScript(file: Path): Boolean = file.fileName.toString().let { it == "pom.x/;"	m
isCompanion	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val isCompanion = DescriptorUtils.isCompanionObject(classDescriptor)$/;"	C
isCompanion	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val isCompanion = DescriptorUtils.isCompanionObject(classDescriptor)$/;"	C
isCompanionOfEnum	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isCompanionOfEnum(kotlinType: KotlinType): Boolean {$/;"	m
isCompanionOfEnum	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isCompanionOfEnum(kotlinType: KotlinType): Boolean {$/;"	m
isCompatibleWith	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun isCompatibleWith(call: KtCallExpression, candidate: CallableDescriptor): Boolean {$/;"	m
isCompatibleWith	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun isCompatibleWith(call: KtCallExpression, candidate: CallableDescriptor): Boolean {$/;"	m
isCompiled	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    val isCompiled: Boolean$/;"	C
isCompiled	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    val isCompiled: Boolean$/;"	C
isComponent	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun isComponent(declaration: DeclarationDescriptor): Boolean =$/;"	m
isComponent	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun isComponent(declaration: DeclarationDescriptor): Boolean =$/;"	m
isCorrectArtifact	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val isCorrectArtifact = BiPredicate<Path, BasicFileAttributes> { file, _ ->$/;"	C
isCorrectArtifact	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val isCorrectArtifact = BiPredicate<Path, BasicFileAttributes> { file, _ ->$/;"	C
isDeclarationVisible	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isDeclarationVisible(target: DeclarationDescriptor, from: DeclarationDescriptor): Bo/;"	m
isDeclarationVisible	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isDeclarationVisible(target: DeclarationDescriptor, from: DeclarationDescriptor): Bo/;"	m
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
isExtensionFor	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isExtensionFor(type: KotlinType, extensionFunction: CallableDescriptor): Boolean {$/;"	m
isExtensionFor	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isExtensionFor(type: KotlinType, extensionFunction: CallableDescriptor): Boolean {$/;"	m
isFoo	server/bin/test/hover/FunctionReference.kt	/^private fun isFoo(s: String) =$/;"	m
isFoo	server/src/test/resources/hover/FunctionReference.kt	/^private fun isFoo(s: String) =$/;"	m
isGetSet	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun isGetSet(declaration: DeclarationDescriptor) =$/;"	m
isGetSet	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun isGetSet(declaration: DeclarationDescriptor) =$/;"	m
isGetter	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isGetter(d: DeclarationDescriptor): Boolean =$/;"	m
isGetter	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isGetter(d: DeclarationDescriptor): Boolean =$/;"	m
isIncomplete	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val isIncomplete = (itemList.size == MAX_COMPLETION_ITEMS)$/;"	C
isIncomplete	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    var isIncomplete = false$/;"	v
isInsideJar	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^private fun isInsideJar(uri: String) = uri.contains(".jar!")$/;"	m
isInsideJar	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^private fun isInsideJar(uri: String) = uri.contains(".jar!")$/;"	m
isIterator	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun isIterator(declaration: DeclarationDescriptor) =$/;"	m
isIterator	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun isIterator(declaration: DeclarationDescriptor) =$/;"	m
isJavaSource	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private fun isJavaSource(file: Path): Boolean = file.fileName.toString().endsWith(".java")$/;"	m
isJavaSource	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private fun isJavaSource(file: Path): Boolean = file.fileName.toString().endsWith(".java")$/;"	m
isJsr305Default	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun isJsr305Default(annotation: PsiAnnotation, placeTargetTypes: Array<out PsiAnnot/;"	m
isNotNull	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun isNotNull(owner: PsiModifierListOwner, checkBases: Boolean): Boolean {$/;"	m
isNotNull	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun isNotNull(owner: PsiModifierListOwner, checkBases: Boolean): Boolean {$/;"	m
isNotStaticJavaMethod	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isNotStaticJavaMethod($/;"	m
isNotStaticJavaMethod	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isNotStaticJavaMethod($/;"	m
isNotVisible	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isNotVisible(target: DeclarationDescriptorWithVisibility, from: DeclarationDescripto/;"	m
isNotVisible	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isNotVisible(target: DeclarationDescriptorWithVisibility, from: DeclarationDescripto/;"	m
isNullable	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun isNullable(owner: PsiModifierListOwner, checkBases: Boolean) = !isNotNull(owner/;"	m
isNullable	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun isNullable(owner: PsiModifierListOwner, checkBases: Boolean) = !isNotNull(owner/;"	m
isOdd	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun isOdd(x: Int) = x % 2 != 0$/;"	m
isOdd	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun isOdd(x: Int) = x % 2 != 0$/;"	m
isOpen	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun isOpen(uri: URI): Boolean = (uri in open)$/;"	m
isOpen	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun isOpen(uri: URI): Boolean = (uri in open)$/;"	m
isParentClass	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isParentClass(declaration: DeclarationDescriptor): ClassDescriptor? =$/;"	m
isParentClass	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isParentClass(declaration: DeclarationDescriptor): ClassDescriptor? =$/;"	m
isPathIncluded	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^    fun isPathIncluded(file: Path): Boolean = workspaceRoots.any { file.startsWith(it) }$/;"	m
isPathIncluded	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^    fun isPathIncluded(file: Path): Boolean = workspaceRoots.any { file.startsWith(it) }$/;"	m
isPlatformImport	server/bin/main/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^fun isPlatformImport(fqJavaType: String) =$/;"	m
isPlatformImport	server/src/main/kotlin/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^fun isPlatformImport(fqJavaType: String) =$/;"	m
isPropertyDelegate	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun isPropertyDelegate(declaration: DeclarationDescriptor) =$/;"	m
isPropertyDelegate	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun isPropertyDelegate(declaration: DeclarationDescriptor) =$/;"	m
isScript	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val isScript: Boolean = false,$/;"	C
isScript	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val isScript: Boolean = extension == "kts"$/;"	C
isScript	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val isScript: Boolean = false,$/;"	C
isScript	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val isScript: Boolean = extension == "kts"$/;"	C
isSetter	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isSetter(d: DeclarationDescriptor): Boolean =$/;"	m
isSetter	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isSetter(d: DeclarationDescriptor): Boolean =$/;"	m
isSource	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private fun isSource(uri: URI): Boolean = exclusions.isURIIncluded(uri) && languageOf(uri) !/;"	m
isSource	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private fun isSource(uri: URI): Boolean = exclusions.isURIIncluded(uri) && languageOf(uri) !/;"	m
isStdlib	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val isStdlib: ((Path) -> Boolean) = {$/;"	C
isStdlib	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val isStdlib: ((Path) -> Boolean) = {$/;"	C
isTemporary	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val isTemporary: Boolean = false \/\/ A temporary source file will not be returned by .a/;"	C
isTemporary	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val isTemporary: Boolean = false \/\/ A temporary source file will not be returned by .a/;"	C
isURIIncluded	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^    fun isURIIncluded(uri: URI) = uri.filePath?.let(this::isPathIncluded) ?: false$/;"	m
isURIIncluded	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^    fun isURIIncluded(uri: URI) = uri.filePath?.let(this::isPathIncluded) ?: false$/;"	m
isVisible	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun isVisible(file: CompiledFile, cursor: Int): (DeclarationDescriptor) -> Boolean {$/;"	m
isVisible	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun isVisible(file: CompiledFile, cursor: Int): (DeclarationDescriptor) -> Boolean {$/;"	m
is_kotlin_version	scripts/update_kt_version.py	/^def is_kotlin_version(version_name):$/;"	f
is_plugin_artifact	scripts/update_kt_version.py	/^def is_plugin_artifact(art_name):$/;"	f
itemList	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val itemList = items$/;"	C
itemList	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val itemList = items$/;"	C
items	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val items = elementCompletionItems(file, cursor, config, partial).ifEmpty { keywordCompletio/;"	C
items	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val items = elementCompletionItems(file, cursor, config, partial).ifEmpty { keywordCompletio/;"	C
j	server/bin/test/completions/Imports.kt	/^import j$/;"	I
j	server/src/test/resources/completions/Imports.kt	/^import j$/;"	I
j2k	server/bin/test/j2k/JavaJSONConverter.kt	/^package j2k$/;"	p
j2k	server/src/test/resources/j2k/JavaJSONConverter.java	/^package j2k;$/;"	p
j2k	server/src/test/resources/j2k/JavaJSONConverter.kt	/^package j2k$/;"	p
j2kTODO	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun j2kTODO(type: String) {$/;"	m
j2kTODO	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun j2kTODO(type: String) {$/;"	m
jarClassContentProvider	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^    val jarClassContentProvider: JarClassContentProvider$/;"	C
jarClassContentProvider	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^    val jarClassContentProvider: JarClassContentProvider$/;"	C
jarClassContents	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    override fun jarClassContents(textDocument: TextDocumentIdentifier): CompletableFuture<Strin/;"	m
jarClassContents	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^    fun jarClassContents(textDocument: TextDocumentIdentifier): CompletableFuture<String?>$/;"	m
jarClassContents	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    override fun jarClassContents(textDocument: TextDocumentIdentifier): CompletableFuture<Strin/;"	m
jarClassContents	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^    fun jarClassContents(textDocument: TextDocumentIdentifier): CompletableFuture<String?>$/;"	m
java.io.BufferedReader	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.io.BufferedReader$/;"	I
java.io.BufferedReader	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.io.BufferedReader$/;"	I
java.io.BufferedReader	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.io.BufferedReader$/;"	I
java.io.BufferedReader	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.io.BufferedReader$/;"	I
java.io.BufferedReader	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.io.BufferedReader$/;"	I
java.io.BufferedReader	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.io.BufferedReader$/;"	I
java.io.ByteArrayOutputStream	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.io.ByteArrayOutputStream$/;"	I
java.io.ByteArrayOutputStream	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.io.ByteArrayOutputStream$/;"	I
java.io.Closeable	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.io.Closeable$/;"	I
java.io.Closeable	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.io.Closeable$/;"	I
java.io.File	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.io.File$/;"	I
java.io.File	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.io.File$/;"	I
java.io.File	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import java.io.File$/;"	I
java.io.File	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^import java.io.File$/;"	I
java.io.File	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import java.io.File$/;"	I
java.io.File	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.io.File$/;"	I
java.io.File	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^import java.io.File$/;"	I
java.io.FileNotFoundException	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.io.FileNotFoundException$/;"	I
java.io.FileNotFoundException	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.io.FileNotFoundException$/;"	I
java.io.FileNotFoundException	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.io.FileNotFoundException$/;"	I
java.io.FileNotFoundException	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.io.FileNotFoundException$/;"	I
java.io.IOException	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.io.IOException$/;"	I
java.io.IOException	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.io.IOException$/;"	I
java.io.InputStream	server/bin/main/org/javacs/kt/TcpSockets.kt	/^import java.io.InputStream$/;"	I
java.io.InputStream	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^import java.io.InputStream$/;"	I
java.io.InputStream	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^import java.io.InputStream$/;"	I
java.io.InputStream	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^import java.io.InputStream$/;"	I
java.io.OutputStream	server/bin/main/org/javacs/kt/TcpSockets.kt	/^import java.io.OutputStream$/;"	I
java.io.OutputStream	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^import java.io.OutputStream$/;"	I
java.io.PrintStream	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.io.PrintStream$/;"	I
java.io.PrintStream	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.io.PrintStream$/;"	I
java.io.PrintStream	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.io.PrintStream$/;"	I
java.io.PrintStream	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.io.PrintStream$/;"	I
java.io.PrintWriter	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.io.PrintWriter$/;"	I
java.io.PrintWriter	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.io.PrintWriter$/;"	I
java.io.StringReader	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.io.StringReader$/;"	I
java.io.StringReader	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.io.StringReader$/;"	I
java.io.StringWriter	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.io.StringWriter$/;"	I
java.io.StringWriter	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.io.StringWriter$/;"	I
java.io.StringWriter	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.io.StringWriter$/;"	I
java.io.StringWriter	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.io.StringWriter$/;"	I
java.lang.invoke.	server/bin/test/completions/Imports.kt	/^import java.lang.invoke.$/;"	I
java.lang.invoke.	server/src/test/resources/completions/Imports.kt	/^import java.lang.invoke.$/;"	I
java.lang.reflect.Type	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import java.lang.reflect.Type$/;"	I
java.net.JarURLConnection	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.JarURLConnection$/;"	I
java.net.JarURLConnection	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.JarURLConnection$/;"	I
java.net.ServerSocket	server/bin/main/org/javacs/kt/TcpSockets.kt	/^import java.net.ServerSocket$/;"	I
java.net.ServerSocket	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^import java.net.ServerSocket$/;"	I
java.net.Socket	server/bin/main/org/javacs/kt/TcpSockets.kt	/^import java.net.Socket$/;"	I
java.net.Socket	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^import java.net.Socket$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/SourcePath.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import java.net.URI$/;"	I
java.net.URI	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import java.net.URI$/;"	I
java.net.URI	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.net.URI$/;"	I
java.net.URI	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^import java.net.URI$/;"	I
java.net.URISyntaxException	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.net.URISyntaxException$/;"	I
java.net.URISyntaxException	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.net.URISyntaxException$/;"	I
java.net.URL	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.URL$/;"	I
java.net.URL	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import java.net.URL$/;"	I
java.net.URL	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.net.URL$/;"	I
java.net.URLClassLoader	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.net.URLClassLoader$/;"	I
java.net.URLClassLoader	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.net.URLClassLoader$/;"	I
java.net.URLDecoder	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import java.net.URLDecoder$/;"	I
java.net.URLDecoder	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import java.net.URLDecoder$/;"	I
java.net.URLDecoder	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import java.net.URLDecoder$/;"	I
java.net.URLDecoder	shared/bin/main/org/javacs/kt/util/URIs.kt	/^import java.net.URLDecoder$/;"	I
java.net.URLDecoder	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^import java.net.URLDecoder$/;"	I
java.nio.charset.StandardCharsets	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import java.nio.charset.StandardCharsets$/;"	I
java.nio.charset.StandardCharsets	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import java.nio.charset.StandardCharsets$/;"	I
java.nio.charset.StandardCharsets	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import java.nio.charset.StandardCharsets$/;"	I
java.nio.charset.StandardCharsets	shared/bin/main/org/javacs/kt/util/URIs.kt	/^import java.nio.charset.StandardCharsets$/;"	I
java.nio.charset.StandardCharsets	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^import java.nio.charset.StandardCharsets$/;"	I
java.nio.file.FileSystems	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.FileSystems	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.FileSystems$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.Files	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Files$/;"	I
java.nio.file.P	server/bin/test/completions/Imports.kt	/^import java.nio.file.P$/;"	I
java.nio.file.P	server/src/test/resources/completions/Imports.kt	/^import java.nio.file.P$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/SourcePath.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/externalsources/SourceJarProvider.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/test/completions/InstanceMembersJava.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/externalsources/SourceJarProvider.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	server/src/test/resources/completions/InstanceMembersJava.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/util/URIs.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.Path	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Path$/;"	I
java.nio.file.PathMatcher	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.PathMatcher$/;"	I
java.nio.file.PathMatcher	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import java.nio.file.PathMatcher$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/SourcePath.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/util/URIs.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.Paths	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.nio.file.Paths$/;"	I
java.nio.file.attribute.BasicFileAttributes	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.attribute.BasicFileAttributes$/;"	I
java.nio.file.attribute.BasicFileAttributes	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.nio.file.attribute.BasicFileAttributes$/;"	I
java.time.Duration	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.time.Duration$/;"	I
java.time.Duration	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^import java.time.Duration$/;"	I
java.time.Duration	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.time.Duration$/;"	I
java.time.Duration	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^import java.time.Duration$/;"	I
java.time.Duration	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import java.time.Duration$/;"	I
java.time.Duration	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.time.Duration$/;"	I
java.time.Duration	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import java.time.Duration$/;"	I
java.time.Duration	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.time.Duration$/;"	I
java.time.Instant	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.time.Instant$/;"	I
java.time.Instant	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.time.Instant$/;"	I
java.util.	server/bin/test/completions/Statics.kt	/^import java.util.*$/;"	I
java.util.	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^import java.util.*$/;"	I
java.util.	server/src/test/resources/completions/Statics.kt	/^import java.util.*$/;"	I
java.util.	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^import java.util.*$/;"	I
java.util.	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.util.*$/;"	I
java.util.	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.util.*$/;"	I
java.util.Arrays	server/bin/test/j2k/JavaJSONConverter.kt	/^import java.util.Arrays$/;"	I
java.util.Arrays	server/src/test/resources/j2k/JavaJSONConverter.kt	/^import java.util.Arrays$/;"	I
java.util.Calendar	server/bin/test/completions/JavaGetterSetterConversion.kt	/^import java.util.Calendar$/;"	I
java.util.Calendar	server/src/test/resources/completions/JavaGetterSetterConversion.kt	/^import java.util.Calendar$/;"	I
java.util.LinkedHashMap	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.util.LinkedHashMap$/;"	I
java.util.LinkedHashMap	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import java.util.LinkedHashMap$/;"	I
java.util.concurrent.CancellationException	server/bin/test/org/javacs/kt/LintTest.kt	/^import java.util.concurrent.CancellationException$/;"	I
java.util.concurrent.CancellationException	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import java.util.concurrent.CancellationException$/;"	I
java.util.concurrent.CompletableFuture	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.util.concurrent.CompletableFuture$/;"	I
java.util.concurrent.CompletableFuture.completedFuture	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import java.util.concurrent.CompletableFuture.completedFuture$/;"	I
java.util.concurrent.CompletableFuture.completedFuture	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import java.util.concurrent.CompletableFuture.completedFuture$/;"	I
java.util.concurrent.ConcurrentHashMap	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.util.concurrent.ConcurrentHashMap$/;"	I
java.util.concurrent.ConcurrentHashMap	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import java.util.concurrent.ConcurrentHashMap$/;"	I
java.util.concurrent.Executors	server/bin/main/org/javacs/kt/Main.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Executors	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Executors	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Executors	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Executors	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Executors	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.Executors$/;"	I
java.util.concurrent.Future	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.Future$/;"	I
java.util.concurrent.Future	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.Future$/;"	I
java.util.concurrent.ScheduledExecutorService	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.ScheduledExecutorService$/;"	I
java.util.concurrent.ScheduledExecutorService	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.ScheduledExecutorService$/;"	I
java.util.concurrent.TimeUnit	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.TimeUnit	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.TimeUnit	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.TimeUnit	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.TimeUnit	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.TimeUnit	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.TimeUnit$/;"	I
java.util.concurrent.atomic.AtomicReference	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.atomic.AtomicReference$/;"	I
java.util.concurrent.atomic.AtomicReference	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.concurrent.atomic.AtomicReference$/;"	I
java.util.concurrent.locks.ReentrantLock	server/bin/main/org/javacs/kt/Compiler.kt	/^import java.util.concurrent.locks.ReentrantLock$/;"	I
java.util.concurrent.locks.ReentrantLock	server/bin/main/org/javacs/kt/SourcePath.kt	/^import java.util.concurrent.locks.ReentrantLock$/;"	I
java.util.concurrent.locks.ReentrantLock	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import java.util.concurrent.locks.ReentrantLock$/;"	I
java.util.concurrent.locks.ReentrantLock	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.util.concurrent.locks.ReentrantLock$/;"	I
java.util.function.BiPredicate	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.util.function.BiPredicate$/;"	I
java.util.function.BiPredicate	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import java.util.function.BiPredicate$/;"	I
java.util.function.Consumer	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.util.function.Consumer$/;"	I
java.util.function.Consumer	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^import java.util.function.Consumer$/;"	I
java.util.function.Supplier	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.function.Supplier$/;"	I
java.util.function.Supplier	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import java.util.function.Supplier$/;"	I
java.util.function.Supplier	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import java.util.function.Supplier$/;"	I
java.util.function.Supplier	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import java.util.function.Supplier$/;"	I
java.util.jar.JarFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^import java.util.jar.JarFile$/;"	I
java.util.jar.JarFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import java.util.jar.JarFile$/;"	I
java.util.logging.Formatter	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.util.logging.Formatter$/;"	I
java.util.logging.Formatter	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.util.logging.Formatter$/;"	I
java.util.logging.Handler	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.util.logging.Handler$/;"	I
java.util.logging.Handler	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.util.logging.Handler$/;"	I
java.util.logging.Level	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.util.logging.Level$/;"	I
java.util.logging.Level	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.util.logging.Level$/;"	I
java.util.logging.LogRecord	shared/bin/main/org/javacs/kt/Logger.kt	/^import java.util.logging.LogRecord$/;"	I
java.util.logging.LogRecord	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import java.util.logging.LogRecord$/;"	I
java.util.stream.Stream	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import java.util.stream.Stream$/;"	I
java.util.stream.Stream	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import java.util.stream.Stream$/;"	I
javaAST	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^    val javaAST = psiFactory.createFileFromText("snippet.java", JavaLanguage.INSTANCE, javaCode)$/;"	C
javaAST	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^    val javaAST = psiFactory.createFileFromText("snippet.java", JavaLanguage.INSTANCE, javaCode)$/;"	C
javaCode	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^        val javaCode = workspaceRoot$/;"	C
javaCode	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^        val javaCode = workspaceRoot$/;"	C
javaDoc	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val javaDoc = getDocString(file, cursor)$/;"	C
javaDoc	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    var javaDoc: String = ""$/;"	v
javaDoc	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val javaDoc = getDocString(file, cursor)$/;"	C
javaDoc	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    var javaDoc: String = ""$/;"	v
javaElement	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val javaElement = source.javaElement$/;"	C
javaElement	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val javaElement = source.javaElement$/;"	C
javaFiles	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private fun javaFiles() =$/;"	m
javaFiles	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private fun javaFiles() =$/;"	m
javaMethodDescriptor	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val javaMethodDescriptor = descriptor as? JavaMethodDescriptor ?: return true$/;"	C
javaMethodDescriptor	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val javaMethodDescriptor = descriptor as? JavaMethodDescriptor ?: return true$/;"	C
javaSource	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        val javaSource = isJavaSource(file)$/;"	C
javaSource	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        val javaSource = isJavaSource(file)$/;"	C
javaSourcePath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^     val javaSourcePath = mutableSetOf<Path>()$/;"	C
javaSourcePath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^     val javaSourcePath = mutableSetOf<Path>()$/;"	C
javaslang.collection.Seq	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import javaslang.collection.Seq$/;"	I
javaslang.collection.Seq	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import javaslang.collection.Seq$/;"	I
junit.framework.Assert.assertTrue	server/bin/test/mainWorkspace/MainWorkspaceFile.kt	/^import junit.framework.Assert.assertTrue$/;"	I
junit.framework.Assert.assertTrue	server/src/test/resources/mainWorkspace/MainWorkspaceFile.kt	/^import junit.framework.Assert.assertTrue$/;"	I
jvm	server/bin/main/org/javacs/kt/Configuration.kt	/^    val jvm: JVMConfiguration = JVMConfiguration()$/;"	C
jvm	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                    val jvm = compiler.jvm$/;"	C
jvm	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val jvm: JVMConfiguration = JVMConfiguration()$/;"	C
jvm	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                    val jvm = compiler.jvm$/;"	C
jvmTargetFrom	server/bin/main/org/javacs/kt/Compiler.kt	/^    private fun jvmTargetFrom(target: String): JvmTarget? = when (target) {$/;"	m
jvmTargetFrom	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private fun jvmTargetFrom(target: String): JvmTarget? = when (target) {$/;"	m
key	grammars/Kotlin.tmLanguage.json	/^		"key": {$/;"	o	object:repository
key	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val key = Pair(from.name, target.name)$/;"	C
key	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val key = sourceURI.toString()$/;"	C
key	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val key = Pair(from.name, target.name)$/;"	C
key	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val key = sourceURI.toString()$/;"	C
key	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val key : String,$/;"	C
key	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val key : String,$/;"	C
keys	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    val keys get() = files.keys$/;"	C
keys	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    val keys get() = files.keys$/;"	C
keyword	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val keyword = if (variable.hasModifierProperty(PsiModifier.FINAL)) "val" else "var"$/;"	C
keyword	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val keyword = if (variable.hasModifierProperty(PsiModifier.FINAL)) "val" else "var"$/;"	C
keywordCompletionItems	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun keywordCompletionItems(partial: String): Sequence<CompletionItem> =$/;"	m
keywordCompletionItems	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun keywordCompletionItems(partial: String): Sequence<CompletionItem> =$/;"	m
keywords	grammars/Kotlin.tmLanguage.json	/^		"keywords": {$/;"	o	object:repository
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
kind	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val kind: CompilationKind = CompilationKind.DEFAULT$/;"	C
kind	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val kind: CompilationKind =$/;"	C
kind	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val kind: CompilationKind = CompilationKind.DEFAULT$/;"	C
kind	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val kind: CompilationKind =$/;"	C
kotlin-code-block	grammars/codeblock.json	/^		"kotlin-code-block": {$/;"	o	object:repository
kotlin-language-server	server/build/poms/pom-default.xml	/^  <groupId>kotlin-language-server<\/groupId>$/;"	g
kotlin-language-server	shared/build/poms/pom-default.xml	/^  <groupId>kotlin-language-server<\/groupId>$/;"	g
kotlin.concurrent.withLock	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.concurrent.withLock$/;"	I
kotlin.concurrent.withLock	server/bin/main/org/javacs/kt/SourcePath.kt	/^import kotlin.concurrent.withLock$/;"	I
kotlin.concurrent.withLock	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.concurrent.withLock$/;"	I
kotlin.concurrent.withLock	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import kotlin.concurrent.withLock$/;"	I
kotlin.math.max	server/bin/main/org/javacs/kt/position/Position.kt	/^import kotlin.math.max$/;"	I
kotlin.math.max	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import kotlin.math.max$/;"	I
kotlin.properties.Delegates	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^import kotlin.properties.Delegates$/;"	I
kotlin.properties.Delegates	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^import kotlin.properties.Delegates$/;"	I
kotlin.reflect.KProperty	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^import kotlin.reflect.KProperty$/;"	I
kotlin.reflect.KProperty	server/bin/test/references/ReferenceGetSetValue.kt	/^import kotlin.reflect.KProperty$/;"	I
kotlin.reflect.KProperty	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^import kotlin.reflect.KProperty$/;"	I
kotlin.reflect.KProperty	server/src/test/resources/references/ReferenceGetSetValue.kt	/^import kotlin.reflect.KProperty$/;"	I
kotlin.script.dependencies.Environment	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.dependencies.Environment$/;"	I
kotlin.script.dependencies.Environment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.dependencies.Environment$/;"	I
kotlin.script.dependencies.ScriptContents	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.dependencies.ScriptContents$/;"	I
kotlin.script.dependencies.ScriptContents	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.dependencies.ScriptContents$/;"	I
kotlin.script.experimental.annotations.KotlinScript	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.annotations.KotlinScript$/;"	I
kotlin.script.experimental.annotations.KotlinScript	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.annotations.KotlinScript$/;"	I
kotlin.script.experimental.api.	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.api.*$/;"	I
kotlin.script.experimental.api.	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.api.*$/;"	I
kotlin.script.experimental.api.ScriptCompilationConfiguration	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.api.ScriptCompilationConfiguration$/;"	I
kotlin.script.experimental.api.ScriptCompilationConfiguration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.api.ScriptCompilationConfiguration$/;"	I
kotlin.script.experimental.dependencies.DependenciesResolver	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.DependenciesResolver$/;"	I
kotlin.script.experimental.dependencies.DependenciesResolver	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.DependenciesResolver$/;"	I
kotlin.script.experimental.dependencies.DependenciesResolver.ResolveResult	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.DependenciesResolver.ResolveResult$/;"	I
kotlin.script.experimental.dependencies.DependenciesResolver.ResolveResult	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.DependenciesResolver.ResolveResult$/;"	I
kotlin.script.experimental.dependencies.ScriptDependencies	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.ScriptDependencies$/;"	I
kotlin.script.experimental.dependencies.ScriptDependencies	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.dependencies.ScriptDependencies$/;"	I
kotlin.script.experimental.host.ScriptingHostConfiguration	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.host.ScriptingHostConfiguration$/;"	I
kotlin.script.experimental.host.ScriptingHostConfiguration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.host.ScriptingHostConfiguration$/;"	I
kotlin.script.experimental.host.configurationDependencies	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.host.configurationDependencies$/;"	I
kotlin.script.experimental.host.configurationDependencies	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.host.configurationDependencies$/;"	I
kotlin.script.experimental.jvm.JvmDependency	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.jvm.JvmDependency$/;"	I
kotlin.script.experimental.jvm.JvmDependency	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.jvm.JvmDependency$/;"	I
kotlin.script.experimental.jvm.defaultJvmScriptingHostConfiguration	server/bin/main/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.jvm.defaultJvmScriptingHostConfiguration$/;"	I
kotlin.script.experimental.jvm.defaultJvmScriptingHostConfiguration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import kotlin.script.experimental.jvm.defaultJvmScriptingHostConfiguration$/;"	I
kotlin.script.experimental.jvm.dependenciesFromCurrentContext	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvm.dependenciesFromCurrentContext$/;"	I
kotlin.script.experimental.jvm.dependenciesFromCurrentContext	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvm.dependenciesFromCurrentContext$/;"	I
kotlin.script.experimental.jvm.jvm	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvm.jvm$/;"	I
kotlin.script.experimental.jvm.jvm	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvm.jvm$/;"	I
kotlin.script.experimental.jvmhost.BasicJvmScriptingHost	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvmhost.BasicJvmScriptingHost$/;"	I
kotlin.script.experimental.jvmhost.BasicJvmScriptingHost	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvmhost.BasicJvmScriptingHost$/;"	I
kotlin.script.experimental.jvmhost.createJvmCompilationConfigurationFromTemplate	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvmhost.createJvmCompilationConfigurationFromTemplate$/;"	I
kotlin.script.experimental.jvmhost.createJvmCompilationConfigurationFromTemplate	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import kotlin.script.experimental.jvmhost.createJvmCompilationConfigurationFromTemplate$/;"	I
kotlinBuild	gradle.properties	/^kotlinBuild=1.4.0$/;"	k
kotlinBuildType	gradle.properties	/^kotlinBuildType=Kotlin_1400_CompilerAllPlugins$/;"	k
kotlinCode	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val kotlinCode = convertJavaToKotlin(selectedJavaCode, cp.compiler)$/;"	C
kotlinCode	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val kotlinCode = convertJavaToKotlin(selectedJavaCode, cp.compiler)$/;"	C
kotlinPluginBuild	gradle.properties	/^kotlinPluginBuild=$/;"	k
kotlinVersion	gradle.properties	/^kotlinVersion=1.4.0$/;"	k
kt	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val kt = psi.parentsWithSelf.filterIsInstance<KtExpression>().first()$/;"	C
kt	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        var kt = psi.parentsWithSelf.filterIsInstance<KtExpression>().first()$/;"	v
kt	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val kt = psi.parentsWithSelf.filterIsInstance<KtExpression>().first()$/;"	C
kt	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        var kt = psi.parentsWithSelf.filterIsInstance<KtExpression>().first()$/;"	v
label	.vscode/tasks.json	/^            "label": "Build with Gradle",$/;"	s	object:tasks.0
label	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val label = DECL_RENDERER.render(desc)$/;"	C
label	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val label = DECL_RENDERER.renderValueParameters(listOf(param), false)$/;"	C
label	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val label = DECL_RENDERER.render(desc)$/;"	C
label	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val label = DECL_RENDERER.renderValueParameters(listOf(param), false)$/;"	C
label.hidden	shared/build/reports/tests/test/css/base-style.css	/^label.hidden {$/;"	c
labels	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
labels	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
labels	server/bin/test/org/javacs/kt/ScriptTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
labels	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
labels	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
labels	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^        val labels = completions.items.map { it.label }$/;"	C
lambdaParameter	server/bin/test/completions/TrailingLambda.kt	/^fun lambdaParameter(x: () -> Unit) {}$/;"	m
lambdaParameter	server/src/test/resources/completions/TrailingLambda.kt	/^fun lambdaParameter(x: () -> Unit) {}$/;"	m
langFeatures	server/bin/main/org/javacs/kt/Compiler.kt	/^                val langFeatures = mutableMapOf<LanguageFeature, LanguageFeature.State>()$/;"	C
langFeatures	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                val langFeatures = mutableMapOf<LanguageFeature, LanguageFeature.State>()$/;"	C
langServerDiagnostics	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val langServerDiagnostics = kotlinDiagnostics.flatMap(::convertDiagnostic)$/;"	C
langServerDiagnostics	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val langServerDiagnostics = kotlinDiagnostics.flatMap(::convertDiagnostic)$/;"	C
language	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val language: Language? = null,$/;"	C
language	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val language = if (args.size == 0) "EN" else args[0]$/;"	C
language	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val language: Language? = null,$/;"	C
language	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val language = if (args.size == 0) "EN" else args[0]$/;"	C
languageClient	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private var languageClient: LanguageClient? = null$/;"	v
languageClient	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private var languageClient: LanguageClient? = null$/;"	v
languageOf	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private fun languageOf(uri: URI): Language? {$/;"	m
languageOf	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private fun languageOf(uri: URI): Language? {$/;"	m
languageServer	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val languageServer = KotlinLanguageServer()$/;"	C
languageServer	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    val languageServer = createLanguageServer()$/;"	C
languageServer	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val languageServer = KotlinLanguageServer()$/;"	C
languageServer	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    val languageServer = createLanguageServer()$/;"	C
languageVersionSettings	server/bin/main/org/javacs/kt/Compiler.kt	/^                val languageVersionSettings = LanguageVersionSettingsImpl($/;"	C
languageVersionSettings	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                val languageVersionSettings = LanguageVersionSettingsImpl($/;"	C
lastIndex	shared/bin/main/org/javacs/kt/Logger.kt	/^        val lastIndex = msgLength - 1$/;"	C
lastIndex	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        val lastIndex = msgLength - 1$/;"	C
latestCompiledVersion	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun latestCompiledVersion(uri: URI): CompiledFile =$/;"	m
latestCompiledVersion	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun latestCompiledVersion(uri: URI): CompiledFile =$/;"	m
launcher	server/bin/main/org/javacs/kt/Main.kt	/^    val launcher = LSPLauncher.createServerLauncher(server, ExitingInputStream(inStream), outStr/;"	C
launcher	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    val launcher = LSPLauncher.createServerLauncher(server, ExitingInputStream(inStream), outStr/;"	C
lazy	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val lazy: String by lazy {$/;"	C
lazy	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val lazy: String by lazy {$/;"	C
leftRev	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val leftRev = leftVersion[i].reversed()$/;"	C
leftRev	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val leftRev = leftVersion[i].reversed()$/;"	C
leftVersion	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val leftVersion = extractVersion(left)$/;"	C
leftVersion	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val leftVersion = extractVersion(left)$/;"	C
length	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun length(s: String) = s.length$/;"	m
length	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun length(s: String) = s.length$/;"	m
level	shared/bin/main/org/javacs/kt/Logger.kt	/^    val level: LogLevel,$/;"	C
level	shared/bin/main/org/javacs/kt/Logger.kt	/^    var level = LogLevel.INFO$/;"	v
level	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    val level: LogLevel,$/;"	C
level	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    var level = LogLevel.INFO$/;"	v
li	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun li(init: LI.() -> Unit) = initTag(LI(), init)$/;"	m
li	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun li(init: LI.() -> Unit) = initTag(LI(), init)$/;"	m
line	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    var line = 0$/;"	v
line	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val line = file.lineBefore(cursor)$/;"	C
line	server/bin/main/org/javacs/kt/position/Position.kt	/^    var line = 0$/;"	v
line	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    var line = 0$/;"	v
line	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val line = file.lineBefore(cursor)$/;"	C
line	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var line = 0$/;"	v
lineAfter	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun lineAfter(cursor: Int): String = content.substring(cursor).substringBefore('\\n')$/;"	m
lineAfter	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun lineAfter(cursor: Int): String = content.substring(cursor).substringBefore('\\n')$/;"	m
lineBefore	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun lineBefore(cursor: Int): String = content.substring(0, cursor).substringAfterLast('\\n')$/;"	m
lineBefore	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun lineBefore(cursor: Int): String = content.substring(0, cursor).substringAfterLast('\\n')$/;"	m
lineComment	grammars/kotlin.configuration.json	/^		"lineComment": "\/\/",$/;"	s	object:comments
lineOffset	server/bin/main/org/javacs/kt/position/Position.kt	/^    var lineOffset = 0$/;"	v
lineOffset	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var lineOffset = 0$/;"	v
lines	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val lines = s.replace(" ", "").split('\\n').filter({ it.isNotEmpty() })$/;"	C
lines	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val lines = s.split('\\n')$/;"	C
lines	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val lines = s.replace(" ", "").split('\\n').filter({ it.isNotEmpty() })$/;"	C
lines	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val lines = s.split('\\n')$/;"	C
linkedStdLibs	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val linkedStdLibs = paths.filter(isStdlib)$/;"	C
linkedStdLibs	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val linkedStdLibs = paths.filter(isStdlib)$/;"	C
lintCount	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    var lintCount = 0$/;"	v
lintCount	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    var lintCount = 0$/;"	v
lintLater	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun lintLater(uri: URI) {$/;"	m
lintLater	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun lintLater(uri: URI) {$/;"	m
lintNow	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun lintNow(file: URI) {$/;"	m
lintNow	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun lintNow(file: URI) {$/;"	m
lintRecompilationCallback	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    var lintRecompilationCallback: () -> Unit$/;"	v
lintRecompilationCallback	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    var lintRecompilationCallback: () -> Unit$/;"	v
lintTodo	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    val lintTodo = mutableSetOf<URI>()$/;"	C
lintTodo	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    val lintTodo = mutableSetOf<URI>()$/;"	C
linting	server/bin/main/org/javacs/kt/Configuration.kt	/^    val linting: LintingConfiguration = LintingConfiguration(),$/;"	C
linting	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val linting = config.linting$/;"	C
linting	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val linting: LintingConfiguration = LintingConfiguration(),$/;"	C
linting	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val linting = config.linting$/;"	C
list	server/bin/test/completions/InstanceMember.kt	/^    val list = listOf(1, 2, 3)$/;"	C
list	server/src/test/resources/completions/InstanceMember.kt	/^    val list = listOf(1, 2, 3)$/;"	C
live	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        private val live: Array<Array<Boolean>> = Array(height) { i -> Array(width) { j -> init(/;"	C
live	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        private val live: Array<Array<Boolean>> = Array(height) { i -> Array(width) { j -> init(/;"	C
liveCount	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        private fun liveCount(i: Int, j: Int) = if (i in 0..height - 1 && j in 0..width - 1 && l/;"	m
liveCount	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        private fun liveCount(i: Int, j: Int) = if (i in 0..height - 1 && j in 0..width - 1 && l/;"	m
liveNeighbors	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun liveNeighbors(i: Int, j: Int) = liveCount(i - 1, j - 1) + liveCount(i - 1, j) + live/;"	m
liveNeighbors	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun liveNeighbors(i: Int, j: Int) = liveCount(i - 1, j - 1) + liveCount(i - 1, j) + live/;"	m
localCommonSubstring	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var localCommonSubstring = 0$/;"	v
localFileSystem	server/bin/main/org/javacs/kt/Compiler.kt	/^    private val localFileSystem: VirtualFileSystem$/;"	C
localFileSystem	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    private val localFileSystem: VirtualFileSystem$/;"	C
localNumber	server/bin/test/definition/GoToProperties.kt	/^    val localNumber = 3$/;"	C
localNumber	server/src/test/resources/definition/GoToProperties.kt	/^    val localNumber = 3$/;"	C
locals	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val locals = scope.getContributedDescriptors().asSequence()$/;"	C
locals	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val locals = scope.getContributedDescriptors().asSequence()$/;"	C
locate	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val locate = OneFilePerformance::class.java.getResource(resourcePath)$/;"	C
locate	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val locate = OneFilePerformance::class.java.getResource(resourcePath)$/;"	C
location	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val location = ref.textRange$/;"	C
location	server/bin/main/org/javacs/kt/position/Position.kt	/^fun location(declaration: DeclarationDescriptor): Location? {$/;"	m
location	server/bin/main/org/javacs/kt/position/Position.kt	/^fun location(expr: PsiElement): Location? {$/;"	m
location	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val location = ref.textRange$/;"	C
location	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun location(declaration: DeclarationDescriptor): Location? {$/;"	m
location	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun location(expr: PsiElement): Location? {$/;"	m
locationId	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    override val locationId: String? = null$/;"	C
locationId	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    override val locationId: String? = null$/;"	C
log	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun log(msg: LogMessage) {$/;"	m
log	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun log(msg: LogMessage) {$/;"	m
logAdded	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^private fun logAdded(sources: Collection<Path>, name: String) {$/;"	m
logAdded	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private fun logAdded(sources: Collection<URI>, rootPath: Path?) {$/;"	m
logAdded	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^private fun logAdded(sources: Collection<Path>, name: String) {$/;"	m
logAdded	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private fun logAdded(sources: Collection<URI>, rootPath: Path?) {$/;"	m
logError	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun logError(msg: LogMessage) {$/;"	m
logError	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun logError(msg: LogMessage) {$/;"	m
logHidden	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun logHidden(target: DeclarationDescriptor, from: DeclarationDescriptor) {$/;"	m
logHidden	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun logHidden(target: DeclarationDescriptor, from: DeclarationDescriptor) {$/;"	m
logMessage	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun logMessage(message: MessageParams?) = printMessage(message)$/;"	m
logMessage	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun logMessage(message: MessageParams?) = printMessage(message)$/;"	m
logRemoved	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^private fun logRemoved(sources: Collection<Path>, name: String) {$/;"	m
logRemoved	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private fun logRemoved(sources: Collection<URI>, rootPath: Path?) {$/;"	m
logRemoved	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^private fun logRemoved(sources: Collection<Path>, name: String) {$/;"	m
logRemoved	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private fun logRemoved(sources: Collection<URI>, rootPath: Path?) {$/;"	m
logTime	shared/bin/main/org/javacs/kt/Logger.kt	/^    val logTime = false$/;"	C
logTime	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    val logTime = false$/;"	C
logWithPlaceholdersAt	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun logWithPlaceholdersAt(msgLevel: LogLevel, msg: String, placeholders: Array<out A/;"	m
logWithPlaceholdersAt	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun logWithPlaceholdersAt(msgLevel: LogLevel, msg: String, placeholders: Array<out A/;"	m
loggedHidden	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private val loggedHidden = CacheBuilder.newBuilder().expireAfterWrite(1, TimeUnit.MINUTES).build/;"	C
loggedHidden	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private val loggedHidden = CacheBuilder.newBuilder().expireAfterWrite(1, TimeUnit.MINUTES).build/;"	C
longestCommonSubsequence	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var longestCommonSubsequence = 0$/;"	v
longestLine	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val longestLine = lines.toList().maxBy { it.length } ?: ""$/;"	C
longestLine	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val longestLine = lines.toList().maxBy { it.length } ?: ""$/;"	C
main	scripts/bump_version.py	/^def main():$/;"	f
main	scripts/update_kt_version.py	/^def main():$/;"	f
main	server/bin/main/org/javacs/kt/Main.kt	/^fun main(argv: Array<String>) {$/;"	m
main	server/bin/test/compiledFile/CompiledFileExample.kt	/^    fun main() {$/;"	m
main	server/bin/test/completions/Constructor.kt	/^private fun main() {$/;"	m
main	server/bin/test/completions/TrailingLambda.kt	/^fun main(args: Array<String>) {$/;"	m
main	server/bin/test/definition/GoFrom.kt	/^    fun main() {$/;"	m
main	server/bin/test/definition/GoToProperties.kt	/^fun main() {$/;"	m
main	server/bin/test/hover/ResolveFromFile.kt	/^    fun main() {$/;"	m
main	server/bin/test/kotlinCompilerPerformance/ReferencesBigFile.kt	/^    fun main() {$/;"	m
main	server/bin/test/references/ReferenceCollectionish.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceComponents.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceConstructor.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceFrom.kt	/^    fun main() {$/;"	m
main	server/bin/test/references/ReferenceGetSetValue.kt	/^    private fun main() {$/;"	m
main	server/bin/test/references/ReferenceGetterSetter.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceInvoke.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceOperator.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceOperatorUsingName.kt	/^private fun main() {$/;"	m
main	server/bin/test/references/ReferenceTo.kt	/^    fun main() {$/;"	m
main	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun main(param: String) {$/;"	m
main	server/src/main/kotlin/org/javacs/kt/Main.kt	/^fun main(argv: Array<String>) {$/;"	m
main	server/src/test/resources/compiledFile/CompiledFileExample.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/completions/Constructor.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/completions/TrailingLambda.kt	/^fun main(args: Array<String>) {$/;"	m
main	server/src/test/resources/definition/GoFrom.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/definition/GoToProperties.kt	/^fun main() {$/;"	m
main	server/src/test/resources/hover/ResolveFromFile.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/j2k/JavaJSONConverter.java	/^    public static void main(String[] args) {$/;"	m	class:JavaJSONConverter
main	server/src/test/resources/kotlinCompilerPerformance/ReferencesBigFile.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceCollectionish.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceComponents.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceConstructor.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceFrom.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceGetSetValue.kt	/^    private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceGetterSetter.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceInvoke.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceOperator.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceOperatorUsingName.kt	/^private fun main() {$/;"	m
main	server/src/test/resources/references/ReferenceTo.kt	/^    fun main() {$/;"	m
main	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun main(param: String) {$/;"	m
main1	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main1(args: Array<String>) {$/;"	m
main1	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main1(args: Array<String>) {$/;"	m
main10	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main10(args: Array<String>) {$/;"	m
main10	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main10(args: Array<String>) {$/;"	m
main11	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main11(args: Array<String>) {$/;"	m
main11	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main11(args: Array<String>) {$/;"	m
main12	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main12(args: Array<String>) {$/;"	m
main12	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main12(args: Array<String>) {$/;"	m
main13	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main13(args: Array<String>) {$/;"	m
main13	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main13(args: Array<String>) {$/;"	m
main14	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main14(args: Array<String>) {$/;"	m
main14	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main14(args: Array<String>) {$/;"	m
main15	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main15(args: Array<String>) {$/;"	m
main15	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main15(args: Array<String>) {$/;"	m
main16	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main16(args: Array<String>) {$/;"	m
main16	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main16(args: Array<String>) {$/;"	m
main17	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main17(args: Array<String>) {$/;"	m
main17	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main17(args: Array<String>) {$/;"	m
main18	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main18(args: Array<String>) {$/;"	m
main18	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main18(args: Array<String>) {$/;"	m
main19	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main19(args: Array<String>) {$/;"	m
main19	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main19(args: Array<String>) {$/;"	m
main2	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main2(args: Array<String>) {$/;"	m
main2	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main2(args: Array<String>) {$/;"	m
main20	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main20(args: Array<String>) {$/;"	m
main20	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main20(args: Array<String>) {$/;"	m
main21	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main21(args: Array<String>) {$/;"	m
main21	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main21(args: Array<String>) {$/;"	m
main22	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main22(args: Array<String>) {$/;"	m
main22	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main22(args: Array<String>) {$/;"	m
main23	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main23(args: Array<String>) {$/;"	m
main23	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main23(args: Array<String>) {$/;"	m
main3	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main3(args: Array<String>) {$/;"	m
main3	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main3(args: Array<String>) {$/;"	m
main4	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main4(args: Array<String>) {$/;"	m
main4	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main4(args: Array<String>) {$/;"	m
main5	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main5(args: Array<String>) {$/;"	m
main5	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main5(args: Array<String>) {$/;"	m
main6	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main6(args: Array<String>) {$/;"	m
main6	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main6(args: Array<String>) {$/;"	m
main7	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main7(args: Array<String>) {$/;"	m
main7	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main7(args: Array<String>) {$/;"	m
main8	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main8(args: Array<String>) {$/;"	m
main8	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main8(args: Array<String>) {$/;"	m
main9	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun main9(args: Array<String>) {$/;"	m
main9	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun main9(args: Array<String>) {$/;"	m
mainClass	.vscode/launch.json	/^            "mainClass": "org.javacs.kt.MainKt"$/;"	s	object:configurations.0
mainEnd	gradlew.bat	/^:mainEnd$/;"	l
mainEnd	server/bin/test/additionalWorkspace/gradlew.bat	/^:mainEnd$/;"	l
mainEnd	server/build/install/server/bin/kotlin-language-server.bat	/^:mainEnd$/;"	l
mainEnd	server/build/scripts/kotlin-language-server.bat	/^:mainEnd$/;"	l
mainEnd	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:mainEnd$/;"	l
major	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val major : Int,$/;"	C
major	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val major : Int,$/;"	C
makeField	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun makeField(s: String): Field {$/;"	m
makeField	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun makeField(s: String): Field {$/;"	m
makeMaze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun makeMaze(s: String): Maze {$/;"	m
makeMaze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun makeMaze(s: String): Maze {$/;"	m
map	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val map = hashMapOf<String, Int>()$/;"	C
map	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val map = hashMapOf<String, Int>()$/;"	C
markers	grammars/kotlin.configuration.json	/^        "markers": {$/;"	o	object:folding
match	grammars/Kotlin.tmLanguage.json	/^							"match": "(@(?:exception|throws))\\\\s+(\\\\S+)",$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.2
match	grammars/Kotlin.tmLanguage.json	/^							"match": "(@param)\\\\s+(\\\\S+)",$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.1
match	grammars/Kotlin.tmLanguage.json	/^							"match": "@(author|deprecated|return|see|serial|since|version)\\\\b",$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.0
match	grammars/Kotlin.tmLanguage.json	/^							"match": "{(@link)\\\\s+(\\\\S+)?#([\\\\w$]+\\\\s*\\\\([^\\\\(\\\\)]*\\\\)).*}",$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.3
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\*",$/;"	s	object:repository.import.patterns.2
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\\\\\.",$/;"	s	object:repository.character.patterns.0
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\\\\\.",$/;"	s	object:repository.string-multiline.patterns.0
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\\\\\.",$/;"	s	object:repository.string.patterns.0
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\b(in|out)\\\\b",$/;"	s	object:repository.type-parameter.patterns.1
match	grammars/Kotlin.tmLanguage.json	/^					"match": "\\\\b\\\\w+\\\\b",$/;"	s	object:repository.type-parameter.patterns.0
match	grammars/Kotlin.tmLanguage.json	/^			"match": "(?<![:?]):\\\\s*(\\\\w|\\\\?|\\\\s|->|(?<GROUP>[<(]([^<>()]|\\\\g<GROUP>)+[)>]))+",$/;"	s	object:repository.type-annotation
match	grammars/Kotlin.tmLanguage.json	/^			"match": "(?<!\\")\\"\\"(?!\\")",$/;"	s	object:repository.string-empty
match	grammars/Kotlin.tmLanguage.json	/^			"match": "(?<!\\\\\\\\)\\\\$\\\\w+\\\\b",$/;"	s	object:repository.string-escape-simple
match	grammars/Kotlin.tmLanguage.json	/^			"match": "(?<!\\\\w)@[\\\\w\\\\.]+\\\\b(?!:)",$/;"	s	object:repository.annotation-simple
match	grammars/Kotlin.tmLanguage.json	/^			"match": "0(b|B)[01][01_]*",$/;"	s	object:repository.binary-literal
match	grammars/Kotlin.tmLanguage.json	/^			"match": "0(x|X)[A-Fa-f0-9][A-Fa-f0-9_]*",$/;"	s	object:repository.hex-literal
match	grammars/Kotlin.tmLanguage.json	/^			"match": "<=|>=|===|==|=>|=|\\\\!==|\\\\!=|\\\\+=|\\\\+\\\\+|\\\\+|-=|--|-|\\\\*=|\\\\*|\/=|\//;"	s	object:repository.operators
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\??::(\\\\b\\\\w+\\\\b|`[^`]+`)",$/;"	s	object:repository.method-reference
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\??\\\\.?(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s/;"	s	object:repository.function-call
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(\\\\w=)\\\\s*(=)",$/;"	s	object:repository.key
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(abstract|final|enum|open|annotation|sealed|data|override|final|lateinit|priva/;"	s	object:repository.prefix-modifiers
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(as|typeof|is|in)\\\\b",$/;"	s	object:repository.hard-keywords
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(catch|finally|field)\\\\b",$/;"	s	object:repository.soft-keywords
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(class|interface)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g</;"	s	object:repository.class-declaration
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(fun)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s*(?:(\\\\w+)\\\\.)?(\\\\/;"	s	object:repository.function-declaration
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(if|else|while|do|when|try|throw|break|continue|return|for)\\\\b",$/;"	s	object:repository.control-keywords
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(object)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)",$/;"	s	object:repository.object-declaration
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(this|super)(@\\\\w+)?\\\\b",$/;"	s	object:repository.self-reference
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(true|false)\\\\b",$/;"	s	object:repository.boolean-literal
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(typealias)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>/;"	s	object:repository.type-alias
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(val|var)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?",$/;"	s	object:repository.variable-declaration
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b(where|by|get|set)\\\\b",$/;"	s	object:repository.postfix-modifiers
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b[\\\\w\\\\.]+\\\\b",$/;"	s	object:repository.unescaped-annotation
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\b\\\\d[\\\\d_]*(\\\\.[\\\\d_]+)?((e|E)\\\\d+)?(L|F|f)?\\\\b",$/;"	s	object:repository.decimal-literal
match	grammars/Kotlin.tmLanguage.json	/^			"match": "\\\\bnull\\\\b",$/;"	s	object:repository.null-literal
match	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val match = Regex("import ((\\\\w+\\\\.)*)[\\\\w*]*").matchEntire(surroundingElement/;"	C
match	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val match = Regex("(get|set)?((?:(?:is)|[A-Z])\\\\w*)").matchEntire(d.name.identifier)!!$/;"	C
match	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val match = Regex("import ((\\\\w+\\\\.)*)[\\\\w*]*").matchEntire(surroundingElement/;"	C
match	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val match = Regex("package ((\\\\w+\\\\.)*)[\\\\w*]*").matchEntire(surroundingElemen/;"	C
match	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val match = Regex("(get|set)?((?:(?:is)|[A-Z])\\\\w*)").matchEntire(d.name.identifier)!!$/;"	C
matchCall	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val matchCall = callPattern.matchEntire(result.insertText)$/;"	C
matchCall	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val matchCall = callPattern.matchEntire(result.insertText)$/;"	C
matchName	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val matchName = params.filter { it.getSubjectName() == declaration.name.toString() }$/;"	C
matchName	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val matchName = params.filter { it.getSubjectName() == declaration.name.toString() }$/;"	C
matchesName	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val matchesName = completions.filter(nameFilter)$/;"	C
matchesName	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val matchesName = completions.filter { containsCharactersInOrder(name(it), partial, caseSens/;"	C
matchesPartialIdentifier	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun matchesPartialIdentifier(partialIdentifier: String): (DeclarationDescriptor) -> Bool/;"	m
matchesReference	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun matchesReference(found: DeclarationDescriptor, search: KtNamedDeclaration): Boolean /;"	m
matchesReference	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun matchesReference(found: DeclarationDescriptor, search: KtNamedDeclaration): Boolean /;"	m
mavenJarName	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun mavenJarName(a: Artifact, source: Boolean) =$/;"	m
mavenJarName	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun mavenJarName(a: Artifact, source: Boolean) =$/;"	m
mavenOutput	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        val mavenOutput = generateMavenDependencyList(pom)$/;"	C
mavenOutput	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val mavenOutput = Files.createTempFile("deps", ".txt")$/;"	C
mavenOutput	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        val mavenOutput = generateMavenDependencyList(pom)$/;"	C
mavenOutput	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val mavenOutput = Files.createTempFile("deps", ".txt")$/;"	C
max	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val max = Math.max(args.textRange.startOffset, cursor)$/;"	C
max	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun max(a: Int, b: Int): Int = if (a > b) a else b$/;"	m
max	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val max = Math.max(args.textRange.startOffset, cursor)$/;"	C
max	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun max(a: Int, b: Int): Int = if (a > b) a else b$/;"	m
maybeCreate	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        fun maybeCreate(file: Path): GradleClassPathResolver? =$/;"	m
maybeCreate	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        fun maybeCreate(file: Path): MavenClassPathResolver? =$/;"	m
maybeCreate	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        fun maybeCreate(file: Path): ShellClassPathResolver? =$/;"	m
maybeCreate	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        fun maybeCreate(file: Path): GradleClassPathResolver? =$/;"	m
maybeCreate	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^        fun maybeCreate(file: Path): MavenClassPathResolver? =$/;"	m
maybeCreate	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        fun maybeCreate(file: Path): ShellClassPathResolver? =$/;"	m
maybes	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val maybes = possibleReferences(declaration, sp).map { it.toPath() }$/;"	C
maybes	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val maybes = possibleReferences(declaration, sp).map { it.toPath() }$/;"	C
maze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val maze = makeMaze(str)$/;"	C
maze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val maze = makeMaze(str)$/;"	C
memberName	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val memberName = expression.potentiallyApplicableMember?.name$/;"	C
memberName	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val memberName = expression.potentiallyApplicableMember?.name$/;"	C
memberOverloads	server/bin/main/org/javacs/kt/completion/Completions.kt	/^fun memberOverloads(type: KotlinType, identifier: String): Sequence<CallableDescriptor> {$/;"	m
memberOverloads	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^fun memberOverloads(type: KotlinType, identifier: String): Sequence<CallableDescriptor> {$/;"	m
members	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val members = receiverType.memberScope.getContributedDescriptors().asSequence()$/;"	C
members	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val members = implicitMembers(scope)$/;"	C
members	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val members = receiverType.memberScope.getContributedDescriptors().asSequence()$/;"	C
members	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val members = implicitMembers(scope)$/;"	C
message	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun message(diagnostic: KotlinDiagnostic) =$/;"	m
message	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun message(diagnostic: KotlinDiagnostic) =$/;"	m
message	shared/bin/main/org/javacs/kt/Logger.kt	/^    val message: String$/;"	C
message	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    val message: String$/;"	C
method-reference	grammars/Kotlin.tmLanguage.json	/^		"method-reference": {$/;"	o	object:repository
methodInDifferentFile	server/bin/test/definition/GoTo.kt	/^    fun methodInDifferentFile() {$/;"	m
methodInDifferentFile	server/src/test/resources/definition/GoTo.kt	/^    fun methodInDifferentFile() {$/;"	m
methodInSameFile	server/bin/test/definition/GoFrom.kt	/^    fun methodInSameFile() {$/;"	m
methodInSameFile	server/src/test/resources/definition/GoFrom.kt	/^    fun methodInSameFile() {$/;"	m
methodSignature	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private val methodSignature = Regex("""(?:fun|constructor) (?:<(?:[a-zA-Z\\?\\!\\: ]+)(?:, [A-Z]/;"	C
methodSignature	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private val methodSignature = Regex("""(?:fun|constructor) (?:<(?:[a-zA-Z\\?\\!\\: ]+)(?:, [A-Z]/;"	C
min	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val min = Math.min(args.textRange.startOffset, cursor)$/;"	C
min	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val min = Math.min(args.textRange.startOffset, cursor)$/;"	C
minor	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val minor: Int,$/;"	C
minor	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val minor: Int,$/;"	C
mixedParameters	server/bin/test/completions/TrailingLambda.kt	/^fun mixedParameters(a: Int, b: (Int) -> Unit) {}$/;"	m
mixedParameters	server/src/test/resources/completions/TrailingLambda.kt	/^fun mixedParameters(a: Int, b: (Int) -> Unit) {}$/;"	m
module	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val module = file.container.get<ModuleDescriptor>()$/;"	C
module	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val module = file.container.get<ModuleDescriptor>()$/;"	C
msgLength	shared/bin/main/org/javacs/kt/Logger.kt	/^        val msgLength = msg.length$/;"	C
msgLength	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        val msgLength = msg.length$/;"	C
multiParam	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun multiParam(first: Int, second: Int) {$/;"	m
multiParam	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun multiParam(first: String, second: String) {$/;"	m
multiParam	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun multiParam(first: Int, second: Int) {$/;"	m
multiParam	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun multiParam(first: String, second: String) {$/;"	m
mvnCommand	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private val mvnCommand: Path by lazy {$/;"	C
mvnCommand	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private val mvnCommand: Path by lazy {$/;"	C
myTestResources	server/bin/test/org/javacs/kt/CompilerTest.kt	/^    val myTestResources = testResourcesRoot().resolve("compiler")$/;"	C
myTestResources	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^    val myTestResources = testResourcesRoot().resolve("compiler")$/;"	C
n	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val n = field.liveNeighbors(i, j)$/;"	C
n	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val n = field.liveNeighbors(i, j)$/;"	C
nArguments	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val nArguments = argumentList.text.count { it == ',' } + 1$/;"	C
nArguments	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val nArguments = argumentList.text.count { it == ',' } + 1$/;"	C
name	.vscode/launch.json	/^            "name": "Attach running KLS with Java Debugger",$/;"	s	object:configurations.2
name	.vscode/launch.json	/^            "name": "Attach running KLS",$/;"	s	object:configurations.1
name	.vscode/launch.json	/^            "name": "Debug Tests",$/;"	s	object:configurations.3
name	.vscode/launch.json	/^            "name": "Launch KLS",$/;"	s	object:configurations.0
name	grammars/Kotlin.tmLanguage.json	/^									"name": "entity.name.type.class.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.2.captures.2
name	grammars/Kotlin.tmLanguage.json	/^									"name": "entity.name.type.class.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.3.captures.2
name	grammars/Kotlin.tmLanguage.json	/^									"name": "keyword.other.documentation.javadoc.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.1.captures.1
name	grammars/Kotlin.tmLanguage.json	/^									"name": "keyword.other.documentation.javadoc.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.2.captures.1
name	grammars/Kotlin.tmLanguage.json	/^									"name": "keyword.other.documentation.javadoc.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.3.captures.1
name	grammars/Kotlin.tmLanguage.json	/^									"name": "variable.parameter.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.1.captures.2
name	grammars/Kotlin.tmLanguage.json	/^									"name": "variable.parameter.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.3.captures.3
name	grammars/Kotlin.tmLanguage.json	/^							"name": "keyword.other.documentation.javadoc.kotlin"$/;"	s	object:repository.comment-javadoc.patterns.0.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "comment.block.javadoc.kotlin",$/;"	s	object:repository.comment-javadoc.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "constant.character.escape.kotlin"$/;"	s	object:repository.character.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "constant.character.escape.kotlin"$/;"	s	object:repository.string-multiline.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "constant.character.escape.kotlin"$/;"	s	object:repository.string.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.function.call.kotlin"$/;"	s	object:repository.function-call.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.function.declaration.kotlin"$/;"	s	object:repository.function-declaration.captures.5
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.function.reference.kotlin"$/;"	s	object:repository.method-reference.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.annotation-site.kotlin"$/;"	s	object:repository.annotation-site-list.beginCaptures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.annotation-site.kotlin"$/;"	s	object:repository.annotation-site.beginCaptures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.class.extension.kotlin"$/;"	s	object:repository.function-declaration.captures.4
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.class.kotlin"$/;"	s	object:repository.class-declaration.captures.2
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.kotlin"$/;"	s	object:repository.type-alias.captures.2
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.kotlin"$/;"	s	object:repository.type-parameter.patterns.0
name	grammars/Kotlin.tmLanguage.json	/^					"name": "entity.name.type.object.kotlin"$/;"	s	object:repository.object-declaration.captures.2
name	grammars/Kotlin.tmLanguage.json	/^					"name": "keyword.operator.assignment.kotlin"$/;"	s	object:repository.key.captures.2
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.modifier.kotlin"$/;"	s	object:repository.type-parameter.patterns.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.alias.kotlin"$/;"	s	object:repository.type-alias.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.class.kotlin"$/;"	s	object:repository.class-declaration.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.function.kotlin"$/;"	s	object:repository.function-declaration.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.import.kotlin"$/;"	s	object:repository.import.beginCaptures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.object.kotlin"$/;"	s	object:repository.object-declaration.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.package.kotlin"$/;"	s	object:repository.package.beginCaptures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "storage.type.variable.kotlin"$/;"	s	object:repository.variable-declaration.captures.1
name	grammars/Kotlin.tmLanguage.json	/^					"name": "variable.language.wildcard.kotlin"$/;"	s	object:repository.import.patterns.2
name	grammars/Kotlin.tmLanguage.json	/^					"name": "variable.parameter.kotlin"$/;"	s	object:repository.key.captures.1
name	grammars/Kotlin.tmLanguage.json	/^			"name": "comment.block.kotlin"$/;"	s	object:repository.comment-block
name	grammars/Kotlin.tmLanguage.json	/^			"name": "comment.line.double-slash.kotlin"$/;"	s	object:repository.comment-line
name	grammars/Kotlin.tmLanguage.json	/^			"name": "constant.language.boolean.kotlin"$/;"	s	object:repository.boolean-literal
name	grammars/Kotlin.tmLanguage.json	/^			"name": "constant.language.null.kotlin"$/;"	s	object:repository.null-literal
name	grammars/Kotlin.tmLanguage.json	/^			"name": "constant.numeric.binary.kotlin"$/;"	s	object:repository.binary-literal
name	grammars/Kotlin.tmLanguage.json	/^			"name": "constant.numeric.decimal.kotlin"$/;"	s	object:repository.decimal-literal
name	grammars/Kotlin.tmLanguage.json	/^			"name": "constant.numeric.hex.kotlin"$/;"	s	object:repository.hex-literal
name	grammars/Kotlin.tmLanguage.json	/^			"name": "entity.name.type.annotation.kotlin"$/;"	s	object:repository.annotation-simple
name	grammars/Kotlin.tmLanguage.json	/^			"name": "entity.name.type.annotation.kotlin"$/;"	s	object:repository.unescaped-annotation
name	grammars/Kotlin.tmLanguage.json	/^			"name": "keyword.control.kotlin"$/;"	s	object:repository.control-keywords
name	grammars/Kotlin.tmLanguage.json	/^			"name": "keyword.hard.kotlin"$/;"	s	object:repository.hard-keywords
name	grammars/Kotlin.tmLanguage.json	/^			"name": "keyword.operator.kotlin"$/;"	s	object:repository.operators
name	grammars/Kotlin.tmLanguage.json	/^			"name": "keyword.soft.kotlin"$/;"	s	object:repository.soft-keywords
name	grammars/Kotlin.tmLanguage.json	/^			"name": "meta.import.kotlin",$/;"	s	object:repository.import
name	grammars/Kotlin.tmLanguage.json	/^			"name": "meta.package.kotlin",$/;"	s	object:repository.package
name	grammars/Kotlin.tmLanguage.json	/^			"name": "meta.template.expression.kotlin",$/;"	s	object:repository.string-escape-bracketed
name	grammars/Kotlin.tmLanguage.json	/^			"name": "storage.modifier.other.kotlin"$/;"	s	object:repository.postfix-modifiers
name	grammars/Kotlin.tmLanguage.json	/^			"name": "storage.modifier.other.kotlin"$/;"	s	object:repository.prefix-modifiers
name	grammars/Kotlin.tmLanguage.json	/^			"name": "string.quoted.double.kotlin"$/;"	s	object:repository.string-empty
name	grammars/Kotlin.tmLanguage.json	/^			"name": "string.quoted.double.kotlin",$/;"	s	object:repository.string
name	grammars/Kotlin.tmLanguage.json	/^			"name": "string.quoted.double.kotlin",$/;"	s	object:repository.string-multiline
name	grammars/Kotlin.tmLanguage.json	/^			"name": "string.quoted.single.kotlin",$/;"	s	object:repository.character
name	grammars/Kotlin.tmLanguage.json	/^			"name": "variable.language.this.kotlin"$/;"	s	object:repository.self-reference
name	grammars/Kotlin.tmLanguage.json	/^			"name": "variable.string-escape.kotlin"$/;"	s	object:repository.string-escape-simple
name	grammars/Kotlin.tmLanguage.json	/^	"name": "Kotlin",$/;"	s
name	scripts/update_kt_version.py	/^    def name(self):$/;"	m	class:Unnamed
name	scripts/utils/teamcity.py	/^    def name(self):$/;"	m	class:TeamCityNode
name	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        val name = extractPropertyName(d)$/;"	C
name	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun name(d: DeclarationDescriptor): String {$/;"	m
name	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^        val name = escape(desc.label()!!)$/;"	C
name	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^                    val name = when (target) {$/;"	C
name	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^        val name = it.jarEntry.name.substringAfterLast("\/").split(".")$/;"	C
name	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.methodExpression.translate()$/;"	C
name	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.referenceNameElement.translate()$/;"	C
name	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.type?.translateType()$/;"	C
name	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = method.name$/;"	C
name	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^    val name = d.name ?: return null$/;"	C
name	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val name: String by map$/;"	C
name	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var name: String by Delegates.notNull()$/;"	v
name	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var name: String by Delegates.observable("no name") { d, old, new ->$/;"	v
name	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    override val name: String? = null,$/;"	C
name	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^        val name = extractPropertyName(d)$/;"	C
name	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun name(d: DeclarationDescriptor): String {$/;"	m
name	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^        val name = escape(desc.label()!!)$/;"	C
name	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^                    val name = when (target) {$/;"	C
name	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^        val name = it.jarEntry.name.substringAfterLast("\/").split(".")$/;"	C
name	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.methodExpression.translate()$/;"	C
name	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.referenceNameElement.translate()$/;"	C
name	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = expression.type?.translateType()$/;"	C
name	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val name = method.name$/;"	C
name	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^    val name = d.name ?: return null$/;"	C
name	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    override val name: String? = null,$/;"	C
name	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val name: String by map$/;"	C
name	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var name: String by Delegates.notNull()$/;"	v
name	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var name: String by Delegates.observable("no name") { d, old, new ->$/;"	v
name	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val name = file.fileName.toString()$/;"	C
name	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val name = file.fileName.toString()$/;"	C
nameFilter	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val nameFilter = equalsIdentifier(identifier)$/;"	C
nameFilter	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val nameFilter = matchesPartialIdentifier(partial)$/;"	C
nameFilter	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val nameFilter = equalsIdentifier(identifier)$/;"	C
nameSpan	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^        val nameSpan = currentDecl.let { range(file.text, it.textRange) } ?: span$/;"	C
new	server/bin/main/org/javacs/kt/Compiler.kt	/^        val new = psiFileFactoryFor(kind).createFileFromText(file.toString(), language, content,/;"	C
new	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val new = psiFileFactoryFor(kind).createFileFromText(file.toString(), language, content,/;"	C
newBuildScriptClassPath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^            val newBuildScriptClassPath = resolver.buildScriptClasspathOrEmpty$/;"	C
newBuildScriptClassPath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^            val newBuildScriptClassPath = resolver.buildScriptClasspathOrEmpty$/;"	C
newClassPath	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^            val newClassPath = resolver.classpathOrEmpty$/;"	C
newClassPath	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^            val newClassPath = resolver.classpathOrEmpty$/;"	C
newEnd	server/bin/main/org/javacs/kt/position/Position.kt	/^    val newEnd = max(newContent.length - suffix, prefix)$/;"	C
newEnd	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val newEnd = max(newContent.length - suffix, prefix)$/;"	C
newLine	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	private val newLine = System.lineSeparator()$/;"	C
newLine	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	private val newLine = System.lineSeparator()$/;"	C
newName	shared/bin/main/org/javacs/kt/util/Utils.kt	/^	val newName = oldName.substring(0, oldName.lastIndexOf(".")) + newExtension$/;"	C
newName	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^	val newName = oldName.substring(0, oldName.lastIndexOf(".")) + newExtension$/;"	C
newRelative	server/bin/main/org/javacs/kt/CompiledFile.kt	/^                val newRelative = cursor - newChanged.startOffset$/;"	C
newRelative	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^                val newRelative = cursor - newChanged.startOffset$/;"	C
newText	server/bin/main/org/javacs/kt/SourceFiles.kt	/^            var newText = existing.content$/;"	v
newText	server/bin/test/org/javacs/kt/LintTest.kt	/^            val newText = text + "1"$/;"	C
newText	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^            var newText = existing.content$/;"	v
newText	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^            val newText = text + "1"$/;"	C
newURI	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^        val newURI = "$parentURI${fileName.split(".").first()}.$newExtension"$/;"	C
newURI	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^        val newURI = "$parentURI${fileName.split(".").first()}.$newExtension"$/;"	C
newline	shared/bin/main/org/javacs/kt/Logger.kt	/^    private val newline = System.lineSeparator()$/;"	C
newline	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private val newline = System.lineSeparator()$/;"	C
next	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val next = reader.read()$/;"	C
next	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun next(field: Field): Field {$/;"	m
next	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val next = reader.read()$/;"	C
next	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun next(field: Field): Field {$/;"	m
nextChar	server/bin/main/org/javacs/kt/position/Position.kt	/^        val nextChar = reader.read()$/;"	C
nextChar	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^        val nextChar = reader.read()$/;"	C
nextChar	shared/bin/main/org/javacs/kt/Logger.kt	/^            val nextChar = if (charIndex != lastIndex) msg.get(charIndex + 1) else '?'$/;"	C
nextChar	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^            val nextChar = if (charIndex != lastIndex) msg.get(charIndex + 1) else '?'$/;"	C
nextIndent	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun nextIndent(indentDelta: Int = 1): String = ""$/;"	m
nextIndent	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    private fun nextIndent(indentDelta: Int = 1): String = ""$/;"	m
noErrors	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val noErrors = compiled - byFile.keys$/;"	C
noErrors	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val noErrors = compiled - byFile.keys$/;"	C
node_from_url	scripts/utils/teamcity.py	/^def node_from_url(server_url, site_path):$/;"	f
notIn	grammars/kotlin.configuration.json	/^	   { "open": "\/*", "close": " *\/", "notIn": ["string"] }$/;"	a	object:autoClosingPairs.5
notIn	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	a	object:autoClosingPairs.3
notIn	grammars/kotlin.configuration.json	/^       { "open": "\\"", "close": "\\"", "notIn": ["string"] },$/;"	a	object:autoClosingPairs.4
notNullAnnotations	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^        val notNullAnnotations = notNulls.toSet()$/;"	C
notNullAnnotations	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^        val notNullAnnotations = notNulls.toSet()$/;"	C
notNullsList	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    private val notNullsList = mutableListOf<String>()$/;"	C
notNullsList	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    private val notNullsList = mutableListOf<String>()$/;"	C
null-literal	grammars/Kotlin.tmLanguage.json	/^		"null-literal": {$/;"	o	object:repository
nullablesList	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    private val nullablesList = mutableListOf<String>()$/;"	C
nullablesList	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    private val nullablesList = mutableListOf<String>()$/;"	C
number	scripts/utils/teamcity.py	/^    def number(self):$/;"	m	class:TeamCityNode
numbers	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val numbers = listOf(1, 2, 3)$/;"	C
numbers	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val numbers = listOf(1, 2, 3)$/;"	C
object-declaration	grammars/Kotlin.tmLanguage.json	/^		"object-declaration": {$/;"	o	object:repository
objectFun	server/bin/test/completions/Statics.kt	/^    fun objectFun() {$/;"	m
objectFun	server/src/test/resources/completions/Statics.kt	/^    fun objectFun() {$/;"	m
objectScopeNumber	server/bin/test/definition/GoToProperties.kt	/^    const val objectScopeNumber: Int = 5$/;"	C
objectScopeNumber	server/src/test/resources/definition/GoToProperties.kt	/^    const val objectScopeNumber: Int = 5$/;"	C
oddLength	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val oddLength = compose(::isOdd, ::length)$/;"	C
oddLength	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val oddLength = compose(::isOdd, ::length)$/;"	C
offSide	grammars/kotlin.configuration.json	/^        "offSide": true,$/;"	b	object:folding
offset	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        var offset: Int$/;"	v
offset	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^                val offset = offset(content, position.position.line, position.position.character/;"	C
offset	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val offset = offset(content, position.position.line, position.position.character)$/;"	C
offset	server/bin/main/org/javacs/kt/position/Position.kt	/^    var offset = 0$/;"	v
offset	server/bin/main/org/javacs/kt/position/Position.kt	/^fun offset(content: String, line: Int, char: Int): Int {$/;"	m
offset	server/bin/main/org/javacs/kt/position/Position.kt	/^fun offset(content: String, position: Position) =$/;"	m
offset	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        var offset: Int$/;"	v
offset	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^                val offset = offset(content, position.position.line, position.position.character/;"	C
offset	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val offset = offset(content, position.position.line, position.position.character)$/;"	C
offset	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    var offset = 0$/;"	v
offset	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun offset(content: String, line: Int, char: Int): Int {$/;"	m
offset	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun offset(content: String, position: Position) =$/;"	m
oldChanged	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val oldChanged = changedRegion(parse.text, content)?.first ?: TextRange(cursor, cursor)$/;"	C
oldChanged	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val oldChanged = changedRegion(parse.text, content)?.first ?: TextRange(cursor, cursor)$/;"	C
oldCursor	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val oldCursor = oldOffset(cursor)$/;"	C
oldCursor	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val oldCursor = oldOffset(cursor)$/;"	C
oldEnd	server/bin/main/org/javacs/kt/position/Position.kt	/^    val oldEnd = max(oldContent.length - suffix, prefix)$/;"	C
oldEnd	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val oldEnd = max(oldContent.length - suffix, prefix)$/;"	C
oldName	shared/bin/main/org/javacs/kt/util/Utils.kt	/^	val oldName = fileName.toString()$/;"	C
oldName	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^	val oldName = fileName.toString()$/;"	C
oldOffset	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun oldOffset(cursor: Int): Int {$/;"	m
oldOffset	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun oldOffset(cursor: Int): Int {$/;"	m
oldParent	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val oldParent = psi.parentsWithSelf$/;"	C
oldParent	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val oldParent = psi.parentsWithSelf$/;"	C
oldRelative	server/bin/main/org/javacs/kt/CompiledFile.kt	/^                val oldRelative = newRelative * oldChanged.length \/ newChanged.length$/;"	C
oldRelative	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^                val oldRelative = newRelative * oldChanged.length \/ newChanged.length$/;"	C
omega	gradlew.bat	/^:omega$/;"	l
omega	server/bin/test/additionalWorkspace/gradlew.bat	/^:omega$/;"	l
omega	server/build/install/server/bin/kotlin-language-server.bat	/^:omega$/;"	l
omega	server/build/scripts/kotlin-language-server.bat	/^:omega$/;"	l
omega	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:omega$/;"	l
onTypeFormatting	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun onTypeFormatting(params: DocumentOnTypeFormattingParams): CompletableFuture<Lis/;"	m
onTypeFormatting	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun onTypeFormatting(params: DocumentOnTypeFormattingParams): CompletableFuture<Lis/;"	m
one	server/bin/test/kotlinCompilerPerformance/ReferencesBigFile.kt	/^        val one = BigFile.max(1, 0)$/;"	C
one	server/src/test/resources/kotlinCompilerPerformance/ReferencesBigFile.kt	/^        val one = BigFile.max(1, 0)$/;"	C
oneOrTwoArgs	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun oneOrTwoArgs(first: String) {$/;"	m
oneOrTwoArgs	server/bin/test/signatureHelp/SignatureHelp.kt	/^    fun oneOrTwoArgs(first: String, second: String) {$/;"	m
oneOrTwoArgs	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun oneOrTwoArgs(first: String) {$/;"	m
oneOrTwoArgs	server/src/test/resources/signatureHelp/SignatureHelp.kt	/^    fun oneOrTwoArgs(first: String, second: String) {$/;"	m
onload	shared/build/reports/tests/test/js/report.js	/^    window.onload = function() {$/;"	f	function:window
onlyDeclaration	server/bin/main/org/javacs/kt/Compiler.kt	/^        val onlyDeclaration = declarations.first()$/;"	C
onlyDeclaration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val onlyDeclaration = declarations.first()$/;"	C
open	grammars/kotlin.configuration.json	/^	   { "open": "\/*", "close": " *\/", "notIn": ["string"] }$/;"	s	object:autoClosingPairs.5
open	grammars/kotlin.configuration.json	/^       { "open": "'", "close": "'", "notIn": ["string", "comment"] },$/;"	s	object:autoClosingPairs.3
open	grammars/kotlin.configuration.json	/^       { "open": "(", "close": ")" },$/;"	s	object:autoClosingPairs.2
open	grammars/kotlin.configuration.json	/^       { "open": "[", "close": "]" },$/;"	s	object:autoClosingPairs.1
open	grammars/kotlin.configuration.json	/^       { "open": "\\"", "close": "\\"", "notIn": ["string"] },$/;"	s	object:autoClosingPairs.4
open	grammars/kotlin.configuration.json	/^       { "open": "{", "close": "}" },$/;"	s	object:autoClosingPairs.0
open	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun open(uri: URI, content: String, version: Int) {$/;"	m
open	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val open = mutableSetOf<URI>()$/;"	C
open	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun open(relativePath: String) {$/;"	m
open	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun open(uri: URI, content: String, version: Int) {$/;"	m
open	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val open = mutableSetOf<URI>()$/;"	C
open	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun open(relativePath: String) {$/;"	m
openJarURLConnection	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun openJarURLConnection() = toJarURL().openConnection() as JarURLConnection$/;"	m
openJarURLConnection	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun openJarURLConnection() = toJarURL().openConnection() as JarURLConnection$/;"	m
operatorNames	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun operatorNames(name: Name): List<KtSingleValueToken> =$/;"	m
operatorNames	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun operatorNames(name: Name): List<KtSingleValueToken> =$/;"	m
operators	grammars/Kotlin.tmLanguage.json	/^		"operators": {$/;"	o	object:repository
operators	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^        val operators = operatorNames(declaration.name)$/;"	C
operators	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^        val operators = operatorNames(declaration.name)$/;"	C
opt	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val opt = OptionsBuilder().include(OneFilePerformance::class.java.getSimpleName())$/;"	C
opt	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val opt = OptionsBuilder().include(OneFilePerformance::class.java.getSimpleName())$/;"	C
org.eclipse.lsp4j.	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.eclipse.lsp4j.*$/;"	I
org.eclipse.lsp4j.CompletionItem	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionItem$/;"	I
org.eclipse.lsp4j.CompletionItem	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItem$/;"	I
org.eclipse.lsp4j.CompletionItem	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionItem$/;"	I
org.eclipse.lsp4j.CompletionItem	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItem$/;"	I
org.eclipse.lsp4j.CompletionItemKind	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionItemKind$/;"	I
org.eclipse.lsp4j.CompletionItemKind	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionItemKind$/;"	I
org.eclipse.lsp4j.CompletionItemKind.	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItemKind.*$/;"	I
org.eclipse.lsp4j.CompletionItemKind.	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItemKind.*$/;"	I
org.eclipse.lsp4j.CompletionItemKind.Function	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItemKind.Function$/;"	I
org.eclipse.lsp4j.CompletionItemKind.Function	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.CompletionItemKind.Function$/;"	I
org.eclipse.lsp4j.CompletionList	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionList$/;"	I
org.eclipse.lsp4j.CompletionList	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^import org.eclipse.lsp4j.CompletionList$/;"	I
org.eclipse.lsp4j.CompletionList	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.eclipse.lsp4j.CompletionList$/;"	I
org.eclipse.lsp4j.CompletionList	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^import org.eclipse.lsp4j.CompletionList$/;"	I
org.eclipse.lsp4j.ConfigurationItem	server/bin/main/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.ConfigurationItem$/;"	I
org.eclipse.lsp4j.ConfigurationItem	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.ConfigurationItem$/;"	I
org.eclipse.lsp4j.ConfigurationParams	server/bin/main/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.ConfigurationParams$/;"	I
org.eclipse.lsp4j.ConfigurationParams	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.ConfigurationParams$/;"	I
org.eclipse.lsp4j.Diagnostic	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.eclipse.lsp4j.Diagnostic as LangServerDiagnostic$/;"	I
org.eclipse.lsp4j.Diagnostic	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.Diagnostic$/;"	I
org.eclipse.lsp4j.Diagnostic	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.eclipse.lsp4j.Diagnostic as LangServerDiagnostic$/;"	I
org.eclipse.lsp4j.Diagnostic	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.Diagnostic$/;"	I
org.eclipse.lsp4j.DiagnosticSeverity	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.eclipse.lsp4j.DiagnosticSeverity$/;"	I
org.eclipse.lsp4j.DiagnosticSeverity	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.eclipse.lsp4j.DiagnosticSeverity$/;"	I
org.eclipse.lsp4j.DidChangeWorkspaceFoldersParams	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.DidChangeWorkspaceFoldersParams$/;"	I
org.eclipse.lsp4j.DidChangeWorkspaceFoldersParams	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.DidChangeWorkspaceFoldersParams$/;"	I
org.eclipse.lsp4j.DocumentFormattingParams	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.DocumentFormattingParams$/;"	I
org.eclipse.lsp4j.DocumentFormattingParams	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.DocumentFormattingParams$/;"	I
org.eclipse.lsp4j.DocumentSymbol	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.DocumentSymbol$/;"	I
org.eclipse.lsp4j.DocumentSymbol	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.DocumentSymbol$/;"	I
org.eclipse.lsp4j.DocumentSymbol	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.DocumentSymbol$/;"	I
org.eclipse.lsp4j.DocumentSymbol	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.DocumentSymbol$/;"	I
org.eclipse.lsp4j.DocumentSymbolParams	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.DocumentSymbolParams$/;"	I
org.eclipse.lsp4j.DocumentSymbolParams	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.DocumentSymbolParams$/;"	I
org.eclipse.lsp4j.DocumentSymbolParams	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.DocumentSymbolParams$/;"	I
org.eclipse.lsp4j.DocumentSymbolParams	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.DocumentSymbolParams$/;"	I
org.eclipse.lsp4j.FormattingOptions	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^import org.eclipse.lsp4j.FormattingOptions$/;"	I
org.eclipse.lsp4j.FormattingOptions	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.FormattingOptions$/;"	I
org.eclipse.lsp4j.FormattingOptions	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^import org.eclipse.lsp4j.FormattingOptions$/;"	I
org.eclipse.lsp4j.FormattingOptions	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.FormattingOptions$/;"	I
org.eclipse.lsp4j.Hover	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.Hover$/;"	I
org.eclipse.lsp4j.Hover	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.Hover$/;"	I
org.eclipse.lsp4j.InsertTextFormat.PlainText	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.InsertTextFormat.PlainText$/;"	I
org.eclipse.lsp4j.InsertTextFormat.PlainText	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.InsertTextFormat.PlainText$/;"	I
org.eclipse.lsp4j.InsertTextFormat.Snippet	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.InsertTextFormat.Snippet$/;"	I
org.eclipse.lsp4j.InsertTextFormat.Snippet	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.eclipse.lsp4j.InsertTextFormat.Snippet$/;"	I
org.eclipse.lsp4j.Location	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.Location	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.Location$/;"	I
org.eclipse.lsp4j.MarkedString	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.MarkedString$/;"	I
org.eclipse.lsp4j.MarkedString	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.eclipse.lsp4j.MarkedString$/;"	I
org.eclipse.lsp4j.MarkedString	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.MarkedString$/;"	I
org.eclipse.lsp4j.MarkedString	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.eclipse.lsp4j.MarkedString$/;"	I
org.eclipse.lsp4j.MarkupContent	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.MarkupContent$/;"	I
org.eclipse.lsp4j.MarkupContent	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.MarkupContent$/;"	I
org.eclipse.lsp4j.ParameterInformation	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.ParameterInformation$/;"	I
org.eclipse.lsp4j.ParameterInformation	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.ParameterInformation$/;"	I
org.eclipse.lsp4j.Position	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.Position	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.Position	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.Position	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.Position	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.Position	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.Position$/;"	I
org.eclipse.lsp4j.PublishDiagnosticsParams	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.PublishDiagnosticsParams$/;"	I
org.eclipse.lsp4j.PublishDiagnosticsParams	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.PublishDiagnosticsParams$/;"	I
org.eclipse.lsp4j.Range	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.Range	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.Range$/;"	I
org.eclipse.lsp4j.SignatureHelp	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.SignatureHelp$/;"	I
org.eclipse.lsp4j.SignatureHelp	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.SignatureHelp$/;"	I
org.eclipse.lsp4j.SignatureInformation	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.SignatureInformation$/;"	I
org.eclipse.lsp4j.SignatureInformation	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.SignatureInformation$/;"	I
org.eclipse.lsp4j.SymbolInformation	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.SymbolInformation$/;"	I
org.eclipse.lsp4j.SymbolInformation	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.SymbolInformation$/;"	I
org.eclipse.lsp4j.SymbolKind	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.SymbolKind	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.SymbolKind	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.SymbolKind	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.SymbolKind	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.SymbolKind	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.eclipse.lsp4j.SymbolKind$/;"	I
org.eclipse.lsp4j.TextDocumentContentChangeEvent	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.eclipse.lsp4j.TextDocumentContentChangeEvent$/;"	I
org.eclipse.lsp4j.TextDocumentContentChangeEvent	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.eclipse.lsp4j.TextDocumentContentChangeEvent$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.TextDocumentIdentifier	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.eclipse.lsp4j.TextDocumentIdentifier$/;"	I
org.eclipse.lsp4j.WorkspaceFolder	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.WorkspaceFolder$/;"	I
org.eclipse.lsp4j.WorkspaceFolder	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.WorkspaceFolder$/;"	I
org.eclipse.lsp4j.WorkspaceFoldersChangeEvent	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.WorkspaceFoldersChangeEvent$/;"	I
org.eclipse.lsp4j.WorkspaceFoldersChangeEvent	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.eclipse.lsp4j.WorkspaceFoldersChangeEvent$/;"	I
org.eclipse.lsp4j.WorkspaceSymbolParams	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.eclipse.lsp4j.WorkspaceSymbolParams$/;"	I
org.eclipse.lsp4j.WorkspaceSymbolParams	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.eclipse.lsp4j.WorkspaceSymbolParams$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.messages.Either	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.eclipse.lsp4j.jsonrpc.messages.Either$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonDelegate	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonDelegate$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonDelegate	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonDelegate$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonRequest	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonRequest$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonRequest	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonRequest$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonSegment	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonSegment$/;"	I
org.eclipse.lsp4j.jsonrpc.services.JsonSegment	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^import org.eclipse.lsp4j.jsonrpc.services.JsonSegment$/;"	I
org.eclipse.lsp4j.launch.LSPLauncher	server/bin/main/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.launch.LSPLauncher$/;"	I
org.eclipse.lsp4j.launch.LSPLauncher	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import org.eclipse.lsp4j.launch.LSPLauncher$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClient	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.eclipse.lsp4j.services.LanguageClient$/;"	I
org.eclipse.lsp4j.services.LanguageClientAware	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageClientAware$/;"	I
org.eclipse.lsp4j.services.LanguageClientAware	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.LanguageClientAware$/;"	I
org.eclipse.lsp4j.services.LanguageClientAware	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageClientAware$/;"	I
org.eclipse.lsp4j.services.LanguageClientAware	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.LanguageClientAware$/;"	I
org.eclipse.lsp4j.services.LanguageServer	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageServer$/;"	I
org.eclipse.lsp4j.services.LanguageServer	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.eclipse.lsp4j.services.LanguageServer$/;"	I
org.eclipse.lsp4j.services.TextDocumentService	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.services.TextDocumentService$/;"	I
org.eclipse.lsp4j.services.TextDocumentService	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.eclipse.lsp4j.services.TextDocumentService$/;"	I
org.eclipse.lsp4j.services.WorkspaceService	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.WorkspaceService$/;"	I
org.eclipse.lsp4j.services.WorkspaceService	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.eclipse.lsp4j.services.WorkspaceService$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.hamcrest.Matchers.*$/;"	I
org.hamcrest.Matchers.containsString	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.containsString$/;"	I
org.hamcrest.Matchers.containsString	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.containsString$/;"	I
org.hamcrest.Matchers.equalTo	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.equalTo	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^import org.hamcrest.Matchers.equalTo$/;"	I
org.hamcrest.Matchers.hasItem	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/bin/test/org/javacs/kt/ScriptTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasItem	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.hamcrest.Matchers.hasItem$/;"	I
org.hamcrest.Matchers.hasProperty	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasProperty$/;"	I
org.hamcrest.Matchers.hasProperty	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasProperty$/;"	I
org.hamcrest.Matchers.hasSize	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasSize$/;"	I
org.hamcrest.Matchers.hasSize	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.hamcrest.Matchers.hasSize$/;"	I
org.hamcrest.Matchers.hasToString	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.hamcrest.Matchers.hasToString$/;"	I
org.hamcrest.Matchers.hasToString	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.hamcrest.Matchers.hasToString$/;"	I
org.hamcrest.Matchers.not	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.hamcrest.Matchers.not$/;"	I
org.hamcrest.Matchers.not	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.hamcrest.Matchers.not$/;"	I
org.hamcrest.Matchers.not	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.hamcrest.Matchers.not$/;"	I
org.hamcrest.Matchers.not	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.hamcrest.Matchers.not$/;"	I
org.javacs.kt	server/bin/main/org/javacs/kt/CompiledFile.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/Compiler.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/Configuration.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/KotlinProtocolExtensions.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/Main.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/SourceFiles.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/SourcePath.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/TcpSockets.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/CompilerTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/FormattingTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/HoverTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/LintTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/ScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/Main.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/bin/main/org/javacs/kt/Logger.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^package org.javacs.kt$/;"	p
org.javacs.kt.CompilationKind	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.CompilationKind$/;"	I
org.javacs.kt.CompilationKind	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.CompilationKind$/;"	I
org.javacs.kt.CompiledFile	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.CompiledFile	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.CompiledFile$/;"	I
org.javacs.kt.Compiler	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.Compiler$/;"	I
org.javacs.kt.Compiler	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.Compiler$/;"	I
org.javacs.kt.CompilerClassPath	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.CompilerClassPath$/;"	I
org.javacs.kt.CompilerClassPath	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.CompilerClassPath$/;"	I
org.javacs.kt.CompletionConfiguration	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.CompletionConfiguration$/;"	I
org.javacs.kt.CompletionConfiguration	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.CompletionConfiguration$/;"	I
org.javacs.kt.ExternalSourcesConfiguration	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.ExternalSourcesConfiguration$/;"	I
org.javacs.kt.ExternalSourcesConfiguration	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.ExternalSourcesConfiguration$/;"	I
org.javacs.kt.ExternalSourcesConfiguration	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.ExternalSourcesConfiguration$/;"	I
org.javacs.kt.ExternalSourcesConfiguration	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.ExternalSourcesConfiguration$/;"	I
org.javacs.kt.KotlinTextDocumentService	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.KotlinTextDocumentService$/;"	I
org.javacs.kt.KotlinTextDocumentService	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.KotlinTextDocumentService$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/bin/main/org/javacs/kt/util/Utils.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.LOG	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^import org.javacs.kt.LOG$/;"	I
org.javacs.kt.SourcePath	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.SourcePath$/;"	I
org.javacs.kt.SourcePath	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.SourcePath$/;"	I
org.javacs.kt.SourcePath	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.SourcePath$/;"	I
org.javacs.kt.SourcePath	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.SourcePath$/;"	I
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/Home.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/Home.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^package org.javacs.kt.classpath$/;"	p
org.javacs.kt.classpath.	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.javacs.kt.classpath.*$/;"	I
org.javacs.kt.classpath.	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.javacs.kt.classpath.*$/;"	I
org.javacs.kt.classpath.Artifact	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.javacs.kt.classpath.Artifact$/;"	I
org.javacs.kt.classpath.Artifact	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.javacs.kt.classpath.Artifact$/;"	I
org.javacs.kt.classpath.defaultClassPathResolver	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^import org.javacs.kt.classpath.defaultClassPathResolver$/;"	I
org.javacs.kt.classpath.defaultClassPathResolver	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^import org.javacs.kt.classpath.defaultClassPathResolver$/;"	I
org.javacs.kt.classpath.parseMavenArtifact	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.javacs.kt.classpath.parseMavenArtifact$/;"	I
org.javacs.kt.classpath.parseMavenArtifact	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.javacs.kt.classpath.parseMavenArtifact$/;"	I
org.javacs.kt.commands	server/bin/main/org/javacs/kt/commands/Commands.kt	/^package org.javacs.kt.commands$/;"	p
org.javacs.kt.commands	server/src/main/kotlin/org/javacs/kt/commands/Commands.kt	/^package org.javacs.kt.commands$/;"	p
org.javacs.kt.commands.ALL_COMMANDS	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.commands.ALL_COMMANDS$/;"	I
org.javacs.kt.commands.ALL_COMMANDS	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.commands.ALL_COMMANDS$/;"	I
org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND$/;"	I
org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND$/;"	I
org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND$/;"	I
org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.commands.JAVA_TO_KOTLIN_COMMAND$/;"	I
org.javacs.kt.completion	server/bin/main/org/javacs/kt/completion/Completions.kt	/^package org.javacs.kt.completion$/;"	p
org.javacs.kt.completion	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^package org.javacs.kt.completion$/;"	p
org.javacs.kt.completion	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^package org.javacs.kt.completion$/;"	p
org.javacs.kt.completion	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^package org.javacs.kt.completion$/;"	p
org.javacs.kt.completion	server/src/main/kotlin/org/javacs/kt/completion/TestClass.java	/^package org.javacs.kt.completion;$/;"	p
org.javacs.kt.completion.	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.completion.*$/;"	I
org.javacs.kt.completion.	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.completion.*$/;"	I
org.javacs.kt.completion.DECL_RENDERER	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.completion.DECL_RENDERER$/;"	I
org.javacs.kt.completion.DECL_RENDERER	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.DECL_RENDERER$/;"	I
org.javacs.kt.completion.DECL_RENDERER	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.completion.DECL_RENDERER$/;"	I
org.javacs.kt.completion.DECL_RENDERER	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.DECL_RENDERER$/;"	I
org.javacs.kt.completion.containsCharactersInOrder	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.completion.containsCharactersInOrder$/;"	I
org.javacs.kt.completion.identifierOverloads	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.identifierOverloads$/;"	I
org.javacs.kt.completion.identifierOverloads	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.identifierOverloads$/;"	I
org.javacs.kt.completion.memberOverloads	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.memberOverloads$/;"	I
org.javacs.kt.completion.memberOverloads	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.completion.memberOverloads$/;"	I
org.javacs.kt.definition	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^package org.javacs.kt.definition$/;"	p
org.javacs.kt.definition	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^package org.javacs.kt.definition$/;"	p
org.javacs.kt.definition.goToDefinition	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.definition.goToDefinition$/;"	I
org.javacs.kt.definition.goToDefinition	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.definition.goToDefinition$/;"	I
org.javacs.kt.diagnostic	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^package org.javacs.kt.diagnostic$/;"	p
org.javacs.kt.diagnostic	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^package org.javacs.kt.diagnostic$/;"	p
org.javacs.kt.diagnostic.convertDiagnostic	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.diagnostic.convertDiagnostic$/;"	I
org.javacs.kt.diagnostic.convertDiagnostic	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.diagnostic.convertDiagnostic$/;"	I
org.javacs.kt.docs	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^package org.javacs.kt.docs$/;"	p
org.javacs.kt.docs	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^package org.javacs.kt.docs$/;"	p
org.javacs.kt.docs.findDoc	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.docs.findDoc$/;"	I
org.javacs.kt.docs.findDoc	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.docs.findDoc$/;"	I
org.javacs.kt.externalsources	server/bin/main/org/javacs/kt/externalsources/Decompiler.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/bin/main/org/javacs/kt/externalsources/SourceJarProvider.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/src/main/kotlin/org/javacs/kt/externalsources/Decompiler.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources	server/src/main/kotlin/org/javacs/kt/externalsources/SourceJarProvider.kt	/^package org.javacs.kt.externalsources$/;"	p
org.javacs.kt.externalsources.JarClassContentProvider	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.JarClassContentProvider	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.JarClassContentProvider$/;"	I
org.javacs.kt.externalsources.KlsURI	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.KlsURI$/;"	I
org.javacs.kt.externalsources.KlsURI	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.KlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.externalsources.toKlsURI	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.externalsources.toKlsURI$/;"	I
org.javacs.kt.formatting	server/bin/main/org/javacs/kt/formatting/Formatter.kt	/^package org.javacs.kt.formatting$/;"	p
org.javacs.kt.formatting	server/src/main/kotlin/org/javacs/kt/formatting/Formatter.kt	/^package org.javacs.kt.formatting$/;"	p
org.javacs.kt.formatting.formatKotlinCode	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.formatting.formatKotlinCode$/;"	I
org.javacs.kt.formatting.formatKotlinCode	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.formatting.formatKotlinCode$/;"	I
org.javacs.kt.hover	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^package org.javacs.kt.hover$/;"	p
org.javacs.kt.hover	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^package org.javacs.kt.hover$/;"	p
org.javacs.kt.hover.hoverAt	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.hover.hoverAt$/;"	I
org.javacs.kt.hover.hoverAt	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.hover.hoverAt$/;"	I
org.javacs.kt.j2k	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/bin/main/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k	server/src/main/kotlin/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^package org.javacs.kt.j2k$/;"	p
org.javacs.kt.j2k.convertJavaToKotlin	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.j2k.convertJavaToKotlin	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^import org.javacs.kt.j2k.convertJavaToKotlin$/;"	I
org.javacs.kt.position	server/bin/main/org/javacs/kt/position/Position.kt	/^package org.javacs.kt.position$/;"	p
org.javacs.kt.position	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^package org.javacs.kt.position$/;"	p
org.javacs.kt.position.changedRegion	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.position.changedRegion$/;"	I
org.javacs.kt.position.changedRegion	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.position.changedRegion$/;"	I
org.javacs.kt.position.extractRange	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.extractRange$/;"	I
org.javacs.kt.position.extractRange	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.position.extractRange$/;"	I
org.javacs.kt.position.extractRange	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.extractRange$/;"	I
org.javacs.kt.position.extractRange	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.position.extractRange$/;"	I
org.javacs.kt.position.isZero	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.isZero$/;"	I
org.javacs.kt.position.isZero	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.isZero$/;"	I
org.javacs.kt.position.location	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.location$/;"	I
org.javacs.kt.position.location	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.position.location$/;"	I
org.javacs.kt.position.location	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.location$/;"	I
org.javacs.kt.position.location	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.position.location$/;"	I
org.javacs.kt.position.offset	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.offset$/;"	I
org.javacs.kt.position.offset	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.offset$/;"	I
org.javacs.kt.position.position	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.position	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.position.position$/;"	I
org.javacs.kt.position.range	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.javacs.kt.position.range$/;"	I
org.javacs.kt.position.range	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.position.range$/;"	I
org.javacs.kt.position.range	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.javacs.kt.position.range$/;"	I
org.javacs.kt.position.range	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.position.range$/;"	I
org.javacs.kt.references	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^package org.javacs.kt.references$/;"	p
org.javacs.kt.references	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^package org.javacs.kt.references$/;"	p
org.javacs.kt.references.findReferences	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.references.findReferences$/;"	I
org.javacs.kt.references.findReferences	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.references.findReferences$/;"	I
org.javacs.kt.signaturehelp	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^package org.javacs.kt.signaturehelp$/;"	p
org.javacs.kt.signaturehelp	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^package org.javacs.kt.signaturehelp$/;"	p
org.javacs.kt.signaturehelp.fetchSignatureHelpAt	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.signaturehelp.fetchSignatureHelpAt$/;"	I
org.javacs.kt.signaturehelp.fetchSignatureHelpAt	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.signaturehelp.fetchSignatureHelpAt$/;"	I
org.javacs.kt.signaturehelp.getDocString	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.signaturehelp.getDocString$/;"	I
org.javacs.kt.signaturehelp.getDocString	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.signaturehelp.getDocString$/;"	I
org.javacs.kt.symbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^package org.javacs.kt.symbols$/;"	p
org.javacs.kt.symbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^package org.javacs.kt.symbols$/;"	p
org.javacs.kt.symbols.documentSymbols	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.symbols.documentSymbols$/;"	I
org.javacs.kt.symbols.documentSymbols	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.symbols.documentSymbols$/;"	I
org.javacs.kt.symbols.workspaceSymbols	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.symbols.workspaceSymbols$/;"	I
org.javacs.kt.symbols.workspaceSymbols	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.symbols.workspaceSymbols$/;"	I
org.javacs.kt.util	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/KotlinLSException.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/TemporaryDirectory.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/URIs.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/bin/main/org/javacs/kt/util/Utils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/KotlinLSException.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/TemporaryDirectory.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^package org.javacs.kt.util$/;"	p
org.javacs.kt.util.AsyncExecutor	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.AsyncExecutor$/;"	I
org.javacs.kt.util.AsyncExecutor	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.AsyncExecutor$/;"	I
org.javacs.kt.util.AsyncExecutor	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.AsyncExecutor$/;"	I
org.javacs.kt.util.AsyncExecutor	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.AsyncExecutor$/;"	I
org.javacs.kt.util.Debouncer	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.Debouncer$/;"	I
org.javacs.kt.util.Debouncer	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^import org.javacs.kt.util.Debouncer$/;"	I
org.javacs.kt.util.Debouncer	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.Debouncer$/;"	I
org.javacs.kt.util.Debouncer	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^import org.javacs.kt.util.Debouncer$/;"	I
org.javacs.kt.util.DelegatePrintStream	shared/bin/main/org/javacs/kt/Logger.kt	/^import org.javacs.kt.util.DelegatePrintStream$/;"	I
org.javacs.kt.util.DelegatePrintStream	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^import org.javacs.kt.util.DelegatePrintStream$/;"	I
org.javacs.kt.util.ExitingInputStream	server/bin/main/org/javacs/kt/Main.kt	/^import org.javacs.kt.util.ExitingInputStream$/;"	I
org.javacs.kt.util.ExitingInputStream	server/src/main/kotlin/org/javacs/kt/Main.kt	/^import org.javacs.kt.util.ExitingInputStream$/;"	I
org.javacs.kt.util.KotlinLSException	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/bin/main/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/src/main/kotlin/org/javacs/kt/URIContentProvider.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinLSException	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.KotlinLSException$/;"	I
org.javacs.kt.util.KotlinNullableNotNullManager	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.KotlinNullableNotNullManager$/;"	I
org.javacs.kt.util.KotlinNullableNotNullManager	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.KotlinNullableNotNullManager$/;"	I
org.javacs.kt.util.LoggingMessageCollector	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.LoggingMessageCollector$/;"	I
org.javacs.kt.util.LoggingMessageCollector	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.javacs.kt.util.LoggingMessageCollector$/;"	I
org.javacs.kt.util.LoggingMessageCollector	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.javacs.kt.util.LoggingMessageCollector$/;"	I
org.javacs.kt.util.LoggingMessageCollector	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.javacs.kt.util.LoggingMessageCollector$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.TemporaryDirectory	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.util.TemporaryDirectory$/;"	I
org.javacs.kt.util.containsCharactersInOrder	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.containsCharactersInOrder$/;"	I
org.javacs.kt.util.containsCharactersInOrder	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.util.containsCharactersInOrder$/;"	I
org.javacs.kt.util.describeURI	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURI	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^import org.javacs.kt.util.describeURI$/;"	I
org.javacs.kt.util.describeURIs	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.describeURIs$/;"	I
org.javacs.kt.util.describeURIs	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.describeURIs$/;"	I
org.javacs.kt.util.describeURIs	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.describeURIs$/;"	I
org.javacs.kt.util.describeURIs	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.describeURIs$/;"	I
org.javacs.kt.util.emptyResult	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.emptyResult$/;"	I
org.javacs.kt.util.emptyResult	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.emptyResult$/;"	I
org.javacs.kt.util.execAndReadStdoutAndStderr	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.execAndReadStdoutAndStderr$/;"	I
org.javacs.kt.util.execAndReadStdoutAndStderr	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.util.execAndReadStdoutAndStderr$/;"	I
org.javacs.kt.util.execAndReadStdoutAndStderr	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.execAndReadStdoutAndStderr$/;"	I
org.javacs.kt.util.execAndReadStdoutAndStderr	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.util.execAndReadStdoutAndStderr$/;"	I
org.javacs.kt.util.fileExtension	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.fileExtension$/;"	I
org.javacs.kt.util.fileExtension	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.fileExtension$/;"	I
org.javacs.kt.util.filePath	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.filePath	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^import org.javacs.kt.util.filePath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findCommandOnPath	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^import org.javacs.kt.util.findCommandOnPath$/;"	I
org.javacs.kt.util.findParent	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.findParent	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.util.findParent$/;"	I
org.javacs.kt.util.firstNonNull	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.firstNonNull$/;"	I
org.javacs.kt.util.firstNonNull	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.firstNonNull$/;"	I
org.javacs.kt.util.isOSWindows	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.isOSWindows$/;"	I
org.javacs.kt.util.isOSWindows	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.isOSWindows$/;"	I
org.javacs.kt.util.noResult	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.noResult	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.noResult	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.noResult	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.noResult	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.noResult	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.noResult$/;"	I
org.javacs.kt.util.nonNull	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.util.nonNull$/;"	I
org.javacs.kt.util.nonNull	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.javacs.kt.util.nonNull$/;"	I
org.javacs.kt.util.nullResult	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.nullResult$/;"	I
org.javacs.kt.util.nullResult	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.util.nullResult$/;"	I
org.javacs.kt.util.nullResult	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.nullResult$/;"	I
org.javacs.kt.util.nullResult	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.javacs.kt.util.nullResult$/;"	I
org.javacs.kt.util.onEachIndexed	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.onEachIndexed$/;"	I
org.javacs.kt.util.onEachIndexed	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.onEachIndexed$/;"	I
org.javacs.kt.util.parseURI	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.parseURI	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^import org.javacs.kt.util.parseURI$/;"	I
org.javacs.kt.util.partitionAroundLast	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.partitionAroundLast	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.partitionAroundLast	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.partitionAroundLast	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.partitionAroundLast	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.partitionAroundLast	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^import org.javacs.kt.util.partitionAroundLast$/;"	I
org.javacs.kt.util.preOrderTraversal	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.preOrderTraversal	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.util.preOrderTraversal$/;"	I
org.javacs.kt.util.replaceExtensionWith	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.replaceExtensionWith$/;"	I
org.javacs.kt.util.replaceExtensionWith	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.replaceExtensionWith$/;"	I
org.javacs.kt.util.stringDistance	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.stringDistance$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.toPath	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.javacs.kt.util.toPath$/;"	I
org.javacs.kt.util.tryResolving	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import org.javacs.kt.util.tryResolving$/;"	I
org.javacs.kt.util.tryResolving	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.tryResolving$/;"	I
org.javacs.kt.util.tryResolving	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^import org.javacs.kt.util.tryResolving$/;"	I
org.javacs.kt.util.tryResolving	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^import org.javacs.kt.util.tryResolving$/;"	I
org.javacs.kt.util.userHome	shared/bin/main/org/javacs/kt/classpath/Home.kt	/^import org.javacs.kt.util.userHome$/;"	I
org.javacs.kt.util.userHome	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import org.javacs.kt.util.userHome$/;"	I
org.javacs.kt.util.userHome	shared/src/main/kotlin/org/javacs/kt/classpath/Home.kt	/^import org.javacs.kt.util.userHome$/;"	I
org.javacs.kt.util.userHome	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^import org.javacs.kt.util.userHome$/;"	I
org.javacs.kt.util.withCustomStdout	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.withCustomStdout$/;"	I
org.javacs.kt.util.withCustomStdout	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.javacs.kt.util.withCustomStdout$/;"	I
org.jetbrains	server/lib/org/jetbrains/fernflower/1.0/fernflower-1.0.pom	/^    <groupId>org.jetbrains<\/groupId>$/;"	g
org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler$/;"	I
org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^import org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler$/;"	I
org.jetbrains.kotlin.builtins.isFunctionType	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.builtins.isFunctionType$/;"	I
org.jetbrains.kotlin.builtins.isFunctionType	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.builtins.isFunctionType$/;"	I
org.jetbrains.kotlin.cli.common.CLIConfigurationKeys	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.common.CLIConfigurationKeys$/;"	I
org.jetbrains.kotlin.cli.common.CLIConfigurationKeys	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.common.CLIConfigurationKeys$/;"	I
org.jetbrains.kotlin.cli.common.CLIConfigurationKeys	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.common.CLIConfigurationKeys$/;"	I
org.jetbrains.kotlin.cli.common.CLIConfigurationKeys	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.common.CLIConfigurationKeys$/;"	I
org.jetbrains.kotlin.cli.common.environment.setIdeaIoUseFallback	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.common.environment.setIdeaIoUseFallback$/;"	I
org.jetbrains.kotlin.cli.common.environment.setIdeaIoUseFallback	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.common.environment.setIdeaIoUseFallback$/;"	I
org.jetbrains.kotlin.cli.common.messages.CompilerMessageLocation	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.CompilerMessageLocation$/;"	I
org.jetbrains.kotlin.cli.common.messages.CompilerMessageSeverity	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.CompilerMessageSeverity$/;"	I
org.jetbrains.kotlin.cli.common.messages.CompilerMessageSeverity	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.CompilerMessageSeverity$/;"	I
org.jetbrains.kotlin.cli.common.messages.CompilerMessageSourceLocation	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.CompilerMessageSourceLocation$/;"	I
org.jetbrains.kotlin.cli.common.messages.MessageCollector	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.MessageCollector$/;"	I
org.jetbrains.kotlin.cli.common.messages.MessageCollector	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^import org.jetbrains.kotlin.cli.common.messages.MessageCollector$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.CliBindingTrace$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.EnvironmentConfigFiles$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.KotlinCoreEnvironment$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$/;"	I
org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$/;"	I
org.jetbrains.kotlin.cli.jvm.config.addJavaSourceRoots	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.config.addJavaSourceRoots$/;"	I
org.jetbrains.kotlin.cli.jvm.config.addJavaSourceRoots	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.config.addJavaSourceRoots$/;"	I
org.jetbrains.kotlin.cli.jvm.config.addJvmClasspathRoots	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.config.addJvmClasspathRoots$/;"	I
org.jetbrains.kotlin.cli.jvm.config.addJvmClasspathRoots	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.config.addJvmClasspathRoots$/;"	I
org.jetbrains.kotlin.cli.jvm.plugins.PluginCliParser	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.plugins.PluginCliParser$/;"	I
org.jetbrains.kotlin.cli.jvm.plugins.PluginCliParser	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.cli.jvm.plugins.PluginCliParser$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullabilityAnnotationInfo	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullabilityAnnotationInfo$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullabilityAnnotationInfo	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullabilityAnnotationInfo$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager$/;"	I
org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.codeInsight.NullableNotNullManager$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.Language	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.lang.Language$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.lang.java.JavaLanguage$/;"	I
org.jetbrains.kotlin.com.intellij.lang.jvm.JvmModifier	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.com.intellij.lang.jvm.JvmModifier$/;"	I
org.jetbrains.kotlin.com.intellij.lang.jvm.JvmModifier	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.com.intellij.lang.jvm.JvmModifier$/;"	I
org.jetbrains.kotlin.com.intellij.mock.MockProject	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.mock.MockProject$/;"	I
org.jetbrains.kotlin.com.intellij.mock.MockProject	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.mock.MockProject$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.Disposable	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.Disposable$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.Disposable	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.Disposable$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.Disposable	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.Disposable$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.project.Project	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.project.Project$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.Disposer	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.Disposer$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.Disposer	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.Disposer$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.Disposer	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.Disposer$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.Disposer	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.Disposer$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.TextRange	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.TextRange$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.text.StringUtil.convertLineSeparators	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.text.StringUtil.convertLineSeparators$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.util.text.StringUtil.convertLineSeparators	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.util.text.StringUtil.convertLineSeparators$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.StandardFileSystems$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFile$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileManager$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem$/;"	I
org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileSystem$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.com.intellij.psi.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiAnnotation	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiAnnotation$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiAnnotation	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiAnnotation$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiElement	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiElement$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFile	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFile$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiFileFactory$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiIdentifier	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiIdentifier$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiIdentifier	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiIdentifier$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiManager	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiManager$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiManager	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiManager$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner$/;"	I
org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^import org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner$/;"	I
org.jetbrains.kotlin.com.intellij.psi.javadoc.	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.javadoc.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.javadoc.	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^import org.jetbrains.kotlin.com.intellij.psi.javadoc.*$/;"	I
org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope$/;"	I
org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope$/;"	I
org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope$/;"	I
org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope$/;"	I
org.jetbrains.kotlin.com.intellij.psi.util.PsiTreeUtil	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.psi.util.PsiTreeUtil$/;"	I
org.jetbrains.kotlin.com.intellij.psi.util.PsiTreeUtil	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.com.intellij.psi.util.PsiTreeUtil$/;"	I
org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar$/;"	I
org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar$/;"	I
org.jetbrains.kotlin.config.ApiVersion	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.ApiVersion$/;"	I
org.jetbrains.kotlin.config.ApiVersion	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.ApiVersion$/;"	I
org.jetbrains.kotlin.config.CommonConfigurationKeys	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.CommonConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.CommonConfigurationKeys	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.config.CommonConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.CommonConfigurationKeys	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.CommonConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.CommonConfigurationKeys	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.config.CommonConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration as KotlinCompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration as KotlinCompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.CompilerConfiguration	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.config.CompilerConfiguration$/;"	I
org.jetbrains.kotlin.config.JVMConfigurationKeys	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.JVMConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.JVMConfigurationKeys	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.JVMConfigurationKeys$/;"	I
org.jetbrains.kotlin.config.JvmTarget	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.JvmTarget$/;"	I
org.jetbrains.kotlin.config.JvmTarget	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.JvmTarget$/;"	I
org.jetbrains.kotlin.config.LanguageFeature	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageFeature$/;"	I
org.jetbrains.kotlin.config.LanguageFeature	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageFeature$/;"	I
org.jetbrains.kotlin.config.LanguageVersion	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageVersion$/;"	I
org.jetbrains.kotlin.config.LanguageVersion	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageVersion$/;"	I
org.jetbrains.kotlin.config.LanguageVersionSettingsImpl	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageVersionSettingsImpl$/;"	I
org.jetbrains.kotlin.config.LanguageVersionSettingsImpl	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.config.LanguageVersionSettingsImpl$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ComponentProvider	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.container.ComponentProvider$/;"	I
org.jetbrains.kotlin.container.ValueDescriptor	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.container.ValueDescriptor$/;"	I
org.jetbrains.kotlin.container.get	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.container.get$/;"	I
org.jetbrains.kotlin.container.get	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.container.get$/;"	I
org.jetbrains.kotlin.container.get	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.container.get$/;"	I
org.jetbrains.kotlin.container.get	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.container.get$/;"	I
org.jetbrains.kotlin.descriptors.	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.descriptors.*$/;"	I
org.jetbrains.kotlin.descriptors.	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.descriptors.*$/;"	I
org.jetbrains.kotlin.descriptors.	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.descriptors.*$/;"	I
org.jetbrains.kotlin.descriptors.	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.descriptors.*$/;"	I
org.jetbrains.kotlin.descriptors.CallableDescriptor	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.CallableDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.CallableDescriptor	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.CallableDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.CallableDescriptor	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.descriptors.CallableDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.CallableDescriptor	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.CallableDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.CallableDescriptor	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.CallableDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ClassifierDescriptor	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.ClassifierDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ClassifierDescriptor	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.ClassifierDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ConstructorDescriptor	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.descriptors.ConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ConstructorDescriptor	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.ConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ConstructorDescriptor	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.descriptors.ConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ConstructorDescriptor	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.ConstructorDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptor	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.DeclarationDescriptorWithSource$/;"	I
org.jetbrains.kotlin.descriptors.FunctionDescriptor	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.FunctionDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.FunctionDescriptor	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.descriptors.FunctionDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.SourceFile	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.SourceFile$/;"	I
org.jetbrains.kotlin.descriptors.SourceFile	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.descriptors.SourceFile$/;"	I
org.jetbrains.kotlin.descriptors.ValueParameterDescriptor	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.ValueParameterDescriptor$/;"	I
org.jetbrains.kotlin.descriptors.ValueParameterDescriptor	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.descriptors.ValueParameterDescriptor$/;"	I
org.jetbrains.kotlin.diagnostics.Diagnostic	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.Diagnostic as KotlinDiagnostic$/;"	I
org.jetbrains.kotlin.diagnostics.Diagnostic	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.Diagnostic as KotlinDiagnostic$/;"	I
org.jetbrains.kotlin.diagnostics.Severity	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.Severity$/;"	I
org.jetbrains.kotlin.diagnostics.Severity	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.Severity$/;"	I
org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages$/;"	I
org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^import org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages$/;"	I
org.jetbrains.kotlin.idea.KotlinLanguage	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.idea.KotlinLanguage$/;"	I
org.jetbrains.kotlin.idea.KotlinLanguage	server/bin/main/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.idea.KotlinLanguage$/;"	I
org.jetbrains.kotlin.idea.KotlinLanguage	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.idea.KotlinLanguage$/;"	I
org.jetbrains.kotlin.idea.KotlinLanguage	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^import org.jetbrains.kotlin.idea.KotlinLanguage$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.js.resolve.diagnostics.findPsi	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.js.resolve.diagnostics.findPsi$/;"	I
org.jetbrains.kotlin.kdoc.parser.KDocKnownTag	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.kdoc.parser.KDocKnownTag$/;"	I
org.jetbrains.kotlin.kdoc.parser.KDocKnownTag	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.kdoc.parser.KDocKnownTag$/;"	I
org.jetbrains.kotlin.kdoc.psi.api.KDoc	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.kdoc.psi.api.KDoc$/;"	I
org.jetbrains.kotlin.kdoc.psi.api.KDoc	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.kdoc.psi.api.KDoc$/;"	I
org.jetbrains.kotlin.kdoc.psi.impl.KDocTag	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.kdoc.psi.impl.KDocTag$/;"	I
org.jetbrains.kotlin.kdoc.psi.impl.KDocTag	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.kdoc.psi.impl.KDocTag$/;"	I
org.jetbrains.kotlin.lexer.KtKeywordToken	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.lexer.KtKeywordToken$/;"	I
org.jetbrains.kotlin.lexer.KtKeywordToken	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.lexer.KtKeywordToken$/;"	I
org.jetbrains.kotlin.lexer.KtSingleValueToken	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.lexer.KtSingleValueToken$/;"	I
org.jetbrains.kotlin.lexer.KtSingleValueToken	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.lexer.KtSingleValueToken$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.lexer.KtTokens	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.lexer.KtTokens$/;"	I
org.jetbrains.kotlin.load.java.descriptors.JavaMethodDescriptor	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.descriptors.JavaMethodDescriptor$/;"	I
org.jetbrains.kotlin.load.java.descriptors.JavaMethodDescriptor	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.descriptors.JavaMethodDescriptor$/;"	I
org.jetbrains.kotlin.load.java.sources.JavaSourceElement	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.sources.JavaSourceElement$/;"	I
org.jetbrains.kotlin.load.java.sources.JavaSourceElement	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.sources.JavaSourceElement$/;"	I
org.jetbrains.kotlin.load.java.structure.JavaMethod	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.structure.JavaMethod$/;"	I
org.jetbrains.kotlin.load.java.structure.JavaMethod	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.load.java.structure.JavaMethod$/;"	I
org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil$/;"	I
org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil$/;"	I
org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil$/;"	I
org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.metadata.jvm.deserialization.JvmProtoBufUtil$/;"	I
org.jetbrains.kotlin.name.FqName	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.name.FqName$/;"	I
org.jetbrains.kotlin.name.FqName	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.name.FqName$/;"	I
org.jetbrains.kotlin.name.Name	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.name.Name$/;"	I
org.jetbrains.kotlin.name.Name	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.name.Name$/;"	I
org.jetbrains.kotlin.name.Name	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.name.Name$/;"	I
org.jetbrains.kotlin.name.Name	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.name.Name$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.*$/;"	I
org.jetbrains.kotlin.psi.KtCallExpression	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtCallExpression$/;"	I
org.jetbrains.kotlin.psi.KtCallExpression	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtCallExpression$/;"	I
org.jetbrains.kotlin.psi.KtCallableDeclaration	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.KtCallableDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtCallableDeclaration	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.KtCallableDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtDeclaration	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtDeclaration	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtDotQualifiedExpression	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtDotQualifiedExpression$/;"	I
org.jetbrains.kotlin.psi.KtDotQualifiedExpression	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtDotQualifiedExpression$/;"	I
org.jetbrains.kotlin.psi.KtElement	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtElement$/;"	I
org.jetbrains.kotlin.psi.KtElement	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtElement$/;"	I
org.jetbrains.kotlin.psi.KtExpression	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.KtExpression$/;"	I
org.jetbrains.kotlin.psi.KtExpression	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtExpression$/;"	I
org.jetbrains.kotlin.psi.KtExpression	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.KtExpression$/;"	I
org.jetbrains.kotlin.psi.KtExpression	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtExpression$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtFile	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtFile$/;"	I
org.jetbrains.kotlin.psi.KtNameReferenceExpression	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtNameReferenceExpression$/;"	I
org.jetbrains.kotlin.psi.KtNameReferenceExpression	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.KtNameReferenceExpression$/;"	I
org.jetbrains.kotlin.psi.KtNamedDeclaration	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.psi.KtNamedDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtNamedDeclaration	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^import org.jetbrains.kotlin.psi.KtNamedDeclaration$/;"	I
org.jetbrains.kotlin.psi.KtNamedFunction	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtNamedFunction$/;"	I
org.jetbrains.kotlin.psi.KtNamedFunction	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtNamedFunction$/;"	I
org.jetbrains.kotlin.psi.KtParameter	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtParameter$/;"	I
org.jetbrains.kotlin.psi.KtParameter	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtParameter$/;"	I
org.jetbrains.kotlin.psi.KtPrimaryConstructor	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtPrimaryConstructor$/;"	I
org.jetbrains.kotlin.psi.KtPrimaryConstructor	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.KtPrimaryConstructor$/;"	I
org.jetbrains.kotlin.psi.KtPsiFactory	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtPsiFactory$/;"	I
org.jetbrains.kotlin.psi.KtPsiFactory	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.psi.KtPsiFactory$/;"	I
org.jetbrains.kotlin.psi.KtReferenceExpression	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtReferenceExpression$/;"	I
org.jetbrains.kotlin.psi.KtReferenceExpression	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.KtReferenceExpression$/;"	I
org.jetbrains.kotlin.psi.psiUtil.	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.psiUtil.*$/;"	I
org.jetbrains.kotlin.psi.psiUtil.	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.psiUtil.*$/;"	I
org.jetbrains.kotlin.psi.psiUtil.allChildren	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.psiUtil.allChildren$/;"	I
org.jetbrains.kotlin.psi.psiUtil.getChildrenOfType	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.psiUtil.getChildrenOfType$/;"	I
org.jetbrains.kotlin.psi.psiUtil.getQualifiedExpressionForSelector	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.psiUtil.getQualifiedExpressionForSelector$/;"	I
org.jetbrains.kotlin.psi.psiUtil.getQualifiedExpressionForSelector	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.psiUtil.getQualifiedExpressionForSelector$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parents	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parents$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parents	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parents$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parents	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parents$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parents	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parents$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.psi.psiUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.psi.psiUtil.startOffset	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.psiUtil.startOffset$/;"	I
org.jetbrains.kotlin.psi.psiUtil.startOffset	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^import org.jetbrains.kotlin.psi.psiUtil.startOffset$/;"	I
org.jetbrains.kotlin.renderer.ClassifierNamePolicy	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.ClassifierNamePolicy$/;"	I
org.jetbrains.kotlin.renderer.ClassifierNamePolicy	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.ClassifierNamePolicy$/;"	I
org.jetbrains.kotlin.renderer.ClassifierNamePolicy	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.ClassifierNamePolicy$/;"	I
org.jetbrains.kotlin.renderer.ClassifierNamePolicy	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.ClassifierNamePolicy$/;"	I
org.jetbrains.kotlin.renderer.DescriptorRenderer	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.DescriptorRenderer$/;"	I
org.jetbrains.kotlin.renderer.DescriptorRenderer	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.DescriptorRenderer$/;"	I
org.jetbrains.kotlin.renderer.DescriptorRenderer	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.DescriptorRenderer$/;"	I
org.jetbrains.kotlin.renderer.DescriptorRenderer	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.DescriptorRenderer$/;"	I
org.jetbrains.kotlin.renderer.ParameterNameRenderingPolicy	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.ParameterNameRenderingPolicy$/;"	I
org.jetbrains.kotlin.renderer.ParameterNameRenderingPolicy	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.renderer.ParameterNameRenderingPolicy$/;"	I
org.jetbrains.kotlin.renderer.RenderingFormat	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.RenderingFormat$/;"	I
org.jetbrains.kotlin.renderer.RenderingFormat	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.renderer.RenderingFormat$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingContext	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.jetbrains.kotlin.resolve.BindingContext$/;"	I
org.jetbrains.kotlin.resolve.BindingTrace	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.resolve.BindingTrace$/;"	I
org.jetbrains.kotlin.resolve.BindingTrace	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.resolve.BindingTrace$/;"	I
org.jetbrains.kotlin.resolve.BindingTraceContext	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.BindingTraceContext$/;"	I
org.jetbrains.kotlin.resolve.BindingTraceContext	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.BindingTraceContext$/;"	I
org.jetbrains.kotlin.resolve.BindingTraceContext	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.BindingTraceContext$/;"	I
org.jetbrains.kotlin.resolve.BindingTraceContext	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.BindingTraceContext$/;"	I
org.jetbrains.kotlin.resolve.CompositeBindingContext	server/bin/main/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.resolve.CompositeBindingContext$/;"	I
org.jetbrains.kotlin.resolve.CompositeBindingContext	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^import org.jetbrains.kotlin.resolve.CompositeBindingContext$/;"	I
org.jetbrains.kotlin.resolve.DescriptorToSourceUtils	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.resolve.DescriptorToSourceUtils$/;"	I
org.jetbrains.kotlin.resolve.DescriptorToSourceUtils	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^import org.jetbrains.kotlin.resolve.DescriptorToSourceUtils$/;"	I
org.jetbrains.kotlin.resolve.DescriptorUtils	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.DescriptorUtils$/;"	I
org.jetbrains.kotlin.resolve.DescriptorUtils	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.DescriptorUtils$/;"	I
org.jetbrains.kotlin.resolve.DescriptorUtils	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.DescriptorUtils$/;"	I
org.jetbrains.kotlin.resolve.DescriptorUtils	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.DescriptorUtils$/;"	I
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$/;"	I
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$/;"	I
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$/;"	I
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$/;"	I
org.jetbrains.kotlin.resolve.TopDownAnalysisMode	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.TopDownAnalysisMode$/;"	I
org.jetbrains.kotlin.resolve.TopDownAnalysisMode	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.TopDownAnalysisMode$/;"	I
org.jetbrains.kotlin.resolve.TopDownAnalysisMode	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.TopDownAnalysisMode$/;"	I
org.jetbrains.kotlin.resolve.TopDownAnalysisMode	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.TopDownAnalysisMode$/;"	I
org.jetbrains.kotlin.resolve.calls.callUtil.getParentResolvedCall	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.calls.callUtil.getParentResolvedCall$/;"	I
org.jetbrains.kotlin.resolve.calls.callUtil.getParentResolvedCall	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.calls.callUtil.getParentResolvedCall$/;"	I
org.jetbrains.kotlin.resolve.calls.callUtil.getType	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.calls.callUtil.getType$/;"	I
org.jetbrains.kotlin.resolve.calls.callUtil.getType	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.calls.callUtil.getType$/;"	I
org.jetbrains.kotlin.resolve.calls.components.InferenceSession	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.calls.components.InferenceSession$/;"	I
org.jetbrains.kotlin.resolve.calls.components.InferenceSession	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.calls.components.InferenceSession$/;"	I
org.jetbrains.kotlin.resolve.calls.model.ResolvedCall	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.calls.model.ResolvedCall$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfoFactory	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfoFactory$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfoFactory	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfoFactory$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory$/;"	I
org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^import org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.fqNameSafe$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.isExtension	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.isExtension$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.isExtension	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.isExtension$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.parentsWithSelf	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.resolve.descriptorUtil.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.descriptorUtil.parentsWithSelf$/;"	I
org.jetbrains.kotlin.resolve.diagnostics.Diagnostics	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.jetbrains.kotlin.resolve.diagnostics.Diagnostics$/;"	I
org.jetbrains.kotlin.resolve.diagnostics.Diagnostics	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^import org.jetbrains.kotlin.resolve.diagnostics.Diagnostics$/;"	I
org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension$/;"	I
org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension$/;"	I
org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory$/;"	I
org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory	server/bin/test/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory$/;"	I
org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory$/;"	I
org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory	server/src/test/kotlin/org/javacs/kt/CompilerFixtures.kt	/^import org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory$/;"	I
org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter$/;"	I
org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter$/;"	I
org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter.Companion	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter.Companion$/;"	I
org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter.Companion	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter.Companion$/;"	I
org.jetbrains.kotlin.resolve.scopes.HierarchicalScope	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.HierarchicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.HierarchicalScope	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.HierarchicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.LexicalScope	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.LexicalScope$/;"	I
org.jetbrains.kotlin.resolve.scopes.getDescriptorsFiltered	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.getDescriptorsFiltered$/;"	I
org.jetbrains.kotlin.resolve.scopes.getDescriptorsFiltered	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.getDescriptorsFiltered$/;"	I
org.jetbrains.kotlin.resolve.scopes.utils.parentsWithSelf	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.utils.parentsWithSelf$/;"	I
org.jetbrains.kotlin.resolve.scopes.utils.parentsWithSelf	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.resolve.scopes.utils.parentsWithSelf$/;"	I
org.jetbrains.kotlin.resolve.source.PsiSourceFile	server/bin/main/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.resolve.source.PsiSourceFile$/;"	I
org.jetbrains.kotlin.resolve.source.PsiSourceFile	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^import org.jetbrains.kotlin.resolve.source.PsiSourceFile$/;"	I
org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingCompilerConfigurationComponentRegistrar	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingCompilerConfigurationComponentReg/;"	I
org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingCompilerConfigurationComponentRegistrar	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingCompilerConfigurationComponentReg/;"	I
org.jetbrains.kotlin.scripting.compiler.plugin.definitions.CliScriptDefinitionProvider	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.compiler.plugin.definitions.CliScriptDefinitionProvider$/;"	I
org.jetbrains.kotlin.scripting.compiler.plugin.definitions.CliScriptDefinitionProvider	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.compiler.plugin.definitions.CliScriptDefinitionProvider$/;"	I
org.jetbrains.kotlin.scripting.configuration.ScriptingConfigurationKeys	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.configuration.ScriptingConfigurationKeys$/;"	I
org.jetbrains.kotlin.scripting.configuration.ScriptingConfigurationKeys	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.configuration.ScriptingConfigurationKeys$/;"	I
org.jetbrains.kotlin.scripting.definitions.KotlinScriptDefinition	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.KotlinScriptDefinition \/\/ Legacy$/;"	I
org.jetbrains.kotlin.scripting.definitions.KotlinScriptDefinition	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.KotlinScriptDefinition \/\/ Legacy$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptCompilationConfigurationFromDefinition	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptCompilationConfigurationFromDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptCompilationConfigurationFromDefinition	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptCompilationConfigurationFromDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDefinition	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDefinition	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDependenciesProvider	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDependenciesProvider$/;"	I
org.jetbrains.kotlin.scripting.definitions.ScriptDependenciesProvider	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.ScriptDependenciesProvider$/;"	I
org.jetbrains.kotlin.scripting.definitions.StandardScriptDefinition	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.StandardScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.StandardScriptDefinition	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.StandardScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.findScriptDefinition	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.findScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.findScriptDefinition	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.findScriptDefinition$/;"	I
org.jetbrains.kotlin.scripting.definitions.getEnvironment	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.getEnvironment$/;"	I
org.jetbrains.kotlin.scripting.definitions.getEnvironment	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.definitions.getEnvironment$/;"	I
org.jetbrains.kotlin.scripting.extensions.ScriptExtraImportsProviderExtension	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.extensions.ScriptExtraImportsProviderExtension$/;"	I
org.jetbrains.kotlin.scripting.extensions.ScriptExtraImportsProviderExtension	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.extensions.ScriptExtraImportsProviderExtension$/;"	I
org.jetbrains.kotlin.scripting.resolve.KotlinScriptDefinitionFromAnnotatedTemplate	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.resolve.KotlinScriptDefinitionFromAnnotatedTemplate$/;"	I
org.jetbrains.kotlin.scripting.resolve.KotlinScriptDefinitionFromAnnotatedTemplate	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.scripting.resolve.KotlinScriptDefinitionFromAnnotatedTemplate$/;"	I
org.jetbrains.kotlin.types.ErrorUtils	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.types.ErrorUtils$/;"	I
org.jetbrains.kotlin.types.ErrorUtils	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.types.ErrorUtils$/;"	I
org.jetbrains.kotlin.types.KotlinType	server/bin/main/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.types.KotlinType$/;"	I
org.jetbrains.kotlin.types.KotlinType	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.KotlinType$/;"	I
org.jetbrains.kotlin.types.KotlinType	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^import org.jetbrains.kotlin.types.KotlinType$/;"	I
org.jetbrains.kotlin.types.KotlinType	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.KotlinType$/;"	I
org.jetbrains.kotlin.types.TypeUtils	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.types.TypeUtils$/;"	I
org.jetbrains.kotlin.types.TypeUtils	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.TypeUtils$/;"	I
org.jetbrains.kotlin.types.TypeUtils	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.types.TypeUtils$/;"	I
org.jetbrains.kotlin.types.TypeUtils	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.TypeUtils$/;"	I
org.jetbrains.kotlin.types.UnresolvedType	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.types.UnresolvedType$/;"	I
org.jetbrains.kotlin.types.UnresolvedType	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^import org.jetbrains.kotlin.types.UnresolvedType$/;"	I
org.jetbrains.kotlin.types.checker.KotlinTypeChecker	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.checker.KotlinTypeChecker$/;"	I
org.jetbrains.kotlin.types.checker.KotlinTypeChecker	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.checker.KotlinTypeChecker$/;"	I
org.jetbrains.kotlin.types.expressions.ExpressionTypingServices	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.types.expressions.ExpressionTypingServices$/;"	I
org.jetbrains.kotlin.types.expressions.ExpressionTypingServices	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.types.expressions.ExpressionTypingServices$/;"	I
org.jetbrains.kotlin.types.expressions.OperatorConventions	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.types.expressions.OperatorConventions$/;"	I
org.jetbrains.kotlin.types.expressions.OperatorConventions	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.types.expressions.OperatorConventions$/;"	I
org.jetbrains.kotlin.types.typeUtil.replaceArgumentsWithStarProjections	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.typeUtil.replaceArgumentsWithStarProjections$/;"	I
org.jetbrains.kotlin.types.typeUtil.replaceArgumentsWithStarProjections	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.typeUtil.replaceArgumentsWithStarProjections$/;"	I
org.jetbrains.kotlin.types.typeUtil.supertypes	server/bin/main/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.typeUtil.supertypes$/;"	I
org.jetbrains.kotlin.types.typeUtil.supertypes	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^import org.jetbrains.kotlin.types.typeUtil.supertypes$/;"	I
org.jetbrains.kotlin.util.KotlinFrontEndException	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.util.KotlinFrontEndException$/;"	I
org.jetbrains.kotlin.util.KotlinFrontEndException	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.util.KotlinFrontEndException$/;"	I
org.jetbrains.kotlin.util.OperatorNameConventions	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.util.OperatorNameConventions$/;"	I
org.jetbrains.kotlin.util.OperatorNameConventions	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^import org.jetbrains.kotlin.util.OperatorNameConventions$/;"	I
org.jetbrains.kotlin.utils.PathUtil	server/bin/main/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.utils.PathUtil$/;"	I
org.jetbrains.kotlin.utils.PathUtil	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^import org.jetbrains.kotlin.utils.PathUtil$/;"	I
org.junit.	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import org.junit.*$/;"	I
org.junit.	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import org.junit.*$/;"	I
org.junit.After	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.junit.After$/;"	I
org.junit.After	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.junit.After$/;"	I
org.junit.After	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.junit.After$/;"	I
org.junit.After	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.junit.After$/;"	I
org.junit.Assert.	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^import org.junit.Assert.*$/;"	I
org.junit.Assert.	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^import org.junit.Assert.*$/;"	I
org.junit.Assert.assertEquals	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Assert.assertEquals$/;"	I
org.junit.Assert.assertEquals	server/bin/test/org/javacs/kt/HoverTest.kt	/^import org.junit.Assert.assertEquals$/;"	I
org.junit.Assert.assertEquals	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Assert.assertEquals$/;"	I
org.junit.Assert.assertEquals	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^import org.junit.Assert.assertEquals$/;"	I
org.junit.Assert.assertEquals	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^import org.junit.Assert.assertEquals$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/ScriptTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertThat	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.junit.Assert.assertThat$/;"	I
org.junit.Assert.assertTrue	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Assert.assertTrue$/;"	I
org.junit.Assert.assertTrue	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Assert.assertTrue$/;"	I
org.junit.Assert.fail	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Assert.fail$/;"	I
org.junit.Assert.fail	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Assert.fail$/;"	I
org.junit.Before	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Before$/;"	I
org.junit.Before	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.junit.Before$/;"	I
org.junit.Before	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Before$/;"	I
org.junit.Before	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Before$/;"	I
org.junit.Before	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^import org.junit.Before$/;"	I
org.junit.Before	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Before$/;"	I
org.junit.BeforeClass	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.BeforeClass	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.BeforeClass	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.BeforeClass	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.BeforeClass	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.BeforeClass	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.junit.BeforeClass$/;"	I
org.junit.Ignore	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Ignore	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Ignore	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Ignore	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Ignore	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Ignore	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Ignore$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/CompilerTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/CompletionsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/DebouncerTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/DefinitionTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/FormattingTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/HoverTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/JavaToKotlinTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/LintTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/ScriptTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/bin/test/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/AdditionalWorkspaceTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/CompletionsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/DebouncerTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/DocumentSymbolsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/GradleDSLScriptTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/JavaToKotlinTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/ScriptTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/SignatureHelpTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	server/src/test/kotlin/org/javacs/kt/WorkspaceSymbolsTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	shared/bin/test/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	shared/src/test/kotlin/org/javacs/kt/MavenArtifactParsingTest.kt	/^import org.junit.Test$/;"	I
org.junit.Test	shared/src/test/kotlin/org/javacs/kt/URIsTest.kt	/^import org.junit.Test$/;"	I
org.omg.CORBA.Object	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^import org.omg.CORBA.Object$/;"	I
org.openjdk.jmh.annotations.	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.*$/;"	I
org.openjdk.jmh.annotations.Benchmark	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.Benchmark$/;"	I
org.openjdk.jmh.annotations.Level	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.Level$/;"	I
org.openjdk.jmh.annotations.Scope	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.Scope$/;"	I
org.openjdk.jmh.annotations.State	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.State$/;"	I
org.openjdk.jmh.annotations.TearDown	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.annotations.TearDown$/;"	I
org.openjdk.jmh.runner.Runner	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.Runner$/;"	I
org.openjdk.jmh.runner.Runner	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.Runner$/;"	I
org.openjdk.jmh.runner.RunnerException	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.RunnerException$/;"	I
org.openjdk.jmh.runner.RunnerException	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.RunnerException$/;"	I
org.openjdk.jmh.runner.options.Options	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.options.Options$/;"	I
org.openjdk.jmh.runner.options.OptionsBuilder	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.options.OptionsBuilder$/;"	I
org.openjdk.jmh.runner.options.OptionsBuilder	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^import org.openjdk.jmh.runner.options.OptionsBuilder$/;"	I
original	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(content, file)$/;"	C
original	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(content, file1)$/;"	C
original	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(editedText, file)$/;"	C
original	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(content, file)$/;"	C
original	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(content, file1)$/;"	C
original	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val original = compiler.createKtFile(editedText, file)$/;"	C
otherFileFunction	server/bin/test/symbols/OtherFileSymbols.kt	/^    fun otherFileFunction() {$/;"	m
otherFileFunction	server/src/test/resources/symbols/OtherFileSymbols.kt	/^    fun otherFileFunction() {$/;"	m
otherFileLocalVariable	server/bin/test/symbols/OtherFileSymbols.kt	/^        val otherFileLocalVariable = 1$/;"	C
otherFileLocalVariable	server/src/test/resources/symbols/OtherFileSymbols.kt	/^        val otherFileLocalVariable = 1$/;"	C
otherFileProperty	server/bin/test/symbols/OtherFileSymbols.kt	/^    val otherFileProperty = 1$/;"	C
otherFileProperty	server/src/test/resources/symbols/OtherFileSymbols.kt	/^    val otherFileProperty = 1$/;"	C
otherFun	images/Example.kt	/^fun otherFun() = example()$/;"	m
out	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val out = Files.createTempDirectory("fernflowerOut")$/;"	C
out	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val out = Files.createTempDirectory("fernflowerOut")$/;"	C
outBackend	shared/bin/main/org/javacs/kt/Logger.kt	/^    private var outBackend: ((LogMessage) -> Unit)? = null$/;"	v
outBackend	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private var outBackend: ((LogMessage) -> Unit)? = null$/;"	v
outQueue	shared/bin/main/org/javacs/kt/Logger.kt	/^    private val outQueue: Queue<LogMessage> = ArrayDeque()$/;"	C
outQueue	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private val outQueue: Queue<LogMessage> = ArrayDeque()$/;"	C
outStream	shared/bin/main/org/javacs/kt/Logger.kt	/^    val outStream = DelegatePrintStream { log(LogMessage(LogLevel.INFO, it.trimEnd())) }$/;"	C
outStream	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    val outStream = DelegatePrintStream { log(LogMessage(LogLevel.INFO, it.trimEnd())) }$/;"	C
output	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    var output = ""$/;"	v
output	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    var output = ""$/;"	v
outputDir	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private val outputDir by lazy(::createOutputDirectory)$/;"	C
outputDir	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^	private val outputDir by lazy(::createOutputDirectory)$/;"	C
outputThread	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val outputThread = Thread { stdout.bufferedReader().use { output += it.readText() } }$/;"	C
outputThread	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val outputThread = Thread { stdout.bufferedReader().use { output += it.readText() } }$/;"	C
p	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun p(init: P.() -> Unit) = initTag(P(), init)$/;"	m
p	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var p: String by Delegate()$/;"	v
p	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun p(init: P.() -> Unit) = initTag(P(), init)$/;"	m
p	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var p: String by Delegate()$/;"	v
package	grammars/Kotlin.tmLanguage.json	/^		"package": {$/;"	o	object:repository
packaging	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val packaging: String?,$/;"	C
packaging	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val packaging: String?,$/;"	C
padOffset	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val padOffset = " ".repeat(offset)$/;"	C
padOffset	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val padOffset = " ".repeat(offset)$/;"	C
pair	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val pair = Pair(1, "one")$/;"	C
pair	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val pair = Pair(1, "one")$/;"	C
parameters	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^            val parameters = desc.valueParameters$/;"	C
parameters	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^            val parameters = desc.valueParameters$/;"	C
params	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val params = tags.filter { it.knownTag == KDocKnownTag.PARAM }$/;"	C
params	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val params = desc.valueParameters.map(::toParameter)$/;"	C
params	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val params = tags.filter { it.knownTag == KDocKnownTag.PARAM }$/;"	C
params	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val params = desc.valueParameters.map(::toParameter)$/;"	C
parent	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val parent: KtExpression? =$/;"	C
parent	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val parent = parentDot.substring(0, parentDot.length - 1)$/;"	C
parent	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val parent: KtExpression? =$/;"	C
parent	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val parent = parentDot.substring(0, parentDot.length - 1)$/;"	C
parentDot	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val parentDot = if (match.groupValues[1].isNotBlank()) match.groupValues[1] else "."$/;"	C
parentDot	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val parentDot = if (match.groupValues[1].isNotBlank()) match.groupValues[1] else "."$/;"	C
parentPackage	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val parentPackage = module.getPackage(FqName.fromSegments(parent.split('.')))$/;"	C
parentPackage	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val parentPackage = module.getPackage(FqName.fromSegments(parent.split('.')))$/;"	C
parenthesizedParams	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^                val parenthesizedParams = parameters.dropLast(1).ifEmpty { null }?.let { "(${val/;"	C
parenthesizedParams	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^                val parenthesizedParams = parameters.dropLast(1).ifEmpty { null }?.let { "(${val/;"	C
parse	scripts/utils/changelog.py	/^    def parse(self):$/;"	m	class:ChangelogFile
parse	scripts/utils/properties.py	/^    def parse(self):$/;"	m	class:PropertiesFile
parse	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val parse: KtFile,$/;"	C
parse	server/bin/main/org/javacs/kt/Compiler.kt	/^        val parse = createKtFile(content, file, kind)$/;"	C
parse	server/bin/main/org/javacs/kt/SourcePath.kt	/^            val parse = changed.associateWith { it.apply { parseIfChanged() }.parsed!! }$/;"	C
parse	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun parse() {$/;"	m
parse	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val parse = compiler.createKtFile(content, file)$/;"	C
parse	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val parse: KtFile,$/;"	C
parse	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val parse = createKtFile(content, file, kind)$/;"	C
parse	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^            val parse = changed.associateWith { it.apply { parseIfChanged() }.parsed!! }$/;"	C
parse	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun parse() {$/;"	m
parse	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val parse = compiler.createKtFile(content, file)$/;"	C
parseAtPoint	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun parseAtPoint(cursor: Int, asReference: Boolean = false): KtElement? {$/;"	m
parseAtPoint	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun parseAtPoint(cursor: Int, asReference: Boolean = false): KtElement? {$/;"	m
parseDataWriteLock	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private val parseDataWriteLock = ReentrantLock()$/;"	C
parseDataWriteLock	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private val parseDataWriteLock = ReentrantLock()$/;"	C
parseGradleCLIDependencies	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun parseGradleCLIDependencies(output: String): Set<Path>? {$/;"	m
parseGradleCLIDependencies	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun parseGradleCLIDependencies(output: String): Set<Path>? {$/;"	m
parseIfChanged	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun parseIfChanged() {$/;"	m
parseIfChanged	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun parseIfChanged() {$/;"	m
parseInt	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun parseInt(str: String): Int? {$/;"	m
parseInt	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun parseInt(str: String): Int? {$/;"	m
parseMavenArtifact	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^fun parseMavenArtifact(rawArtifact: String, version: String? = null): Artifact {$/;"	m
parseMavenArtifact	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^fun parseMavenArtifact(rawArtifact: String, version: String? = null): Artifact {$/;"	m
parseURI	shared/bin/main/org/javacs/kt/util/URIs.kt	/^fun parseURI(uri: String): URI = URI.create(runCatching { URLDecoder.decode(uri, StandardCharset/;"	m
parseURI	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^fun parseURI(uri: String): URI =$/;"	m
parse_version	scripts/bump_version.py	/^def parse_version(s):$/;"	f
parsed	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^            val parsed = sp.parsedFile(uri)$/;"	C
parsed	server/bin/main/org/javacs/kt/SourcePath.kt	/^        var parsed: KtFile? = null,$/;"	v
parsed	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^            val parsed = sp.parsedFile(uri)$/;"	C
parsed	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        var parsed: KtFile? = null,$/;"	v
parsedFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun parsedFile(uri: URI): KtFile = sourceFile(uri).apply { parseIfChanged() }.parsed!!$/;"	m
parsedFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun parsedFile(uri: URI): KtFile = sourceFile(uri).apply { parseIfChanged() }.parsed!!$/;"	m
parser	server/bin/main/org/javacs/kt/Compiler.kt	/^    val parser: KtPsiFactory$/;"	C
parser	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    val parser: KtPsiFactory$/;"	C
parser	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        val parser = Regex("""(kotlin-stdlib(-[^-]+)?)-(\\d+)\\.(\\d+)\\.(\\d+)\\.jar""")$/;"	C
parser	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        val parser = Regex("""(kotlin-stdlib(-[^-]+)?)-(\\d+)\\.(\\d+)\\.(\\d+)\\.jar""")$/;"	C
partial	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val partial = findPartialIdentifier(file, cursor)$/;"	C
partial	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val partial = findPartialIdentifier(file, cursor)$/;"	C
parts	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val parts = file.name.split('\/')$/;"	C
parts	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val parts = file.name.split('\/')$/;"	C
parts	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val parts = rawArtifact.trim().split(':')$/;"	C
parts	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val parts = rawArtifact.trim().split(':')$/;"	C
patch	server/bin/main/org/javacs/kt/SourceFiles.kt	/^private fun patch(sourceText: String, change: TextDocumentContentChangeEvent): String {$/;"	m
patch	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^private fun patch(sourceText: String, change: TextDocumentContentChangeEvent): String {$/;"	m
patch	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val patch : Int,$/;"	C
patch	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val patch : Int,$/;"	C
path	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^            val path = uri.filePath$/;"	C
path	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val path: Path? = uri.filePath,$/;"	C
path	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val path = arrayListOf<Point>()$/;"	C
path	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val path = findPath(maze)$/;"	C
path	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val path = listOf(state.bigFile)$/;"	C
path	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^            val path = uri.filePath$/;"	C
path	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val path: Path? = uri.filePath,$/;"	C
path	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val path = listOf(state.bigFile)$/;"	C
path	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val path = arrayListOf<Point>()$/;"	C
path	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val path = findPath(maze)$/;"	C
path	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val path: Path$/;"	C
path	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val path: Path$/;"	C
pathString	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        val pathString = it.toString()$/;"	C
pathString	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^        val pathString = it.toString()$/;"	C
patternChar	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        var patternChar = pattern[iPattern]$/;"	v
patternChar	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var patternChar = pattern[iPattern]$/;"	v
patternLength	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        val patternLength = pattern.length$/;"	C
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.class-declaration.captures.3
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.comment-javadoc.patterns.0
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.function-call.captures.2
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.function-declaration.captures.2
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.type-alias.captures.3
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.type-annotation.captures.0
patterns	grammars/Kotlin.tmLanguage.json	/^					"patterns": [$/;"	a	object:repository.variable-declaration.captures.2
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.annotation-site
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.annotation-site-list
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.character
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.code
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.comment-javadoc
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.comments
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.import
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.keywords
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.package
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.string
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.string-escape-bracketed
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.string-multiline
patterns	grammars/Kotlin.tmLanguage.json	/^			"patterns": [$/;"	a	object:repository.type-parameter
patterns	grammars/Kotlin.tmLanguage.json	/^	"patterns": [$/;"	a
patterns	grammars/codeblock.json	/^			"patterns": [$/;"	a	object:repository.kotlin-code-block
patterns	grammars/codeblock.json	/^	"patterns": [$/;"	a
pendingTask	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    private var pendingTask: Future<*>? = null$/;"	v
pendingTask	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    private var pendingTask: Future<*>? = null$/;"	v
pickImportantElements	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun pickImportantElements(node: PsiElement, includeLocals: Boolean): PsiNamedElement? =$/;"	m
pickImportantElements	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun pickImportantElements(node: PsiElement, includeLocals: Boolean): PsiNamedElement? =$/;"	m
placeholderIndex	shared/bin/main/org/javacs/kt/Logger.kt	/^        var placeholderIndex = 0$/;"	v
placeholderIndex	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        var placeholderIndex = 0$/;"	v
platformImports	server/bin/main/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^private val platformImports = setOf($/;"	C
platformImports	server/src/main/kotlin/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^private val platformImports = setOf($/;"	C
platformType	server/bin/main/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^fun platformType(javaType: String): String = when (javaType) {$/;"	m
platformType	server/src/main/kotlin/org/javacs/kt/j2k/PlatformTypeConverter.kt	/^fun platformType(javaType: String): String = when (javaType) {$/;"	m
port	.vscode/launch.json	/^            "port": 5005$/;"	n	object:configurations.2
port	.vscode/launch.json	/^            "port": 5005$/;"	n	object:configurations.3
port	.vscode/launch.json	/^            "port": 5005,$/;"	n	object:configurations.1
pos	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val pos = position(c, offset)$/;"	C
pos	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val pos = position(c, offset)$/;"	C
position	server/bin/main/org/javacs/kt/position/Position.kt	/^fun position(content: String, offset: Int): Position {$/;"	m
position	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val position = position(line, column)$/;"	C
position	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun position(line: Int, column: Int) = Position(line - 1, column - 1)$/;"	m
position	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun position(content: String, offset: Int): Position {$/;"	m
position	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val position = position(line, column)$/;"	C
position	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun position(line: Int, column: Int) = Position(line - 1, column - 1)$/;"	m
possibleComponentReference	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleComponentReference(source: KtFile): Boolean =$/;"	m
possibleComponentReference	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleComponentReference(source: KtFile): Boolean =$/;"	m
possibleComponentReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleComponentReferences(sp: SourcePath): Set<KtFile> =$/;"	m
possibleComponentReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleComponentReferences(sp: SourcePath): Set<KtFile> =$/;"	m
possibleGetSet	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleGetSet(source: KtFile) =$/;"	m
possibleGetSet	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleGetSet(source: KtFile) =$/;"	m
possibleGetSets	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleGetSets(sp: SourcePath): Set<KtFile> =$/;"	m
possibleGetSets	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleGetSets(sp: SourcePath): Set<KtFile> =$/;"	m
possibleInvokeReference	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleInvokeReference(@Suppress("UNUSED_PARAMETER") declaration: FunctionDescripto/;"	m
possibleInvokeReference	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleInvokeReference(@Suppress("UNUSED_PARAMETER") declaration: FunctionDescripto/;"	m
possibleInvokeReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleInvokeReferences(declaration: FunctionDescriptor, sp: SourcePath) =$/;"	m
possibleInvokeReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleInvokeReferences(declaration: FunctionDescriptor, sp: SourcePath) =$/;"	m
possibleNameReference	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleNameReference(declaration: Name, source: KtFile): Boolean =$/;"	m
possibleNameReference	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleNameReference(declaration: Name, source: KtFile): Boolean =$/;"	m
possibleNameReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleNameReferences(declaration: Name, sp: SourcePath): Set<KtFile> =$/;"	m
possibleNameReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleNameReferences(declaration: Name, sp: SourcePath): Set<KtFile> =$/;"	m
possibleReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleReferences(declaration: DeclarationDescriptor, sp: SourcePath): Set<KtFile> /;"	m
possibleReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleReferences(declaration: DeclarationDescriptor, sp: SourcePath): Set<KtFile> /;"	m
possibleTokenReference	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleTokenReference(find: List<KtSingleValueToken>, source: KtFile): Boolean =$/;"	m
possibleTokenReference	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleTokenReference(find: List<KtSingleValueToken>, source: KtFile): Boolean =$/;"	m
possibleTokenReferences	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^private fun possibleTokenReferences(find: List<KtSingleValueToken>, sp: SourcePath): Set<KtFile>/;"	m
possibleTokenReferences	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^private fun possibleTokenReferences(find: List<KtSingleValueToken>, sp: SourcePath): Set<KtFile>/;"	m
postfix-modifiers	grammars/Kotlin.tmLanguage.json	/^		"postfix-modifiers": {$/;"	o	object:repository
prefix	server/bin/main/org/javacs/kt/CompiledFile.kt	/^                    val prefix = "val x: "$/;"	C
prefix	server/bin/main/org/javacs/kt/CompiledFile.kt	/^            val prefix = "val "$/;"	C
prefix	server/bin/main/org/javacs/kt/position/Position.kt	/^    val prefix = oldContent.commonPrefixWith(newContent).length$/;"	C
prefix	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^                    val prefix = "val x: "$/;"	C
prefix	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^            val prefix = "val "$/;"	C
prefix	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val prefix = oldContent.commonPrefixWith(newContent).length$/;"	C
prefix-modifiers	grammars/Kotlin.tmLanguage.json	/^		"prefix-modifiers": {$/;"	o	object:repository
prepareCompiledFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun prepareCompiledFile(): CompiledFile =$/;"	m
prepareCompiledFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun prepareCompiledFile(): CompiledFile =$/;"	m
prepend_version	scripts/utils/changelog.py	/^    def prepend_version(self, version, version_message):$/;"	m	class:ChangelogFile
previous	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val previous = hashMapOf<Point, Point>()$/;"	C
previous	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val previous = hashMapOf<Point, Point>()$/;"	C
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(obj: Any) = delegate(obj.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(s: CharArray) = delegate(String(s))$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(s: String) = delegate(s)$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Boolean) = delegate(x.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Char) = delegate(x.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Double) = delegate(x.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Float) = delegate(x.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Int) = delegate(x.toString())$/;"	m
print	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Long) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(obj: Any) = delegate(obj.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(s: CharArray) = delegate(String(s))$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(s: String) = delegate(s)$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Boolean) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Char) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Double) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Float) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Int) = delegate(x.toString())$/;"	m
print	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun print(x: Long) = delegate(x.toString())$/;"	m
printBottles	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun printBottles(bottleCount: Int) {$/;"	m
printBottles	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun printBottles(bottleCount: Int) {$/;"	m
printMessage	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    private fun printMessage(message: MessageParams?) {$/;"	m
printMessage	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    private fun printMessage(message: MessageParams?) {$/;"	m
printStackTrace	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun printStackTrace(throwable: Throwable) = throwable.printStackTrace(errStream)$/;"	m
printStackTrace	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun printStackTrace(throwable: Throwable) = throwable.printStackTrace(errStream)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println() = delegate(newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Any) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Boolean) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Char) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: CharArray) = delegate(String(x) + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Double) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Float) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Int) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Long) = delegate(x.toString() + newLine)$/;"	m
println	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: String) = delegate(x + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println() = delegate(newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Any) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Boolean) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Char) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: CharArray) = delegate(String(x) + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Double) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Float) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Int) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: Long) = delegate(x.toString() + newLine)$/;"	m
println	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun println(x: String) = delegate(x + newLine)$/;"	m
privateInstanceFoo	server/bin/test/completions/InstanceMember.kt	/^    private fun privateInstanceFoo() = "Foo"$/;"	m
privateInstanceFoo	server/src/test/resources/completions/InstanceMember.kt	/^    private fun privateInstanceFoo() = "Foo"$/;"	m
privateSuperCompanionFun	server/bin/test/completions/Visibility.kt	/^        private fun privateSuperCompanionFun() { }$/;"	m
privateSuperCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        private fun privateSuperCompanionFun() { }$/;"	m
privateSuperFun	server/bin/test/completions/Visibility.kt	/^    private fun privateSuperFun() { }$/;"	m
privateSuperFun	server/src/test/resources/completions/Visibility.kt	/^    private fun privateSuperFun() { }$/;"	m
privateThisCompanionFun	server/bin/test/completions/Visibility.kt	/^        private fun privateThisCompanionFun() { }$/;"	m
privateThisCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        private fun privateThisCompanionFun() { }$/;"	m
privateThisFun	server/bin/test/completions/Visibility.kt	/^    private fun privateThisFun() { }$/;"	m
privateThisFun	server/src/test/resources/completions/Visibility.kt	/^    private fun privateThisFun() { }$/;"	m
privateTopLevelFun	server/bin/test/completions/Visibility.kt	/^private fun privateTopLevelFun() { }$/;"	m
privateTopLevelFun	server/src/test/resources/completions/Visibility.kt	/^private fun privateTopLevelFun() { }$/;"	m
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [],$/;"	a	object:tasks.0
process	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val process = Runtime.getRuntime().exec(cmd, null, workingDirectory)$/;"	C
process	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val process = Runtime.getRuntime().exec(shellCommand, null, directory.toFile())$/;"	C
process	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val process = Runtime.getRuntime().exec(cmd, null, workingDirectory)$/;"	C
process	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val process = Runtime.getRuntime().exec(shellCommand, null, directory.toFile())$/;"	C
project	server/bin/main/org/javacs/kt/Compiler.kt	/^        val project = environment.project$/;"	C
project	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val project = environment.project$/;"	C
projectDirectory	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    private val projectDirectory: Path get() = path.getParent()$/;"	C
projectDirectory	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    private val projectDirectory: Path get() = path.getParent()$/;"	C
projectRoot	.vscode/launch.json	/^            "projectRoot": "${workspaceFolder}\/server",$/;"	s	object:configurations.0
projectRoot	.vscode/launch.json	/^            "projectRoot": "${workspaceFolder}\/server",$/;"	s	object:configurations.1
projectVersion	gradle.properties	/^projectVersion=0.7.0$/;"	k
prompt_by	scripts/utils/cli.py	/^def prompt_by(what, nodes, describer, default=None):$/;"	f
property	server/bin/main/org/javacs/kt/Compiler.kt	/^        val property = createKtDeclaration("val x = $content", file, kind) as KtProperty$/;"	C
property	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val property = createKtDeclaration("val x = $content", file, kind) as KtProperty$/;"	C
protectedSuperCompanionFun	server/bin/test/completions/Visibility.kt	/^        protected fun protectedSuperCompanionFun() { }$/;"	m
protectedSuperCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        protected fun protectedSuperCompanionFun() { }$/;"	m
protectedSuperFun	server/bin/test/completions/Visibility.kt	/^    protected fun protectedSuperFun() { }$/;"	m
protectedSuperFun	server/src/test/resources/completions/Visibility.kt	/^    protected fun protectedSuperFun() { }$/;"	m
protectedThisCompanionFun	server/bin/test/completions/Visibility.kt	/^        protected fun protectedThisCompanionFun() { }$/;"	m
protectedThisCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        protected fun protectedThisCompanionFun() { }$/;"	m
protectedThisFun	server/bin/test/completions/Visibility.kt	/^    protected fun protectedThisFun() { }$/;"	m
protectedThisFun	server/src/test/resources/completions/Visibility.kt	/^    protected fun protectedThisFun() { }$/;"	m
protocolExtensions	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val protocolExtensions = KotlinProtocolExtensionService(uriContentProvider)$/;"	C
protocolExtensions	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val protocolExtensions = KotlinProtocolExtensionService(uriContentProvider)$/;"	C
psi	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val psi = parse.findElementAt(oldCursor) ?: return nullResult("Couldn't find anything at/;"	C
psi	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^    val psi = target.findPsi()$/;"	C
psi	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val psi = original.findElementAt(45)!!$/;"	C
psi	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val psi = original.findElementAt(46)!!$/;"	C
psi	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        var psi = original.findElementAt(46)!!$/;"	v
psi	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val psi = parse.findElementAt(oldCursor) ?: return nullResult("Couldn't find anything at/;"	C
psi	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^    val psi = target.findPsi()$/;"	C
psi	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val psi = original.findElementAt(45)!!$/;"	C
psi	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val psi = original.findElementAt(46)!!$/;"	C
psi	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        var psi = original.findElementAt(46)!!$/;"	v
psiFactory	server/bin/main/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^    val psiFactory = compiler.psiFileFactoryFor(CompilationKind.DEFAULT)$/;"	C
psiFactory	server/src/main/kotlin/org/javacs/kt/j2k/JavaToKotlinConverter.kt	/^    val psiFactory = compiler.psiFileFactoryFor(CompilationKind.DEFAULT)$/;"	C
psiFileElements	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private val psiFileElements = ConcurrentHashMap<PsiFile, Collection<PsiNamedElement>>()$/;"	C
psiFileFactoryFor	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun psiFileFactoryFor(kind: CompilationKind): PsiFileFactory =$/;"	m
psiFileFactoryFor	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun psiFileFactoryFor(kind: CompilationKind): PsiFileFactory =$/;"	m
psiLocation	server/bin/main/org/javacs/kt/position/Position.kt	/^    val psiLocation = declaration.findPsi()?.let(::location)$/;"	C
psiLocation	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val psiLocation = declaration.findPsi()?.let(::location)$/;"	C
publicSuperCompanionFun	server/bin/test/completions/Visibility.kt	/^        fun publicSuperCompanionFun() { }$/;"	m
publicSuperCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        fun publicSuperCompanionFun() { }$/;"	m
publicSuperFun	server/bin/test/completions/Visibility.kt	/^    fun publicSuperFun() { }$/;"	m
publicSuperFun	server/src/test/resources/completions/Visibility.kt	/^    fun publicSuperFun() { }$/;"	m
publicThisCompanionFun	server/bin/test/completions/Visibility.kt	/^        fun publicThisCompanionFun() { }$/;"	m
publicThisCompanionFun	server/src/test/resources/completions/Visibility.kt	/^        fun publicThisCompanionFun() { }$/;"	m
publicThisFun	server/bin/test/completions/Visibility.kt	/^    fun publicThisFun() { }$/;"	m
publicThisFun	server/src/test/resources/completions/Visibility.kt	/^    fun publicThisFun() { }$/;"	m
publish	shared/bin/main/org/javacs/kt/Logger.kt	/^    override fun publish(record: LogRecord) {$/;"	m
publish	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    override fun publish(record: LogRecord) {$/;"	m
publishDiagnostics	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun publishDiagnostics(diagnostics: PublishDiagnosticsParams) {$/;"	m
publishDiagnostics	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun publishDiagnostics(diagnostics: PublishDiagnosticsParams) {$/;"	m
put	server/bin/main/org/javacs/kt/SourcePath.kt	/^        fun put(newContent: String) {$/;"	m
put	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun put(uri: URI, content: String, language: Language?, temporary: Boolean = false) {$/;"	m
put	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        fun put(newContent: String) {$/;"	m
put	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun put(uri: URI, content: String, language: Language?, temporary: Boolean = false) {$/;"	m
qualifier	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val qualifier = expression.qualifier?.translate()?.let { "$it." } ?: ""$/;"	C
qualifier	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val qualifier = expression.qualifierType.translate()$/;"	C
qualifier	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val qualifier = expression.qualifier?.translate()?.let { "$it." } ?: ""$/;"	C
qualifier	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val qualifier = expression.qualifierType.translate()$/;"	C
queue	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val queue = LinkedList<Point>()$/;"	C
queue	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val queue = LinkedList<Point>()$/;"	C
range	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val range = gson.fromJson(args[1] as JsonElement, Range::class.java)$/;"	C
range	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    val range = change.range$/;"	C
range	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val range = Range($/;"	C
range	server/bin/main/org/javacs/kt/position/Position.kt	/^fun range(content: String, range: TextRange) =$/;"	m
range	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^    val range = range(file.text, d.textRange)$/;"	C
range	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val range = Range(position(line, char), Position(line - 1, char - 1 + oldText.length))$/;"	C
range	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun range(startLine: Int, startColumn: Int, endLine: Int, endColumn: Int) =$/;"	m
range	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val range = gson.fromJson(args[1] as JsonElement, Range::class.java)$/;"	C
range	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    val range = change.range$/;"	C
range	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val range = Range($/;"	C
range	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^fun range(content: String, range: TextRange) =$/;"	m
range	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^    val range = range(file.text, d.textRange)$/;"	C
range	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val range = Range(position(line, char), Position(line - 1, char - 1 + oldText.length))$/;"	C
range	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun range(startLine: Int, startColumn: Int, endLine: Int, endColumn: Int) =$/;"	m
rangeFormatting	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun rangeFormatting(params: DocumentRangeFormattingParams): CompletableFuture<List</;"	m
rangeFormatting	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun rangeFormatting(params: DocumentRangeFormattingParams): CompletableFuture<List</;"	m
ranges	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^        val ranges = definitions.map { it.range }$/;"	C
rawClassURI	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^        val rawClassURI = destination.uri$/;"	C
rawClassURI	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^        val rawClassURI = destination.uri$/;"	C
read	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(): Int = exitIfNegative { delegate.read() }$/;"	m
read	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(b: ByteArray): Int = exitIfNegative { delegate.read(b) }$/;"	m
read	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(b: ByteArray, off: Int, len: Int): Int = exitIfNegative { delegate.read(b,/;"	m
read	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(): Int = exitIfNegative { delegate.read() }$/;"	m
read	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(b: ByteArray): Int = exitIfNegative { delegate.read(b) }$/;"	m
read	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^    override fun read(b: ByteArray, off: Int, len: Int): Int = exitIfNegative { delegate.read(b,/;"	m
readContents	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    fun readContents(): String = withJarURLConnection {$/;"	m
readContents	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    fun readContents(): String = withJarURLConnection {$/;"	m
readDependenciesViaGradleCLI	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun readDependenciesViaGradleCLI(projectDirectory: Path, gradleScripts: List<String>, gr/;"	m
readDependenciesViaGradleCLI	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^private fun readDependenciesViaGradleCLI(projectDirectory: Path, gradleScripts: List<String>, gr/;"	m
readFromDisk	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private fun readFromDisk(uri: URI, temporary: Boolean): SourceVersion? = try {$/;"	m
readFromDisk	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private fun readFromDisk(uri: URI, temporary: Boolean): SourceVersion? = try {$/;"	m
readMavenDependencyList	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun readMavenDependencyList(mavenOutput: Path): Set<Artifact> =$/;"	m
readMavenDependencyList	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^private fun readMavenDependencyList(mavenOutput: Path): Set<Artifact> =$/;"	m
reader	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    val reader = BufferedReader(StringReader(sourceText))$/;"	C
reader	server/bin/main/org/javacs/kt/position/Position.kt	/^    val reader = content.reader()$/;"	C
reader	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    val reader = BufferedReader(StringReader(sourceText))$/;"	C
reader	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val reader = content.reader()$/;"	C
receiverType	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val receiverType = if (unwrapNullable) try {$/;"	C
receiverType	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val receiverType = extensionFunction.extensionReceiverParameter?.type?.replaceArgumentsWithS/;"	C
receiverType	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val receiverType = if (unwrapNullable) try {$/;"	C
receiverType	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val receiverType = extensionFunction.extensionReceiverParameter?.type?.replaceArgumentsWithS/;"	C
recompile	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val recompile = classPath.compiler.createKtFile(padOffset + surroundingContent, Paths.ge/;"	C
recompile	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val recompile = sp.compileFiles(maybes.map(Path::toUri))$/;"	C
recompile	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val recompile = compiler.createKtDeclaration("""private fun singleExpressionFunction() =/;"	C
recompile	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val recompile = classPath.compiler.createKtFile(padOffset + surroundingContent, Paths.ge/;"	C
recompile	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val recompile = sp.compileFiles(maybes.map(Path::toUri))$/;"	C
recompile	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val recompile = compiler.createKtDeclaration("""private fun singleExpressionFunction() =/;"	C
recompileBigFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileBigFile(state: ReusableParts) {$/;"	m
recompileBigFile	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileBigFile(state: ReusableParts) {$/;"	m
recompileBoth	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileBoth(state: ReusableParts) {$/;"	m
recompileBoth	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileBoth(state: ReusableParts) {$/;"	m
recompileSmallFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileSmallFile(state: ReusableParts) {$/;"	m
recompileSmallFile	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^    fun recompileSmallFile(state: ReusableParts) {$/;"	m
recover	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun recover(position: TextDocumentPositionParams, recompile: Recompile): Pair<Compil/;"	m
recover	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val recover = sp.currentVersion(file.toUri())$/;"	C
recover	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun recover(position: TextDocumentPositionParams, recompile: Recompile): Pair<Compil/;"	m
recover	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val recover = sp.currentVersion(file.toUri())$/;"	C
recoveryRange	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val recoveryRange = parent.textRange$/;"	C
recoveryRange	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val recoveryRange = parent.textRange$/;"	C
ref	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val ref = PsiTreeUtil.getNonStrictParentOfType(smallFile.findElementAt(80), KtElement::c/;"	C
ref	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val ref = PsiTreeUtil.getNonStrictParentOfType(smallFile.findElementAt(80), KtElement::c/;"	C
referenceAtPoint	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun referenceAtPoint(cursor: Int): Pair<KtExpression, DeclarationDescriptor>? {$/;"	m
referenceAtPoint	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun referenceAtPoint(cursor: Int): Pair<KtExpression, DeclarationDescriptor>? {$/;"	m
referenceFromContext	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    private fun referenceFromContext(cursor: Int, context: BindingContext): Pair<KtExpression, D/;"	m
referenceFromContext	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    private fun referenceFromContext(cursor: Int, context: BindingContext): Pair<KtExpression, D/;"	m
referenceParams	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun referenceParams(relativePath: String, line: Int, column: Int): ReferenceParams {$/;"	m
referenceParams	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun referenceParams(relativePath: String, line: Int, column: Int): ReferenceParams {$/;"	m
referenceStrs	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val referenceStrs = references?.map { it.toString() }$/;"	C
referenceTarget	server/bin/main/org/javacs/kt/completion/Completions.kt	/^                val referenceTarget = file.referenceAtPoint(surroundingElement.qualifier!!.start/;"	C
referenceTarget	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val referenceTarget = file.referenceAtPoint(receiverExpr.endOffset - 1)?.second$/;"	C
referenceTarget	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^                val referenceTarget = file.referenceAtPoint(surroundingElement.qualifier!!.start/;"	C
referenceTarget	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val referenceTarget = file.referenceAtPoint(receiverExpr.endOffset - 1)?.second$/;"	C
references	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun references(position: ReferenceParams) = async.compute {$/;"	m
references	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.COMPONENT_RESOLVED_CALL)$/;"	C
references	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.DELEGATED_PROPERTY_RESOLVED_CALL)$/;"	C
references	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.LOOP_RANGE_ITERATOR_RESOLVED_CALL/;"	C
references	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.REFERENCE_TARGET)$/;"	C
references	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val references = languageServer.textDocumentService.references(request).get()$/;"	C
references	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun references(position: ReferenceParams) = async.compute {$/;"	m
references	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.COMPONENT_RESOLVED_CALL)$/;"	C
references	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.DELEGATED_PROPERTY_RESOLVED_CALL)$/;"	C
references	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.LOOP_RANGE_ITERATOR_RESOLVED_CALL/;"	C
references	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^    val references = recompile.getSliceContents(BindingContext.REFERENCE_TARGET)$/;"	C
references	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val references = languageServer.textDocumentService.references(request).get()$/;"	C
refresh	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private fun refresh($/;"	m
refresh	server/bin/main/org/javacs/kt/SourcePath.kt	/^    fun refresh() {$/;"	m
refresh	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private fun refresh($/;"	m
refresh	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    fun refresh() {$/;"	m
refreshCompiler	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        var refreshCompiler = updateJavaSourcePath$/;"	v
refreshCompiler	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        var refreshCompiler = updateJavaSourcePath$/;"	v
refreshed	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^            val refreshed = classPath.addWorkspaceRoot(root)$/;"	C
refreshed	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^            val refreshed = cp.addWorkspaceRoot(root)$/;"	C
refreshed	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^            val refreshed = cp.removeWorkspaceRoot(root)$/;"	C
refreshed	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^            val refreshed = classPath.addWorkspaceRoot(root)$/;"	C
refreshed	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^            val refreshed = cp.addWorkspaceRoot(root)$/;"	C
refreshed	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^            val refreshed = cp.removeWorkspaceRoot(root)$/;"	C
remove	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun remove(uri: URI) {$/;"	m
remove	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun remove(uri: URI) {$/;"	m
removeAll	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun removeAll(rm: Collection<URI>) {$/;"	m
removeAll	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun removeAll(rm: Collection<URI>) {$/;"	m
removeClass	shared/build/reports/tests/test/js/report.js	/^    function removeClass(element, classValue) {$/;"	f
removeEldestEntry	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        override fun removeEldestEntry(eldest: MutableMap.MutableEntry<String, String>) = size >/;"	m
removeEldestEntry	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        override fun removeEldestEntry(eldest: MutableMap.MutableEntry<String, String>) = size >/;"	m
removeIfTemporary	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun removeIfTemporary(uri: URI): Boolean =$/;"	m
removeIfTemporary	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun removeIfTemporary(uri: URI): Boolean =$/;"	m
removeParens	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val removeParens = label.substring(1, label.length - 1)$/;"	C
removeParens	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val removeParens = label.substring(1, label.length - 1)$/;"	C
removeWorkspaceRoot	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun removeWorkspaceRoot(root: Path): Boolean {$/;"	m
removeWorkspaceRoot	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    fun removeWorkspaceRoot(root: Path) {$/;"	m
removeWorkspaceRoot	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun removeWorkspaceRoot(root: Path): Boolean {$/;"	m
removeWorkspaceRoot	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    fun removeWorkspaceRoot(root: Path) {$/;"	m
removed	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        val removed = dest - new$/;"	C
removed	server/bin/main/org/javacs/kt/SourceFiles.kt	/^            val removed = files.removeIfTemporary(uri)$/;"	C
removed	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        val removed = dest - new$/;"	C
removed	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^            val removed = files.removeIfTemporary(uri)$/;"	C
rename	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun rename(params: RenameParams): CompletableFuture<WorkspaceEdit> {$/;"	m
rename	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun rename(params: RenameParams): CompletableFuture<WorkspaceEdit> {$/;"	m
render	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun render(builder: StringBuilder, indent: String)$/;"	m
render	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        override fun render(builder: StringBuilder, indent: String) {$/;"	m
render	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun render(builder: StringBuilder, indent: String)$/;"	m
render	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        override fun render(builder: StringBuilder, indent: String) {$/;"	m
renderAttributes	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        private fun renderAttributes(): String? {$/;"	m
renderAttributes	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        private fun renderAttributes(): String? {$/;"	m
renderClassifier	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^        override fun renderClassifier(classifier: ClassifierDescriptor, renderer: DescriptorRend/;"	m
renderClassifier	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^        override fun renderClassifier(classifier: ClassifierDescriptor, renderer: DescriptorRend/;"	m
renderJavaDoc	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^private fun renderJavaDoc(text: String): String {$/;"	m
renderJavaDoc	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^private fun renderJavaDoc(text: String): String {$/;"	m
renderTypeOf	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^private fun renderTypeOf(element: KtExpression, bindingContext: BindingContext): String? {$/;"	m
renderTypeOf	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^private fun renderTypeOf(element: KtExpression, bindingContext: BindingContext): String? {$/;"	m
renderWithSnippets	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val renderWithSnippets = config.snippets.enabled$/;"	C
renderWithSnippets	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val renderWithSnippets = config.snippets.enabled$/;"	C
replace	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun replace(relativePath: String, line: Int, char: Int, oldText: String, newText: String) {$/;"	m
replace	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun replace(relativePath: String, line: Int, char: Int, oldText: String, newText: String) {$/;"	m
report	server/bin/main/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun report(severity: CompilerMessageSeverity, message: String, location: CompilerMessa/;"	m
report	server/src/main/kotlin/org/javacs/kt/util/LoggingMessageCollector.kt	/^	override fun report(severity: CompilerMessageSeverity, message: String, location: CompilerMessa/;"	m
reportDiagnostics	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun reportDiagnostics(compiled: Collection<URI>, kotlinDiagnostics: Diagnostics) {$/;"	m
reportDiagnostics	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun reportDiagnostics(compiled: Collection<URI>, kotlinDiagnostics: Diagnostics) {$/;"	m
repository	grammars/Kotlin.tmLanguage.json	/^	"repository": {$/;"	o
repository	grammars/codeblock.json	/^	"repository": {$/;"	o
request	.vscode/launch.json	/^            "request": "attach",$/;"	s	object:configurations.1
request	.vscode/launch.json	/^            "request": "attach",$/;"	s	object:configurations.2
request	.vscode/launch.json	/^            "request": "attach",$/;"	s	object:configurations.3
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.0
request	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val request = ReferenceParams(ReferenceContext(true))$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 1, 24)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 12, 21)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 10)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 11)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 19)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 21)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 30)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 19)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 21)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 22)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 4, 20)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 4, 21)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 5, 20)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 5, 21)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 6, 20)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 7, 20)$/;"	C
request	server/bin/test/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 8, 20)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val request = ReferenceParams(ReferenceContext(true))$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 1, 24)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 12, 21)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 10)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 11)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 19)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 21)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 2, 30)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 19)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 21)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 3, 22)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 4, 20)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 4, 21)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 5, 20)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 5, 21)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 6, 20)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 7, 20)$/;"	C
request	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val request = referenceParams(file, 8, 20)$/;"	C
require_not_none	scripts/utils/cli.py	/^def require_not_none(description, x):$/;"	f
resolve	server/bin/main/org/javacs/kt/Compiler.kt	/^                                override fun resolve(scriptContents: ScriptContents, environment/;"	m
resolve	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                                override fun resolve(scriptContents: ScriptContents, environment/;"	m
resolveCodeLens	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun resolveCodeLens(unresolved: CodeLens): CompletableFuture<CodeLens> {$/;"	m
resolveCodeLens	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun resolveCodeLens(unresolved: CodeLens): CompletableFuture<CodeLens> {$/;"	m
resolveCompletionItem	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun resolveCompletionItem(unresolved: CompletionItem): CompletableFuture<Completion/;"	m
resolveCompletionItem	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun resolveCompletionItem(unresolved: CompletionItem): CompletableFuture<Completion/;"	m
resolved	shared/bin/main/org/javacs/kt/util/Utils.kt	/^        val resolved = resolver()$/;"	C
resolved	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^        val resolved = resolver()$/;"	C
resolver	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^        val resolver = defaultClassPathResolver(workspaceRoots)$/;"	C
resolver	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^        val resolver = defaultClassPathResolver(workspaceRoots)$/;"	C
resolver	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^            val resolver = if (file.toString().contains("mushroom\/apk\/build.gradle")) {$/;"	C
resolver	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^            val resolver = if ($/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    override val resolverType: String = "Backup"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^            override val resolverType = "[]"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val resolverType: String get() = "(${lhs.resolverType} + ${rhs.resolverType})"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val resolverType: String get() = "(${lhs.resolverType} or ${rhs.resolverType})"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val resolverType: String$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val resolverType: String = "Gradle"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override val resolverType: String = "Maven"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    override val resolverType: String = "Shell"$/;"	C
resolverType	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val resolverType: String get() = "Stdlib + ${wrapped.resolverType}"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    override val resolverType: String = "Backup"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^            override val resolverType = "[]"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val resolverType: String get() = "(${lhs.resolverType} + ${rhs.resolverType})"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    override val resolverType: String get() = "(${lhs.resolverType} or ${rhs.resolverType})"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/ClassPathResolver.kt	/^    val resolverType: String$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    override val resolverType: String = "Gradle"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override val resolverType: String = "Maven"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    override val resolverType: String = "Shell"$/;"	C
resolverType	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    override val resolverType: String get() = "Stdlib + ${wrapped.resolverType}"$/;"	C
resolvers	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^    var resolvers = mutableListOf<ClassPathResolver>()$/;"	v
resolvers	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^    val resolvers = mutableListOf<ClassPathResolver>()$/;"	C
result	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val result = lintTodo.toList()$/;"	C
result	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^        val result = workspaceSymbols(params.query, sp)$/;"	C
result	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val result = d.accept(RenderCompletionItem(renderWithSnippets), null)$/;"	C
result	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private val result = CompletionItem()$/;"	C
result	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^        val result = action(connection)$/;"	C
result	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val result = expressionType?.let { TYPE_RENDERER.renderType(it) } ?: return null$/;"	C
result	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val result = arrayListOf<Point>()$/;"	C
result	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val result = html {$/;"	C
result	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^        var result = runner.eval(CodeSnippet("val x = 1"))$/;"	v
result	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val result = lintTodo.toList()$/;"	C
result	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^        val result = workspaceSymbols(params.query, sp)$/;"	C
result	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val result = d.accept(RenderCompletionItem(renderWithSnippets), null)$/;"	C
result	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private val result = CompletionItem()$/;"	C
result	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^        val result = action(connection)$/;"	C
result	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val result = expressionType?.let { TYPE_RENDERER.renderType(it) } ?: return null$/;"	C
result	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^        var result = runner.eval(CodeSnippet("val x = 1"))$/;"	v
result	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val result = arrayListOf<Point>()$/;"	C
result	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val result = html {$/;"	C
result	shared/bin/main/org/javacs/kt/Logger.kt	/^        var result = StringBuilder()$/;"	v
result	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val result = mavenHome.resolve("repository")$/;"	C
result	shared/bin/main/org/javacs/kt/util/ExitingInputStream.kt	/^        val result = call()$/;"	C
result	shared/bin/main/org/javacs/kt/util/Utils.kt	/^        val result = optional()$/;"	C
result	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        var result = StringBuilder()$/;"	v
result	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val result = mavenHome.resolve("repository")$/;"	C
result	shared/src/main/kotlin/org/javacs/kt/util/ExitingInputStream.kt	/^        val result = call()$/;"	C
result	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^        val result = optional()$/;"	C
resultValue	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^        val resultValue = (result as ResultWithDiagnostics.Success).value.returnValue as ResultV/;"	C
resultValue	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^        val resultValue = (result as ResultWithDiagnostics.Success).value.returnValue as ResultV/;"	C
ret	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^        var ret: String$/;"	v
ret	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^        var ret: String$/;"	v
returnsType	server/bin/test/completions/Types.kt	/^    fun returnsType(): S$/;"	m
returnsType	server/src/test/resources/completions/Types.kt	/^    fun returnsType(): S$/;"	m
rightRev	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val rightRev = rightVersion[i].reversed()$/;"	C
rightRev	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^        val rightRev = rightVersion[i].reversed()$/;"	C
rightVersion	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val rightVersion = extractVersion(right)$/;"	C
rightVersion	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^    val rightVersion = extractVersion(right)$/;"	C
rmSources	server/bin/main/org/javacs/kt/SourceFiles.kt	/^        val rmSources = files.keys.filter { it.filePath?.startsWith(root) ?: false }$/;"	C
rmSources	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^        val rmSources = files.keys.filter { it.filePath?.startsWith(root) ?: false }$/;"	C
root	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^            val root = Paths.get(parseURI(params.rootUri))$/;"	C
root	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^            val root = Paths.get(parseURI(change.uri))$/;"	C
root	server/bin/main/org/javacs/kt/util/PsiUtils.kt	/^    val root = this$/;"	C
root	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^            val root = Paths.get(parseURI(params.rootUri))$/;"	C
root	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^            val root = Paths.get(parseURI(change.uri))$/;"	C
root	server/src/main/kotlin/org/javacs/kt/util/PsiUtils.kt	/^    val root = this$/;"	C
rootLogger	shared/bin/main/org/javacs/kt/Logger.kt	/^        val rootLogger = java.util.logging.Logger.getLogger("")$/;"	C
rootLogger	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        val rootLogger = java.util.logging.Logger.getLogger("")$/;"	C
rt	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val rt = Runtime.getRuntime()$/;"	C
rt	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val rt = Runtime.getRuntime()$/;"	C
runGameOfLife	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun runGameOfLife(fieldText: String, steps: Int) {$/;"	m
runGameOfLife	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun runGameOfLife(fieldText: String, steps: Int) {$/;"	m
runner	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^        val runner = SnippetRunner()$/;"	C
runner	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^        val runner = SnippetRunner()$/;"	C
same	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val same = sources - allChanged$/;"	C
same	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val same = sources - allChanged$/;"	C
sameFile	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun sameFile(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean {$/;"	m
sameFile	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun sameFile(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean {$/;"	m
sameParent	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun sameParent(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean {$/;"	m
sameParent	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun sameParent(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean {$/;"	m
sample	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val sample = LazySample()$/;"	C
sample	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val sample = LazySample()$/;"	C
save	gradlew	/^save () {$/;"	f
save	scripts/utils/changelog.py	/^    def save(self):$/;"	m	class:ChangelogFile
save	server/bin/test/additionalWorkspace/gradlew	/^save () {$/;"	f
save	server/build/install/server/bin/kotlin-language-server	/^save () {$/;"	f
save	server/build/scripts/kotlin-language-server	/^save () {$/;"	f
save	server/src/test/resources/additionalWorkspace/gradlew	/^save () {$/;"	f
schedule	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    fun schedule(task: (cancelCallback: () -> Boolean) -> Unit) {$/;"	m
schedule	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    fun schedule(task: (cancelCallback: () -> Boolean) -> Unit) {$/;"	m
scope	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val scope = scopeAtPoint(cursor) ?: return nullResult("Couldn't find scope at ${describe/;"	C
scope	server/bin/main/org/javacs/kt/completion/Completions.kt	/^                val scope = file.scopeAtPoint(cursor) ?: return emptySequence()$/;"	C
scope	server/bin/main/org/javacs/kt/completion/Completions.kt	/^                val scope = file.scopeAtPoint(surroundingElement.startOffset) ?: return noResult/;"	C
scope	server/bin/main/org/javacs/kt/completion/Completions.kt	/^            val scope = file.scopeAtPoint(surroundingElement.startOffset) ?: return noResult("No/;"	C
scope	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val scope = file.scopeAtPoint(cursor) ?: return null$/;"	C
scope	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^        val scope = file.scopeAtPoint(idParent.startOffset) ?: return emptyList()$/;"	C
scope	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val scope = context.get(BindingContext.LEXICAL_SCOPE, function.bodyExpression)!!$/;"	C
scope	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val scope = scopeAtPoint(cursor) ?: return nullResult("Couldn't find scope at ${describe/;"	C
scope	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^                val scope = file.scopeAtPoint(cursor) ?: return emptySequence()$/;"	C
scope	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^                val scope = file.scopeAtPoint(surroundingElement.startOffset) ?: return noResult/;"	C
scope	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^            val scope = file.scopeAtPoint(surroundingElement.startOffset) ?: return noResult("No/;"	C
scope	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val scope = file.scopeAtPoint(cursor) ?: return null$/;"	C
scope	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^        val scope = file.scopeAtPoint(idParent.startOffset) ?: return emptyList()$/;"	C
scope	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val scope = context.get(BindingContext.LEXICAL_SCOPE, function.bodyExpression)!!$/;"	C
scope	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val scope: String?$/;"	C
scope	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val scope: String?$/;"	C
scopeAtPoint	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun scopeAtPoint(cursor: Int): LexicalScope? {$/;"	m
scopeAtPoint	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun scopeAtPoint(cursor: Int): LexicalScope? {$/;"	m
scopeChainTypes	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun scopeChainTypes(scope: LexicalScope): Sequence<DeclarationDescriptor> =$/;"	m
scopeChainTypes	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun scopeChainTypes(scope: LexicalScope): Sequence<DeclarationDescriptor> =$/;"	m
scopeExtensionFunctions	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun scopeExtensionFunctions(scope: HierarchicalScope): Sequence<CallableDescriptor> =$/;"	m
scopeExtensionFunctions	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun scopeExtensionFunctions(scope: HierarchicalScope): Sequence<CallableDescriptor> =$/;"	m
scopeIdentifiers	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun scopeIdentifiers(scope: HierarchicalScope): Sequence<DeclarationDescriptor> {$/;"	m
scopeIdentifiers	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun scopeIdentifiers(scope: HierarchicalScope): Sequence<DeclarationDescriptor> {$/;"	m
scopeName	grammars/Kotlin.tmLanguage.json	/^	"scopeName": "source.kotlin",$/;"	s
scopeName	grammars/codeblock.json	/^	"scopeName": "markdown.kotlin.codeblock"$/;"	s
scopeTypes	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun scopeTypes(scope: HierarchicalScope): Sequence<DeclarationDescriptor> =$/;"	m
scopeTypes	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun scopeTypes(scope: HierarchicalScope): Sequence<DeclarationDescriptor> =$/;"	m
script	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    private val script: Path,$/;"	C
script	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    private val script: Path,$/;"	C
scriptClassLoader	server/bin/main/org/javacs/kt/Compiler.kt	/^                        val scriptClassLoader = URLClassLoader(classPath.map { it.toUri().toURL(/;"	C
scriptClassLoader	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                        val scriptClassLoader = URLClassLoader(classPath.map { it.toUri().toURL(/;"	C
scriptDeclarations	server/bin/main/org/javacs/kt/Compiler.kt	/^            val scriptDeclarations = onlyDeclaration.declarations$/;"	C
scriptDeclarations	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^            val scriptDeclarations = onlyDeclaration.declarations$/;"	C
scriptDefinitions	server/bin/main/org/javacs/kt/Compiler.kt	/^                val scriptDefinitions: MutableList<ScriptDefinition> = mutableListOf(ScriptDefin/;"	C
scriptDefinitions	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                val scriptDefinitions: MutableList<ScriptDefinition> = mutableListOf(ScriptDefin/;"	C
scriptHostConfig	server/bin/main/org/javacs/kt/Compiler.kt	/^                        val scriptHostConfig = ScriptingHostConfiguration(defaultJvmScriptingHos/;"	C
scriptHostConfig	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                        val scriptHostConfig = ScriptingHostConfiguration(defaultJvmScriptingHos/;"	C
scriptTemplates	server/bin/main/org/javacs/kt/Compiler.kt	/^                    val scriptTemplates = listOf($/;"	C
scriptTemplates	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^                    val scriptTemplates = listOf($/;"	C
scripts	server/bin/main/org/javacs/kt/Compiler.kt	/^    val scripts: ScriptDefinitionProvider$/;"	C
scripts	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    val scripts: ScriptDefinitionProvider$/;"	C
scripts	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^            val scripts = listOf("kotlinDSLClassPathFinder.gradle")$/;"	C
scripts	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        val scripts = listOf("projectClassPathFinder.gradle")$/;"	C
scripts	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^            val scripts = listOf("kotlinDSLClassPathFinder.gradle")$/;"	C
scripts	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        val scripts = listOf("projectClassPathFinder.gradle")$/;"	C
second	server/bin/test/script/FunctionScript.kts	/^    val second = 2$/;"	C
second	server/src/test/resources/script/FunctionScript.kts	/^    val second = 2$/;"	C
secondUser	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val secondUser = User2("Alex", 1)$/;"	C
secondUser	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val secondUser = User2("Alex", 1)$/;"	C
select	shared/build/reports/tests/test/js/report.js	/^    function select(i) {$/;"	c
selectedJavaCode	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                val selectedJavaCode = extractRange(sp.content(parseURI(fileUri)), range)$/;"	C
selectedJavaCode	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                val selectedJavaCode = extractRange(sp.content(parseURI(fileUri)), range)$/;"	C
self-reference	grammars/Kotlin.tmLanguage.json	/^		"self-reference": {$/;"	o	object:repository
server	server/bin/main/org/javacs/kt/Main.kt	/^    val server = KotlinLanguageServer()$/;"	C
server	server/build/poms/pom-default.xml	/^  <artifactId>server<\/artifactId>$/;"	a	groupId:kotlin-language-server
server	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    val server = KotlinLanguageServer()$/;"	C
serverCapabilities	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^        val serverCapabilities = ServerCapabilities()$/;"	C
serverCapabilities	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^        val serverCapabilities = ServerCapabilities()$/;"	C
setDefaultNotNull	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setDefaultNotNull(defaultNotNull: String) {$/;"	m
setDefaultNotNull	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setDefaultNotNull(defaultNotNull: String) {$/;"	m
setDefaultNullable	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setDefaultNullable(defaultNullable: String) {$/;"	m
setDefaultNullable	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setDefaultNullable(defaultNullable: String) {$/;"	m
setDefaults	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun setDefaults(declaration: DeclarationDescriptor) {$/;"	m
setDefaults	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun setDefaults(declaration: DeclarationDescriptor) {$/;"	m
setInstrumentedNotNulls	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setInstrumentedNotNulls(names: MutableList<String>) {}$/;"	m
setInstrumentedNotNulls	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setInstrumentedNotNulls(names: MutableList<String>) {}$/;"	m
setNotNulls	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setNotNulls(vararg annotations: String) {$/;"	m
setNotNulls	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setNotNulls(vararg annotations: String) {$/;"	m
setNullables	server/bin/main/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setNullables(vararg annotations: String) {$/;"	m
setNullables	server/src/main/kotlin/org/javacs/kt/util/KotlinNullableNotNullManager.kt	/^    override fun setNullables(vararg annotations: String) {$/;"	m
settings	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^        val settings = params.settings as? JsonObject$/;"	C
settings	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^        val settings = params.settings as? JsonObject$/;"	C
severity	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun severity(severity: Severity): DiagnosticSeverity =$/;"	m
severity	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^private fun severity(severity: Severity): DiagnosticSeverity =$/;"	m
sf	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val sf: SourceFiles,$/;"	C
sf	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val sf: SourceFiles,$/;"	C
sf	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val sf: SourceFiles,$/;"	C
sf	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val sf: SourceFiles,$/;"	C
shared	shared/build/poms/pom-default.xml	/^  <artifactId>shared<\/artifactId>$/;"	a	groupId:kotlin-language-server
shortenOrPad	shared/bin/main/org/javacs/kt/Logger.kt	/^    private fun shortenOrPad(str: String, length: Int): String =$/;"	m
shortenOrPad	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    private fun shortenOrPad(str: String, length: Int): String =$/;"	m
shouldRecompile	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val shouldRecompile = when (recompile) {$/;"	C
shouldRecompile	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val shouldRecompile = when (recompile) {$/;"	C
showMessage	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun showMessage(message: MessageParams?) = printMessage(message)$/;"	m
showMessage	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun showMessage(message: MessageParams?) = printMessage(message)$/;"	m
showMessageRequest	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun showMessageRequest(request: ShowMessageRequestParams?): CompletableFuture<Messa/;"	m
showMessageRequest	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun showMessageRequest(request: ShowMessageRequestParams?): CompletableFuture<Messa/;"	m
shutdown	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun shutdown(): CompletableFuture<Any> {$/;"	m
shutdown	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    override fun shutdown(): CompletableFuture<Any> {$/;"	m
shutdown	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^	fun shutdown(awaitTermination: Boolean) {$/;"	m
shutdown	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    fun shutdown(awaitTermination: Boolean) {$/;"	m
shutdown	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^	fun shutdown(awaitTermination: Boolean) {$/;"	m
shutdown	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    fun shutdown(awaitTermination: Boolean) {$/;"	m
shutdownExecutors	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun shutdownExecutors(awaitTermination: Boolean) {$/;"	m
shutdownExecutors	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private fun shutdownExecutors(awaitTermination: Boolean) {$/;"	m
signatureHelp	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun signatureHelp(position: TextDocumentPositionParams): CompletableFuture<Signatur/;"	m
signatureHelp	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    override fun signatureHelp(position: TextDocumentPositionParams): CompletableFuture<Signatur/;"	m
signatures	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val signatures = candidates.map(::toSignature)$/;"	C
signatures	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val signatures = getSignatures(file, cursor)$/;"	C
signatures	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val signatures = candidates.map(::toSignature)$/;"	C
signatures	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val signatures = getSignatures(file, cursor)$/;"	C
singleExpressionFunction	server/bin/test/hover/Recover.kt	/^private fun singleExpressionFunction() =$/;"	m
singleExpressionFunction	server/src/test/resources/hover/Recover.kt	/^private fun singleExpressionFunction() =$/;"	m
size	server/bin/test/j2k/JavaJSONConverter.kt	/^        var size: Int = list.size()$/;"	v
size	server/src/test/resources/j2k/JavaJSONConverter.kt	/^        var size: Int = list.size()$/;"	v
smallFile	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^        val smallFile = state.openFile("\/kotlinCompilerPerformance\/ReferencesBigFile.kt")$/;"	C
smallFile	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^        val smallFile = state.openFile("\/kotlinCompilerPerformance\/ReferencesBigFile.kt")$/;"	C
smartCast	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val smartCast = bindingContext[BindingContext.SMARTCAST, element]$/;"	C
smartCast	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val smartCast = bindingContext[BindingContext.SMARTCAST, element]$/;"	C
snippets	server/bin/main/org/javacs/kt/Configuration.kt	/^    val snippets: SnippetsConfiguration = SnippetsConfiguration()$/;"	C
snippets	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^                    val snippets = completion.snippets$/;"	C
snippets	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    val snippets: SnippetsConfiguration = SnippetsConfiguration()$/;"	C
snippets	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^                    val snippets = completion.snippets$/;"	C
soft-keywords	grammars/Kotlin.tmLanguage.json	/^		"soft-keywords": {$/;"	o	object:repository
someVal	server/bin/test/compiler/FileToEdit.kt	/^    val someVal = "Foo"$/;"	C
someVal	server/bin/test/org/javacs/kt/CompilerTest.kt	/^    val someVal = 1$/;"	C
someVal	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^    val someVal = 1$/;"	C
someVal	server/src/test/resources/compiler/FileToEdit.kt	/^    val someVal = "Foo"$/;"	C
sorted	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val sorted = matchesName.takeIf { partial.length >= MIN_SORT_LENGTH }?.sortedBy { stringDist/;"	C
source	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val source = javaMethodDescriptor.source as? JavaSourceElement ?: return true$/;"	C
source	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^    val source = DescriptorToSourceUtils.descriptorToDeclaration(declaration)?.navigationElement$/;"	C
source	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val source = javaMethodDescriptor.source as? JavaSourceElement ?: return true$/;"	C
source	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^    val source = DescriptorToSourceUtils.descriptorToDeclaration(declaration)?.navigationElement$/;"	C
sourceFile	server/bin/main/org/javacs/kt/SourcePath.kt	/^    private fun sourceFile(uri: URI): SourceFile {$/;"	m
sourceFile	server/bin/main/org/javacs/kt/position/Position.kt	/^        val sourceFile = declaration.source.containingFile$/;"	C
sourceFile	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^    private fun sourceFile(uri: URI): SourceFile {$/;"	m
sourceFile	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^        val sourceFile = declaration.source.containingFile$/;"	C
sourceFiles	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    val sourceFiles = SourceFiles(sourcePath, uriContentProvider)$/;"	C
sourceFiles	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    val sourceFiles = SourceFiles(sourcePath, uriContentProvider)$/;"	C
sourceMatcher	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    val sourceMatcher = FileSystems.getDefault().getPathMatcher("glob:*.java")$/;"	C
sourceMatcher	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    val sourceMatcher = FileSystems.getDefault().getPathMatcher("glob:*.{kt,kts}")$/;"	C
sourceMatcher	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    val sourceMatcher = FileSystems.getDefault().getPathMatcher("glob:*.java")$/;"	C
sourceMatcher	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    val sourceMatcher = FileSystems.getDefault().getPathMatcher("glob:*.{kt,kts}")$/;"	C
sourcePath	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    val sourcePath: Collection<KtFile>,$/;"	C
sourcePath	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    val sourcePath = SourcePath(classPath, uriContentProvider)$/;"	C
sourcePath	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val sourcePath = listOf(parse)$/;"	C
sourcePath	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    val sourcePath: Collection<KtFile>,$/;"	C
sourcePath	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    val sourcePath = SourcePath(classPath, uriContentProvider)$/;"	C
sourcePath	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val sourcePath = listOf(parse)$/;"	C
sourceURI	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val sourceURI = uri.withFileExtension(if (config.autoConvertToKotlin) "kt" else "java")$/;"	C
sourceURI	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^        val sourceURI = uri.withFileExtension(if (config.autoConvertToKotlin) "kt" else "java")$/;"	C
sources	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val sources = all.map { files[it]!! }$/;"	C
sources	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val sources = all.map { files[it]!! }$/;"	C
sourcesContext	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val sourcesContext = compileAndUpdate(changedSources, CompilationKind.DEFAULT)$/;"	C
sourcesContext	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val sourcesContext = compileAndUpdate(changedSources, CompilationKind.DEFAULT)$/;"	C
sp	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val sp: SourcePath,$/;"	C
sp	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val sp: SourcePath,$/;"	C
sp	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val sp: SourcePath,$/;"	C
sp	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val sp: SourcePath,$/;"	C
sp	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    private val sp: SourcePath,$/;"	C
sp	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val sp: SourcePath,$/;"	C
span	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^        val span = range(file.text, currentDecl.textRange)$/;"	C
span	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^        val span = range(file.text, currentDecl.textRange)$/;"	C
span.code	shared/build/reports/tests/test/css/base-style.css	/^span.code {$/;"	c
span.code pre	shared/build/reports/tests/test/css/base-style.css	/^span.code pre {$/;"	s
span.wrapped pre	shared/build/reports/tests/test/css/base-style.css	/^span.wrapped pre {$/;"	s
split	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^    val split = text.split('\\n')$/;"	C
split	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^    val split = text.split('\\n')$/;"	C
srcOutName	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val srcOutName = compiledClassOrJar.fileName.replaceExtensionWith(newFileExtension)$/;"	C
srcOutName	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val srcOutName = compiledClassOrJar.fileName.replaceExtensionWith(newFileExtension)$/;"	C
srcOutPath	server/bin/main/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val srcOutPath = outputDir.resolve(srcOutName)$/;"	C
srcOutPath	server/src/main/kotlin/org/javacs/kt/externalsources/FernflowerDecompiler.kt	/^		val srcOutPath = outputDir.resolve(srcOutName)$/;"	C
start	grammars/kotlin.configuration.json	/^            "start": "^\\\\s*\/\/\\\\s*#region",$/;"	s	object:folding.markers
start	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val start = position(c, range.startOffset)$/;"	C
start	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val start = params.range.start$/;"	C
start	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val start: Point,$/;"	C
start	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        var start: Point? = null$/;"	v
start	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val start = position(c, range.startOffset)$/;"	C
start	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val start = params.range.start$/;"	C
start	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val start: Point,$/;"	C
start	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        var start: Point? = null$/;"	v
started	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    val started = System.currentTimeMillis()$/;"	C
started	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    val started = System.currentTimeMillis()$/;"	C
staticDot	server/bin/test/completions/OuterDotInner.kt	/^private fun staticDot() {$/;"	m
staticDot	server/src/test/resources/completions/OuterDotInner.kt	/^private fun staticDot() {$/;"	m
statics	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        val statics = referenceTarget.staticScope.getContributedDescriptors().asSequence()$/;"	C
statics	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^        val statics = referenceTarget.staticScope.getContributedDescriptors().asSequence()$/;"	C
status	scripts/utils/teamcity.py	/^    def status(self):$/;"	m	class:TeamCityNode
stderr	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val stderr = process.errorStream$/;"	C
stderr	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val stderr = process.errorStream$/;"	C
stdlibs	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val stdlibs = if (linkedStdLibs.isNotEmpty()) {$/;"	C
stdlibs	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^    val stdlibs = if (linkedStdLibs.isNotEmpty()) {$/;"	C
stdout	shared/bin/main/org/javacs/kt/util/Utils.kt	/^    val stdout = process.inputStream$/;"	C
stdout	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^    val stdout = process.inputStream$/;"	C
str	server/bin/test/j2k/JavaJSONConverter.kt	/^        var str: StringBuilder = StringBuilder("[")$/;"	v
str	server/src/test/resources/j2k/JavaJSONConverter.kt	/^        var str: StringBuilder = StringBuilder("[")$/;"	v
str	shared/bin/main/org/javacs/kt/util/URIs.kt	/^        val str = toString()$/;"	C
str	shared/src/main/kotlin/org/javacs/kt/util/URIs.kt	/^        val str = toString()$/;"	C
string	grammars/Kotlin.tmLanguage.json	/^		"string": {$/;"	o	object:repository
string-empty	grammars/Kotlin.tmLanguage.json	/^		"string-empty": {$/;"	o	object:repository
string-escape-bracketed	grammars/Kotlin.tmLanguage.json	/^		"string-escape-bracketed": {$/;"	o	object:repository
string-escape-simple	grammars/Kotlin.tmLanguage.json	/^		"string-escape-simple": {$/;"	o	object:repository
string-multiline	grammars/Kotlin.tmLanguage.json	/^		"string-multiline": {$/;"	o	object:repository
stringDistance	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^fun stringDistance(candidate: CharSequence, pattern: CharSequence, maxOffset: Int = 4): Int = wh/;"	m
stringLiteral	server/bin/test/hover/Literals.kt	/^    val stringLiteral = "Foo"$/;"	C
stringLiteral	server/src/test/resources/hover/Literals.kt	/^    val stringLiteral = "Foo"$/;"	C
strings	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val strings = listOf("a", "ab", "abc")$/;"	C
strings	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val strings = listOf("a", "ab", "abc")$/;"	C
subclassParent	server/bin/main/org/javacs/kt/completion/Completions.kt	/^private fun subclassParent(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean /;"	m
subclassParent	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^private fun subclassParent(target: DeclarationDescriptor, from: DeclarationDescriptor): Boolean /;"	m
submitImmediately	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    fun submitImmediately(task: (cancelCallback: () -> Boolean) -> Unit) {$/;"	m
submitImmediately	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    fun submitImmediately(task: (cancelCallback: () -> Boolean) -> Unit) {$/;"	m
suffix	server/bin/main/org/javacs/kt/position/Position.kt	/^    val suffix = oldContent.commonSuffixWith(newContent).length$/;"	C
suffix	server/src/main/kotlin/org/javacs/kt/position/Position.kt	/^    val suffix = oldContent.commonSuffixWith(newContent).length$/;"	C
surroundingContent	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        var surroundingContent: String$/;"	v
surroundingContent	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        var surroundingContent: String$/;"	v
surroundingElement	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val surroundingElement = completableElement(file, cursor) ?: return emptySequence()$/;"	C
surroundingElement	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val surroundingElement = completableElement(file, cursor) ?: return emptySequence()$/;"	C
surroundingExpr	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val surroundingExpr = expandForReference(cursor, cursorExpr)$/;"	C
surroundingExpr	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val surroundingExpr = expandForType(cursor, cursorExpr)$/;"	C
surroundingExpr	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val surroundingExpr = expandForReference(cursor, cursorExpr)$/;"	C
surroundingExpr	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val surroundingExpr = expandForType(cursor, cursorExpr)$/;"	C
surroundingPairs	grammars/kotlin.configuration.json	/^	"surroundingPairs": [$/;"	a
switchTab	shared/build/reports/tests/test/js/report.js	/^    function switchTab() {$/;"	f
symbol	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun symbol(params: WorkspaceSymbolParams): CompletableFuture<List<SymbolInformation/;"	m
symbol	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^    override fun symbol(params: WorkspaceSymbolParams): CompletableFuture<List<SymbolInformation/;"	m
symbol	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^        val symbol = DocumentSymbol(currentDecl.name ?: "<anonymous>", symbolKind(currentDecl), /;"	C
symbolContainer	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolContainer(d: PsiNamedElement): String? =$/;"	m
symbolContainer	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolContainer(d: PsiNamedElement): String? =$/;"	m
symbolInformation	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolInformation(d: PsiNamedElement): SymbolInformation? {$/;"	m
symbolInformation	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolInformation(d: PsiNamedElement): SymbolInformation? {$/;"	m
symbolKind	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolKind(d: PsiNamedElement): SymbolKind =$/;"	m
symbolKind	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolKind(d: PsiNamedElement): SymbolKind =$/;"	m
symbolLocation	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolLocation(d: PsiNamedElement): Location {$/;"	m
symbolLocation	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^private fun symbolLocation(d: PsiNamedElement): Location {$/;"	m
syncPaths	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private fun syncPaths(dest: MutableSet<Path>, new: Set<Path>, name: String) {$/;"	m
syncPaths	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private fun syncPaths(dest: MutableSet<Path>, new: Set<Path>, name: String) {$/;"	m
tabs	shared/build/reports/tests/test/js/report.js	/^    var tabs = {};$/;"	v
tags	server/bin/main/org/javacs/kt/docs/FindDoc.kt	/^            val tags = descendants.filterIsInstance<KDocTag>()$/;"	C
tags	server/src/main/kotlin/org/javacs/kt/docs/FindDoc.kt	/^            val tags = descendants.filterIsInstance<KDocTag>()$/;"	C
target	server/bin/main/org/javacs/kt/Configuration.kt	/^    var target: String = "default"$/;"	v
target	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val target = call.calleeExpression!!$/;"	C
target	server/bin/test/hover/ResolveToFile.kt	/^    fun target() {$/;"	m
target	server/bin/test/org/javacs/kt/CompilerTest.kt	/^        val target = recompileContext.get(BindingContext.REFERENCE_TARGET, intFunctionRef)!!$/;"	C
target	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    var target: String = "default"$/;"	v
target	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val target = call.calleeExpression!!$/;"	C
target	server/src/test/kotlin/org/javacs/kt/CompilerTest.kt	/^        val target = recompileContext.get(BindingContext.REFERENCE_TARGET, intFunctionRef)!!$/;"	C
target	server/src/test/resources/hover/ResolveToFile.kt	/^    fun target() {$/;"	m
targetFile	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val targetFile = DescriptorUtils.getContainingSourceFile(target)$/;"	C
targetFile	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val targetFile = DescriptorUtils.getContainingSourceFile(target)$/;"	C
targetParent	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val targetParent = target.parentsWithSelf.mapNotNull(::isParentClass).firstOrNull() ?: retur/;"	C
targetParent	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val targetParent = target.parentsWithSelf.mapNotNull(::isParentClass).firstOrNull() ?: retur/;"	C
targets	server/bin/main/org/javacs/kt/CompiledFile.kt	/^        val targets = context.getSliceContents(BindingContext.REFERENCE_TARGET)$/;"	C
targets	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^        val targets = context.getSliceContents(BindingContext.REFERENCE_TARGET)$/;"	C
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
tasks	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^            val tasks = listOf("kotlinLSPKotlinDSLDeps")$/;"	C
tasks	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        val tasks = listOf("kotlinLSPProjectDeps")$/;"	C
tasks	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^            val tasks = listOf("kotlinLSPKotlinDSLDeps")$/;"	C
tasks	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^        val tasks = listOf("kotlinLSPProjectDeps")$/;"	C
tcpClientHost	server/bin/main/org/javacs/kt/Main.kt	/^    var tcpClientHost: String = "localhost"$/;"	v
tcpClientHost	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    var tcpClientHost: String = "localhost"$/;"	v
tcpClientPort	server/bin/main/org/javacs/kt/Main.kt	/^    var tcpClientPort: Int? = null$/;"	v
tcpClientPort	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    var tcpClientPort: Int? = null$/;"	v
tcpConnectToClient	server/bin/main/org/javacs/kt/TcpSockets.kt	/^fun tcpConnectToClient(host: String, port: Int): Pair<InputStream, OutputStream> =$/;"	m
tcpConnectToClient	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^fun tcpConnectToClient(host: String, port: Int): Pair<InputStream, OutputStream> =$/;"	m
tcpServerPort	server/bin/main/org/javacs/kt/Main.kt	/^    var tcpServerPort: Int? = null$/;"	v
tcpServerPort	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    var tcpServerPort: Int? = null$/;"	v
tcpStartServer	server/bin/main/org/javacs/kt/TcpSockets.kt	/^fun tcpStartServer(port: Int): Pair<InputStream, OutputStream> = ServerSocket(port)$/;"	m
tcpStartServer	server/src/main/kotlin/org/javacs/kt/TcpSockets.kt	/^fun tcpStartServer(port: Int): Pair<InputStream, OutputStream> = ServerSocket(port)$/;"	m
teamCityPassword	gradle.properties	/^teamCityPassword=guest$/;"	k
teamCityUrl	gradle.properties	/^teamCityUrl=https:\/\/teamcity.jetbrains.com$/;"	k
teamCityUsername	gradle.properties	/^teamCityUsername=guest$/;"	k
telemetryEvent	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun telemetryEvent(`object`: Any?) {$/;"	m
telemetryEvent	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    override fun telemetryEvent(`object`: Any?) {$/;"	m
tempDir	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val tempDir: TemporaryDirectory,$/;"	C
tempDir	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private val tempDir: TemporaryDirectory,$/;"	C
tempDirectory	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val tempDirectory = TemporaryDirectory()$/;"	C
tempDirectory	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val tempDirectory: TemporaryDirectory,$/;"	C
tempDirectory	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val tempDirectory = TemporaryDirectory()$/;"	C
tempDirectory	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val tempDirectory: TemporaryDirectory,$/;"	C
test	server/bin/test/completions/EditCall.kt	/^private fun test() {$/;"	m
test	server/bin/test/completions/OuterDotInner.kt	/^private fun test(p: Any) {$/;"	m
test	server/bin/test/completions/Visibility.kt	/^    fun test() {$/;"	m
test	server/src/test/resources/completions/EditCall.kt	/^private fun test() {$/;"	m
test	server/src/test/resources/completions/OuterDotInner.kt	/^private fun test(p: Any) {$/;"	m
test	server/src/test/resources/completions/Visibility.kt	/^    fun test() {$/;"	m
testChar	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        var testChar = candidate[iCandidate]$/;"	v
testChar	shared/src/main/kotlin/org/javacs/kt/util/StringUtils.kt	/^        var testChar = candidate[iCandidate]$/;"	v
testFunction	server/bin/test/mainWorkspace/MainWorkspaceFile.kt	/^    fun testFunction() {$/;"	m
testFunction	server/src/test/resources/mainWorkspace/MainWorkspaceFile.kt	/^    fun testFunction() {$/;"	m
testResources	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val testResources = testResourcesRoot()$/;"	C
testResources	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val testResources = testResourcesRoot()$/;"	C
testResourcesRoot	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^fun testResourcesRoot(): Path {$/;"	m
testResourcesRoot	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^fun testResourcesRoot(): Path {$/;"	m
text	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val text = args.text$/;"	C
text	server/bin/test/org/javacs/kt/LintTest.kt	/^        var text = "1"$/;"	v
text	server/bin/test/org/javacs/kt/SimpleScriptTest.kt	/^    override val text: String,$/;"	C
text	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^    val text = args.text$/;"	C
text	server/src/test/kotlin/org/javacs/kt/LintTest.kt	/^        var text = "1"$/;"	v
text	server/src/test/kotlin/org/javacs/kt/SimpleScriptTest.kt	/^    override val text: String,$/;"	C
textDocumentPosition	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun textDocumentPosition(relativePath: String, line: Int, column: Int): TextDocumentPosition/;"	m
textDocumentPosition	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun textDocumentPosition(relativePath: String, position: Position): TextDocumentPositionPara/;"	m
textDocumentPosition	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun textDocumentPosition(relativePath: String, line: Int, column: Int): TextDocumentPosition/;"	m
textDocumentPosition	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun textDocumentPosition(relativePath: String, position: Position): TextDocumentPositionPara/;"	m
textDocuments	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val textDocuments = KotlinTextDocumentService(sourceFiles, sourcePath, config, tempD/;"	C
textDocuments	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val textDocuments = KotlinTextDocumentService(sourceFiles, sourcePath, config, tempD/;"	C
thirdUser	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val thirdUser = User2("Max", 2)$/;"	C
thirdUser	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val thirdUser = User2("Max", 2)$/;"	C
thread	shared/bin/main/org/javacs/kt/Logger.kt	/^        var thread = Thread.currentThread().name$/;"	v
thread	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        var thread = Thread.currentThread().name$/;"	v
threadCount	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^private var threadCount = 0$/;"	v
threadCount	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^private var threadCount = 0$/;"	v
threadCount	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^private var threadCount = 0$/;"	v
threadCount	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^private var threadCount = 0$/;"	v
threads	server/bin/main/org/javacs/kt/Main.kt	/^    val threads = Executors.newSingleThreadExecutor { Thread(it, "client") }$/;"	C
threads	server/src/main/kotlin/org/javacs/kt/Main.kt	/^    val threads = Executors.newSingleThreadExecutor { Thread(it, "client") }$/;"	C
time	shared/bin/main/org/javacs/kt/Logger.kt	/^        val time = if (logTime) "${Instant.now()} " else ""$/;"	C
time	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^        val time = if (logTime) "${Instant.now()} " else ""$/;"	C
timeout	.vscode/launch.json	/^            "timeout": 30000$/;"	n	object:configurations.1
title	scripts/utils/cli.py	/^def title(s, padding=2):$/;"	f
title	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun title(init: Title.() -> Unit) = initTag(Title(), init)$/;"	m
title	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun title(init: Title.() -> Unit) = initTag(Title(), init)$/;"	m
tmpFile	server/bin/main/org/javacs/kt/definition/GoToDefinition.kt	/^                    val tmpFile = cachedTempFiles[klsSourceURI] ?: run {$/;"	C
tmpFile	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^        val tmpFile = dir.createTempFile(name[0], ".${name[1]}")$/;"	C
tmpFile	server/src/main/kotlin/org/javacs/kt/definition/GoToDefinition.kt	/^                    val tmpFile = cachedTempFiles[klsSourceURI] ?: run {$/;"	C
tmpFile	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^        val tmpFile = dir.createTempFile(name[0], ".${name[1]}")$/;"	C
tmpScripts	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val tmpScripts = gradleScripts.map { gradleScriptToTempFile(it, deleteOnExit = false).toPath/;"	C
tmpScripts	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val tmpScripts = gradleScripts.map { gradleScriptToTempFile(it, deleteOnExit = false).toPath/;"	C
to	server/bin/test/org/javacs/kt/HoverTest.kt	/^        val to = "ResolveToFile.kt"$/;"	C
to	server/src/test/kotlin/org/javacs/kt/HoverTest.kt	/^        val to = "ResolveToFile.kt"$/;"	C
toFileURI	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun toFileURI(): URI = URI(uri.schemeSpecificPart)$/;"	m
toFileURI	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun toFileURI(): URI = URI(uri.schemeSpecificPart)$/;"	m
toJSONArray	server/bin/test/j2k/JavaJSONConverter.kt	/^    fun toJSONArray(list: MutableList<out T>): String {$/;"	m
toJSONArray	server/src/test/resources/j2k/JavaJSONConverter.java	/^    public String toJSONArray(List<? extends T> list) {$/;"	m	class:JavaJSONConverter
toJSONArray	server/src/test/resources/j2k/JavaJSONConverter.kt	/^    fun toJSONArray(list: MutableList<out T>): String {$/;"	m
toJarURL	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun toJarURL(): URL = URL("jar:${uri.schemeSpecificPart}")$/;"	m
toJarURL	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    private fun toJarURL(): URL = URL("jar:${uri.schemeSpecificPart}")$/;"	m
toParameter	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun toParameter(param: ValueParameterDescriptor): ParameterInformation {$/;"	m
toParameter	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun toParameter(param: ValueParameterDescriptor): ParameterInformation {$/;"	m
toSignature	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun toSignature(desc: CallableDescriptor): SignatureInformation {$/;"	m
toSignature	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^private fun toSignature(desc: CallableDescriptor): SignatureInformation {$/;"	m
toString	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    override fun toString(): String = uri.toString()$/;"	m
toString	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        override fun toString() = "Example Class"$/;"	m
toString	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        override fun toString(): String {$/;"	m
toString	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    override fun toString(): String = uri.toString()$/;"	m
toString	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        override fun toString() = "Example Class"$/;"	m
toString	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        override fun toString(): String {$/;"	m
toString	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override fun toString() = "$group:$artifact:$version"$/;"	m
toString	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    override fun toString() = "$group:$artifact:$version"$/;"	m
to_plugin_build	scripts/update_kt_version.py	/^def to_plugin_build(art_name):$/;"	f
toggleLineWrapping	shared/build/reports/tests/test/js/report.js	/^    function toggleLineWrapping() {$/;"	f
token	server/bin/main/org/javacs/kt/references/FindReferences.kt	/^                val token = OperatorConventions.UNARY_OPERATION_NAMES.inverse()[name] ?:$/;"	C
token	server/src/main/kotlin/org/javacs/kt/references/FindReferences.kt	/^                val token = OperatorConventions.UNARY_OPERATION_NAMES.inverse()[name] ?:$/;"	C
tokenTypeFunc	server/bin/test/completions/Enum.kt	/^fun tokenTypeFunc() {$/;"	m
tokenTypeFunc	server/src/test/resources/completions/Enum.kt	/^fun tokenTypeFunc() {$/;"	m
total	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^        val total = rt.totalMemory().toDouble() \/ 1000000.0$/;"	C
total	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^        val total = rt.totalMemory().toDouble() \/ 1000000.0$/;"	C
trace	server/bin/main/org/javacs/kt/Compiler.kt	/^        val trace = CliBindingTrace()$/;"	C
trace	server/bin/test/org/javacs/kt/OneFilePerformance.kt	/^            val trace = CliBindingTrace()$/;"	C
trace	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^        val trace = CliBindingTrace()$/;"	C
trace	server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt	/^            val trace = CliBindingTrace()$/;"	C
trace	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun trace(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.TRACE, ms/;"	m
trace	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun trace(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.TRACE, ms/;"	m
translated	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translated = block.statements.mapNotNull { it.translate(indentDelta = 1) }$/;"	C
translated	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translated = block.statements.mapNotNull { it.translate(indentDelta = 1) }$/;"	C
translatedArgList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArgList = expression.argumentList.translate()$/;"	C
translatedArgList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArgList = expression.argumentList.translate()$/;"	C
translatedArgs	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArgs = if (arrayDimensions.isEmpty()) {$/;"	C
translatedArgs	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArgs = if (arrayDimensions.isEmpty()) {$/;"	C
translatedArray	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArray = expression.arrayExpression.translate()$/;"	C
translatedArray	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedArray = expression.arrayExpression.translate()$/;"	C
translatedBody	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = ((statement.body?.containedStatements ?: emptySequence()) + sequenc/;"	C
translatedBody	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = (listOf(translatedCompanion) + translatedInstanceMembers)$/;"	C
translatedBody	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = method.body.translate().spacePrefixed$/;"	C
translatedBody	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = statement.body.translate()$/;"	C
translatedBody	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody: String = when (body) {$/;"	C
translatedBody	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = ((statement.body?.containedStatements ?: emptySequence()) + sequenc/;"	C
translatedBody	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = (listOf(translatedCompanion) + translatedInstanceMembers)$/;"	C
translatedBody	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = method.body.translate().spacePrefixed$/;"	C
translatedBody	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody = statement.body.translate()$/;"	C
translatedBody	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedBody: String = when (body) {$/;"	C
translatedCatches	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCatches = statement.catchBlocks.asSequence()$/;"	C
translatedCatches	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCatches = statement.catchBlocks.asSequence()$/;"	C
translatedCompanion	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCompanion = if (!staticMembers.isEmpty()) {$/;"	C
translatedCompanion	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCompanion = if (!staticMembers.isEmpty()) {$/;"	C
translatedCompanionBlock	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^            val translatedCompanionBlock = staticMembers$/;"	C
translatedCompanionBlock	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^            val translatedCompanionBlock = staticMembers$/;"	C
translatedCondition	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCondition = expression.condition.translate()$/;"	C
translatedCondition	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCondition = statement.assertCondition.translate()$/;"	C
translatedCondition	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCondition = expression.condition.translate()$/;"	C
translatedCondition	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedCondition = statement.assertCondition.translate()$/;"	C
translatedDescription	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedDescription = statement.assertDescription.translate()?.let { " { $it }" } /;"	C
translatedDescription	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedDescription = statement.assertDescription.translate()?.let { " { $it }" } /;"	C
translatedElse	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedElse = expression.elseExpression.translate()$/;"	C
translatedElse	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedElse = statement.elseBranch.translate()?.let { "else $it" }.spacePrefixed$/;"	C
translatedElse	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedElse = expression.elseExpression.translate()$/;"	C
translatedElse	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedElse = statement.elseBranch.translate()?.let { "else $it" }.spacePrefixed$/;"	C
translatedExtends	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedExtends = classParameter.extendsList.translate()$/;"	C
translatedExtends	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedExtends = classParameter.extendsList.translate()$/;"	C
translatedFinally	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedFinally = statement.finallyBlock.translate()?.let { " finally $it" } ?: ""$/;"	C
translatedFinally	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedFinally = statement.finallyBlock.translate()?.let { " finally $it" } ?: ""$/;"	C
translatedIf	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIf = "if (${statement.condition.translate()})${statement.thenBranch.transl/;"	C
translatedIf	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIf = "if (${statement.condition.translate()})${statement.thenBranch.transl/;"	C
translatedIndex	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIndex = expression.indexExpression.translate()$/;"	C
translatedIndex	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIndex = expression.indexExpression.translate()$/;"	C
translatedInitializer	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedInitializer = variable.initializer.translate()?.let { " = $it" } ?: ""$/;"	C
translatedInitializer	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedInitializer = variable.initializer.translate()?.let { " = $it" } ?: ""$/;"	C
translatedInstanceMembers	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedInstanceMembers = instanceMembers$/;"	C
translatedInstanceMembers	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedInstanceMembers = instanceMembers$/;"	C
translatedIterated	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIterated = statement.iteratedValue.translate()$/;"	C
translatedIterated	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedIterated = statement.iteratedValue.translate()$/;"	C
translatedKotlinCode	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    var translatedKotlinCode: String? = null$/;"	v
translatedKotlinCode	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    var translatedKotlinCode: String? = null$/;"	v
translatedLock	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedLock = statement.lockExpression.translate()?.let { "($it)" } ?: ""$/;"	C
translatedLock	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedLock = statement.lockExpression.translate()?.let { "($it)" } ?: ""$/;"	C
translatedParamList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParamList = method.parameterList.translate()$/;"	C
translatedParamList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParamList = method.parameterList.translate()$/;"	C
translatedParameter	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParameter = statement.iterationParameter.name$/;"	C
translatedParameter	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParameter = statement.iterationParameter.name$/;"	C
translatedParams	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParams: String = expression.parameterList.parameters$/;"	C
translatedParams	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedParams: String = expression.parameterList.parameters$/;"	C
translatedQualifier	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedQualifier = expression.qualifier.translate()?.let { "@$it" } ?: ""$/;"	C
translatedQualifier	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedQualifier = expression.qualifier.translate()?.let { "@$it" } ?: ""$/;"	C
translatedReturnType	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedReturnType = method.returnType?.translateType()$/;"	C
translatedReturnType	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedReturnType = method.returnType?.translateType()$/;"	C
translatedSuperTypes	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedSuperTypes = sequenceOf(aClass.extendsList.translate(), aClass.implementsL/;"	C
translatedSuperTypes	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedSuperTypes = sequenceOf(aClass.extendsList.translate(), aClass.implementsL/;"	C
translatedThen	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedThen = expression.thenExpression.translate()$/;"	C
translatedThen	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedThen = expression.thenExpression.translate()$/;"	C
translatedTryBlock	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedTryBlock = statement.tryBlock.translate()$/;"	C
translatedTryBlock	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedTryBlock = statement.tryBlock.translate()$/;"	C
translatedTypeArgs	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^        val translatedTypeArgs = classType.parameters.asSequence()$/;"	C
translatedTypeArgs	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^        val translatedTypeArgs = classType.parameters.asSequence()$/;"	C
translatedTypeParams	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedTypeParams = aClass.typeParameterList.translate()$/;"	C
translatedTypeParams	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val translatedTypeParams = aClass.typeParameterList.translate()$/;"	C
tryFindingLocalArtifactUsing	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun tryFindingLocalArtifactUsing(@Suppress("UNUSED_PARAMETER") group: String, artifact: /;"	m
tryFindingLocalArtifactUsing	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^private fun tryFindingLocalArtifactUsing(@Suppress("UNUSED_PARAMETER") group: String, artifact: /;"	m
tryReadContentOf	server/bin/main/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private fun tryReadContentOf(uri: KlsURI): String? = try {$/;"	m
tryReadContentOf	server/src/main/kotlin/org/javacs/kt/externalsources/JarClassContentProvider.kt	/^    private fun tryReadContentOf(uri: KlsURI): String? = try {$/;"	m
type	.vscode/launch.json	/^            "type": "java",$/;"	s	object:configurations.2
type	.vscode/launch.json	/^            "type": "java",$/;"	s	object:configurations.3
type	.vscode/launch.json	/^            "type": "kotlin",$/;"	s	object:configurations.0
type	.vscode/launch.json	/^            "type": "kotlin",$/;"	s	object:configurations.1
type	.vscode/tasks.json	/^            "type": "shell",$/;"	s	object:tasks.0
type	server/bin/main/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^        val type = file.typeAtPoint(dotParent.receiverExpression.startOffset) ?: return emptyLis/;"	C
type	server/bin/test/org/javacs/kt/CompiledFileTest.kt	/^        val type = compiledFile.typeAtPoint(87)!!$/;"	C
type	server/src/main/kotlin/org/javacs/kt/signaturehelp/SignatureHelp.kt	/^        val type = file.typeAtPoint(dotParent.receiverExpression.startOffset) ?: return emptyLis/;"	C
type	server/src/test/kotlin/org/javacs/kt/CompiledFileTest.kt	/^        val type = compiledFile.typeAtPoint(87)!!$/;"	C
type-alias	grammars/Kotlin.tmLanguage.json	/^		"type-alias": {$/;"	o	object:repository
type-annotation	grammars/Kotlin.tmLanguage.json	/^		"type-annotation": {$/;"	o	object:repository
type-parameter	grammars/Kotlin.tmLanguage.json	/^		"type-parameter": {$/;"	o	object:repository
typeAtPoint	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun typeAtPoint(cursor: Int): KotlinType? {$/;"	m
typeAtPoint	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun typeAtPoint(cursor: Int): KotlinType? {$/;"	m
typeHoverAt	server/bin/main/org/javacs/kt/hover/Hovers.kt	/^private fun typeHoverAt(file: CompiledFile, cursor: Int): Hover? {$/;"	m
typeHoverAt	server/src/main/kotlin/org/javacs/kt/hover/Hovers.kt	/^private fun typeHoverAt(file: CompiledFile, cursor: Int): Hover? {$/;"	m
typeOfExpression	server/bin/main/org/javacs/kt/CompiledFile.kt	/^    fun typeOfExpression(expression: KtExpression, scopeWithImports: LexicalScope): KotlinType? /;"	m
typeOfExpression	server/src/main/kotlin/org/javacs/kt/CompiledFile.kt	/^    fun typeOfExpression(expression: KtExpression, scopeWithImports: LexicalScope): KotlinType? /;"	m
ul	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        fun ul(init: UL.() -> Unit) = initTag(UL(), init)$/;"	m
ul	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        fun ul(init: UL.() -> Unit) = initTag(UL(), init)$/;"	m
ul	shared/build/reports/tests/test/css/base-style.css	/^ul {$/;"	s
ul.linkList	shared/build/reports/tests/test/css/style.css	/^ul.linkList {$/;"	c
ul.linkList li	shared/build/reports/tests/test/css/style.css	/^ul.linkList li {$/;"	s
ul.tabLinks	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks {$/;"	c
ul.tabLinks a	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks a {$/;"	s
ul.tabLinks li	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks li {$/;"	s
ul.tabLinks li h2	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks li h2 {$/;"	s
ul.tabLinks li.selected	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks li.selected {$/;"	c
ul.tabLinks li:hover	shared/build/reports/tests/test/css/base-style.css	/^ul.tabLinks li:hover {$/;"	s
unescaped-annotation	grammars/Kotlin.tmLanguage.json	/^		"unescaped-annotation": {$/;"	o	object:repository
unixCommand	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^private fun unixCommand(name: String) = findExecutableOnPath(name)$/;"	m
unixCommand	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^private fun unixCommand(name: String) = findExecutableOnPath(name)$/;"	m
updateCompilerConfiguration	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    fun updateCompilerConfiguration() {$/;"	m
updateCompilerConfiguration	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    fun updateCompilerConfiguration() {$/;"	m
updateConfiguration	server/bin/main/org/javacs/kt/Compiler.kt	/^    fun updateConfiguration(config: CompilerConfiguration) {$/;"	m
updateConfiguration	server/src/main/kotlin/org/javacs/kt/Compiler.kt	/^    fun updateConfiguration(config: CompilerConfiguration) {$/;"	m
updateExclusions	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private fun updateExclusions() {$/;"	m
updateExclusions	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private fun updateExclusions() {$/;"	m
upper	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val upper = match.groups[2]!!.value$/;"	C
upper	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val upper = match.groups[2]!!.value$/;"	C
uri	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^            val uri = parseURI(params.textDocument.uri)$/;"	C
uri	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val uri = parseURI(params.textDocument.uri)$/;"	C
uri	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^        val uri = parseURI(position.textDocument.uri)$/;"	C
uri	server/bin/main/org/javacs/kt/KotlinWorkspaceService.kt	/^            val uri = parseURI(change.uri)$/;"	C
uri	server/bin/main/org/javacs/kt/SourcePath.kt	/^        val uri: URI,$/;"	C
uri	server/bin/main/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^    val uri = diagnostic.psiFile.toPath().toUri()$/;"	C
uri	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^    val uri = file.toPath().toUri().toString()$/;"	C
uri	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun uri(relativePath: String) =$/;"	m
uri	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^            val uri = parseURI(params.textDocument.uri)$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val uri = parseURI(params.textDocument.uri)$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^        val uri = parseURI(position.textDocument.uri)$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/KotlinWorkspaceService.kt	/^            val uri = parseURI(change.uri)$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/SourcePath.kt	/^        val uri: URI,$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/diagnostic/ConvertDiagnostic.kt	/^    val uri = diagnostic.psiFile.toPath().toUri()$/;"	C
uri	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^    val uri = file.toPath().toUri().toString()$/;"	C
uri	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    fun uri(relativePath: String) =$/;"	m
uriContentProvider	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val uriContentProvider = URIContentProvider(JarClassContentProvider(config.externalS/;"	C
uriContentProvider	server/bin/main/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    private val uriContentProvider: URIContentProvider$/;"	C
uriContentProvider	server/bin/main/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val uriContentProvider: URIContentProvider$/;"	C
uriContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val uriContentProvider = URIContentProvider(JarClassContentProvider(config.externalS/;"	C
uriContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensionService.kt	/^    private val uriContentProvider: URIContentProvider$/;"	C
uriContentProvider	server/src/main/kotlin/org/javacs/kt/KotlinTextDocumentService.kt	/^    private val uriContentProvider: URIContentProvider$/;"	C
uris	server/src/test/kotlin/org/javacs/kt/DefinitionTest.kt	/^        val uris = definitions.map { it.uri }$/;"	C
uris	server/src/test/kotlin/org/javacs/kt/ReferencesTest.kt	/^        val uris = references?.map { it.uri }$/;"	C
useKlsScheme	server/bin/main/org/javacs/kt/Configuration.kt	/^    var useKlsScheme: Boolean = false,$/;"	v
useKlsScheme	server/src/main/kotlin/org/javacs/kt/Configuration.kt	/^    var useKlsScheme: Boolean = false,$/;"	v
user	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val user = User2("Alex", 1)$/;"	C
user	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val user = User3()$/;"	C
user	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val user = User4()$/;"	C
user	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val user = User5($/;"	C
user	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val user = getUser()$/;"	C
user	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val user = User2("Alex", 1)$/;"	C
user	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val user = User3()$/;"	C
user	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val user = User4()$/;"	C
user	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val user = User5($/;"	C
user	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val user = getUser()$/;"	C
value	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val value = expression.value$/;"	C
value	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^        val value = expression.value$/;"	C
valueParametersSnippet	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun valueParametersSnippet(parameters: List<ValueParameterDescriptor>) = parameters$/;"	m
valueParametersSnippet	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    private fun valueParametersSnippet(parameters: List<ValueParameterDescriptor>) = parameters$/;"	m
variable-declaration	grammars/Kotlin.tmLanguage.json	/^		"variable-declaration": {$/;"	o	object:repository
version	.vscode/launch.json	/^    "version": "0.2.0",$/;"	s
version	.vscode/tasks.json	/^    "version": "2.0.0",$/;"	s
version	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    private var version = 1$/;"	v
version	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    private var version = 1$/;"	v
version	shared/bin/main/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^                val version = file.parent.fileName.toString()$/;"	C
version	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val version: String,$/;"	C
version	shared/src/main/kotlin/org/javacs/kt/classpath/BackupClassPathResolver.kt	/^                val version = file.parent.fileName.toString()$/;"	C
version	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val version: String,$/;"	C
visible	server/bin/main/org/javacs/kt/completion/Completions.kt	/^        val visible = isDeclarationVisible(target, from)$/;"	C
visible	server/bin/main/org/javacs/kt/completion/Completions.kt	/^    val visible = matchesName.filter(isVisible(file, cursor))$/;"	C
visible	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^        val visible = isDeclarationVisible(target, from)$/;"	C
visible	server/src/main/kotlin/org/javacs/kt/completion/Completions.kt	/^    val visible = sorted.filter(isVisible(file, cursor))$/;"	C
visitAnnotation	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotation(annotation: PsiAnnotation) {$/;"	m
visitAnnotation	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotation(annotation: PsiAnnotation) {$/;"	m
visitAnnotationArrayInitializer	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationArrayInitializer(initializer: PsiArrayInitializerMemberValue) {$/;"	m
visitAnnotationArrayInitializer	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationArrayInitializer(initializer: PsiArrayInitializerMemberValue) {$/;"	m
visitAnnotationMethod	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationMethod(method: PsiAnnotationMethod) {$/;"	m
visitAnnotationMethod	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationMethod(method: PsiAnnotationMethod) {$/;"	m
visitAnnotationParameterList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationParameterList(list: PsiAnnotationParameterList) {$/;"	m
visitAnnotationParameterList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnnotationParameterList(list: PsiAnnotationParameterList) {$/;"	m
visitAnonymousClass	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnonymousClass(aClass: PsiAnonymousClass) {$/;"	m
visitAnonymousClass	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAnonymousClass(aClass: PsiAnonymousClass) {$/;"	m
visitArrayAccessExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitArrayAccessExpression(expression: PsiArrayAccessExpression) {$/;"	m
visitArrayAccessExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitArrayAccessExpression(expression: PsiArrayAccessExpression) {$/;"	m
visitArrayInitializerExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitArrayInitializerExpression(expression: PsiArrayInitializerExpression) {$/;"	m
visitArrayInitializerExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitArrayInitializerExpression(expression: PsiArrayInitializerExpression) {$/;"	m
visitArrayType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitArrayType(arrayType: PsiArrayType): String = when (try {$/;"	m
visitArrayType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitArrayType(arrayType: PsiArrayType): String = when (try {$/;"	m
visitAssertStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAssertStatement(statement: PsiAssertStatement) {$/;"	m
visitAssertStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAssertStatement(statement: PsiAssertStatement) {$/;"	m
visitAssignmentExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAssignmentExpression(expression: PsiAssignmentExpression) {$/;"	m
visitAssignmentExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitAssignmentExpression(expression: PsiAssignmentExpression) {$/;"	m
visitBinaryExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBinaryExpression(expression: PsiBinaryExpression) {$/;"	m
visitBinaryExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBinaryExpression(expression: PsiBinaryExpression) {$/;"	m
visitBlockStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBlockStatement(statement: PsiBlockStatement) {$/;"	m
visitBlockStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBlockStatement(statement: PsiBlockStatement) {$/;"	m
visitBreakStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBreakStatement(statement: PsiBreakStatement) {$/;"	m
visitBreakStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitBreakStatement(statement: PsiBreakStatement) {$/;"	m
visitCallExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCallExpression(callExpression: PsiCallExpression) {$/;"	m
visitCallExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCallExpression(callExpression: PsiCallExpression) {$/;"	m
visitCapturedWildcardType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitCapturedWildcardType(capturedWildcardType: PsiCapturedWildcardType): Strin/;"	m
visitCapturedWildcardType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitCapturedWildcardType(capturedWildcardType: PsiCapturedWildcardType): Strin/;"	m
visitCatchSection	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCatchSection(section: PsiCatchSection) {$/;"	m
visitCatchSection	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCatchSection(section: PsiCatchSection) {$/;"	m
visitClass	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClass(aClass: PsiClass) {$/;"	m
visitClass	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClass(aClass: PsiClass) {$/;"	m
visitClassDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitClassDescriptor(desc: ClassDescriptor, nothing: Unit?): CompletionItem {$/;"	m
visitClassDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitClassDescriptor(desc: ClassDescriptor, nothing: Unit?): CompletionItem {$/;"	m
visitClassInitializer	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClassInitializer(initializer: PsiClassInitializer) {$/;"	m
visitClassInitializer	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClassInitializer(initializer: PsiClassInitializer) {$/;"	m
visitClassObjectAccessExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClassObjectAccessExpression(expression: PsiClassObjectAccessExpression) {$/;"	m
visitClassObjectAccessExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitClassObjectAccessExpression(expression: PsiClassObjectAccessExpression) {$/;"	m
visitClassType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitClassType(classType: PsiClassType): String {$/;"	m
visitClassType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitClassType(classType: PsiClassType): String {$/;"	m
visitCodeBlock	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCodeBlock(block: PsiCodeBlock) {$/;"	m
visitCodeBlock	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCodeBlock(block: PsiCodeBlock) {$/;"	m
visitCodeFragment	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCodeFragment(codeFragment: JavaCodeFragment) {$/;"	m
visitCodeFragment	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitCodeFragment(codeFragment: JavaCodeFragment) {$/;"	m
visitConditionalExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitConditionalExpression(expression: PsiConditionalExpression) {$/;"	m
visitConditionalExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitConditionalExpression(expression: PsiConditionalExpression) {$/;"	m
visitConstructorDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitConstructorDescriptor(desc: ConstructorDescriptor, nothing: Unit?): Comple/;"	m
visitConstructorDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitConstructorDescriptor(desc: ConstructorDescriptor, nothing: Unit?): Comple/;"	m
visitContinueStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitContinueStatement(statement: PsiContinueStatement) {$/;"	m
visitContinueStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitContinueStatement(statement: PsiContinueStatement) {$/;"	m
visitDeclarationStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDeclarationStatement(statement: PsiDeclarationStatement) {$/;"	m
visitDeclarationStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDeclarationStatement(statement: PsiDeclarationStatement) {$/;"	m
visitDiamondType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitDiamondType(diamondType: PsiDiamondType): String {$/;"	m
visitDiamondType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitDiamondType(diamondType: PsiDiamondType): String {$/;"	m
visitDisjunctionType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitDisjunctionType(disjunctionType: PsiDisjunctionType): String {$/;"	m
visitDisjunctionType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitDisjunctionType(disjunctionType: PsiDisjunctionType): String {$/;"	m
visitDoWhileStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDoWhileStatement(statement: PsiDoWhileStatement) {$/;"	m
visitDoWhileStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDoWhileStatement(statement: PsiDoWhileStatement) {$/;"	m
visitDocComment	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocComment(comment: PsiDocComment) {$/;"	m
visitDocComment	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocComment(comment: PsiDocComment) {$/;"	m
visitDocTag	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocTag(tag: PsiDocTag) {$/;"	m
visitDocTag	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocTag(tag: PsiDocTag) {$/;"	m
visitDocTagValue	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocTagValue(value: PsiDocTagValue) {$/;"	m
visitDocTagValue	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocTagValue(value: PsiDocTagValue) {$/;"	m
visitDocToken	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocToken(token: PsiDocToken) {$/;"	m
visitDocToken	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitDocToken(token: PsiDocToken) {$/;"	m
visitEllipsisType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitEllipsisType(ellipsisType: PsiEllipsisType): String {$/;"	m
visitEllipsisType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitEllipsisType(ellipsisType: PsiEllipsisType): String {$/;"	m
visitEmptyStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEmptyStatement(statement: PsiEmptyStatement) {$/;"	m
visitEmptyStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEmptyStatement(statement: PsiEmptyStatement) {$/;"	m
visitEnumConstant	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEnumConstant(enumConstant: PsiEnumConstant) {$/;"	m
visitEnumConstant	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEnumConstant(enumConstant: PsiEnumConstant) {$/;"	m
visitEnumConstantInitializer	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEnumConstantInitializer(enumConstantInitializer: PsiEnumConstantInitialize/;"	m
visitEnumConstantInitializer	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitEnumConstantInitializer(enumConstantInitializer: PsiEnumConstantInitialize/;"	m
visitExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpression(expression: PsiExpression) {$/;"	m
visitExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpression(expression: PsiExpression) {$/;"	m
visitExpressionList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionList(list: PsiExpressionList) {$/;"	m
visitExpressionList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionList(list: PsiExpressionList) {$/;"	m
visitExpressionListStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionListStatement(statement: PsiExpressionListStatement) {$/;"	m
visitExpressionListStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionListStatement(statement: PsiExpressionListStatement) {$/;"	m
visitExpressionStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionStatement(statement: PsiExpressionStatement) {$/;"	m
visitExpressionStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitExpressionStatement(statement: PsiExpressionStatement) {$/;"	m
visitField	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitField(field: PsiField) {$/;"	m
visitField	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitField(field: PsiField) {$/;"	m
visitForStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitForStatement(statement: PsiForStatement) {$/;"	m
visitForStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitForStatement(statement: PsiForStatement) {$/;"	m
visitForeachStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitForeachStatement(statement: PsiForeachStatement) {$/;"	m
visitForeachStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitForeachStatement(statement: PsiForeachStatement) {$/;"	m
visitFunctionDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitFunctionDescriptor(desc: FunctionDescriptor, nothing: Unit?): CompletionIt/;"	m
visitFunctionDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitFunctionDescriptor(desc: FunctionDescriptor, nothing: Unit?): CompletionIt/;"	m
visitIdentifier	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitIdentifier(identifier: PsiIdentifier) {$/;"	m
visitIdentifier	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitIdentifier(identifier: PsiIdentifier) {$/;"	m
visitIfStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitIfStatement(statement: PsiIfStatement) {$/;"	m
visitIfStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitIfStatement(statement: PsiIfStatement) {$/;"	m
visitImplicitVariable	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImplicitVariable(variable: ImplicitVariable) {$/;"	m
visitImplicitVariable	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImplicitVariable(variable: ImplicitVariable) {$/;"	m
visitImportList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportList(list: PsiImportList) {$/;"	m
visitImportList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportList(list: PsiImportList) {$/;"	m
visitImportStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStatement(statement: PsiImportStatement) {$/;"	m
visitImportStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStatement(statement: PsiImportStatement) {$/;"	m
visitImportStaticReferenceElement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStaticReferenceElement(reference: PsiImportStaticReferenceElement) {$/;"	m
visitImportStaticReferenceElement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStaticReferenceElement(reference: PsiImportStaticReferenceElement) {$/;"	m
visitImportStaticStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStaticStatement(statement: PsiImportStaticStatement) {$/;"	m
visitImportStaticStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitImportStaticStatement(statement: PsiImportStaticStatement) {$/;"	m
visitInlineDocTag	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitInlineDocTag(tag: PsiInlineDocTag) {$/;"	m
visitInlineDocTag	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitInlineDocTag(tag: PsiInlineDocTag) {$/;"	m
visitInstanceOfExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitInstanceOfExpression(expression: PsiInstanceOfExpression) {$/;"	m
visitInstanceOfExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitInstanceOfExpression(expression: PsiInstanceOfExpression) {$/;"	m
visitIntersectionType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitIntersectionType(intersectionType: PsiIntersectionType): String {$/;"	m
visitIntersectionType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitIntersectionType(intersectionType: PsiIntersectionType): String {$/;"	m
visitJavaFile	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitJavaFile(file: PsiJavaFile) {$/;"	m
visitJavaFile	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitJavaFile(file: PsiJavaFile) {$/;"	m
visitJavaToken	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitJavaToken(token: PsiJavaToken) {$/;"	m
visitJavaToken	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitJavaToken(token: PsiJavaToken) {$/;"	m
visitKeyword	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitKeyword(keyword: PsiKeyword) {$/;"	m
visitKeyword	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitKeyword(keyword: PsiKeyword) {$/;"	m
visitLabeledStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLabeledStatement(statement: PsiLabeledStatement) {$/;"	m
visitLabeledStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLabeledStatement(statement: PsiLabeledStatement) {$/;"	m
visitLambdaExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLambdaExpression(expression: PsiLambdaExpression) {$/;"	m
visitLambdaExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLambdaExpression(expression: PsiLambdaExpression) {$/;"	m
visitLambdaExpressionType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitLambdaExpressionType(lambdaExpressionType: PsiLambdaExpressionType): Strin/;"	m
visitLambdaExpressionType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitLambdaExpressionType(lambdaExpressionType: PsiLambdaExpressionType): Strin/;"	m
visitLiteralExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLiteralExpression(expression: PsiLiteralExpression) {$/;"	m
visitLiteralExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLiteralExpression(expression: PsiLiteralExpression) {$/;"	m
visitLocalVariable	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLocalVariable(variable: PsiLocalVariable) {$/;"	m
visitLocalVariable	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitLocalVariable(variable: PsiLocalVariable) {$/;"	m
visitMethod	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethod(method: PsiMethod) {$/;"	m
visitMethod	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethod(method: PsiMethod) {$/;"	m
visitMethodCallExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethodCallExpression(expression: PsiMethodCallExpression) {$/;"	m
visitMethodCallExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethodCallExpression(expression: PsiMethodCallExpression) {$/;"	m
visitMethodReferenceExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethodReferenceExpression(expression: PsiMethodReferenceExpression) {$/;"	m
visitMethodReferenceExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitMethodReferenceExpression(expression: PsiMethodReferenceExpression) {$/;"	m
visitMethodReferenceType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitMethodReferenceType(methodReferenceType: PsiMethodReferenceType): String {$/;"	m
visitMethodReferenceType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitMethodReferenceType(methodReferenceType: PsiMethodReferenceType): String {$/;"	m
visitModifierList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModifierList(list: PsiModifierList) {$/;"	m
visitModifierList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModifierList(list: PsiModifierList) {$/;"	m
visitModule	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModule(module: PsiJavaModule) {$/;"	m
visitModule	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModule(module: PsiJavaModule) {$/;"	m
visitModuleDeclaration	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitModuleDeclaration(desc: ModuleDescriptor, nothing: Unit?): CompletionItem /;"	m
visitModuleDeclaration	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitModuleDeclaration(desc: ModuleDescriptor, nothing: Unit?): CompletionItem /;"	m
visitModuleReferenceElement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModuleReferenceElement(refElement: PsiJavaModuleReferenceElement) {$/;"	m
visitModuleReferenceElement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModuleReferenceElement(refElement: PsiJavaModuleReferenceElement) {$/;"	m
visitModuleStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModuleStatement(statement: PsiStatement) {$/;"	m
visitModuleStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitModuleStatement(statement: PsiStatement) {$/;"	m
visitNameValuePair	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitNameValuePair(pair: PsiNameValuePair) {$/;"	m
visitNameValuePair	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitNameValuePair(pair: PsiNameValuePair) {$/;"	m
visitNewExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitNewExpression(expression: PsiNewExpression) {$/;"	m
visitNewExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitNewExpression(expression: PsiNewExpression) {$/;"	m
visitPackage	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackage(aPackage: PsiPackage) {$/;"	m
visitPackage	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackage(aPackage: PsiPackage) {$/;"	m
visitPackageAccessibilityStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackageAccessibilityStatement(statement: PsiPackageAccessibilityStatement)/;"	m
visitPackageAccessibilityStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackageAccessibilityStatement(statement: PsiPackageAccessibilityStatement)/;"	m
visitPackageFragmentDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPackageFragmentDescriptor(desc: PackageFragmentDescriptor, nothing: Unit?)/;"	m
visitPackageFragmentDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPackageFragmentDescriptor(desc: PackageFragmentDescriptor, nothing: Unit?)/;"	m
visitPackageStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackageStatement(statement: PsiPackageStatement) {$/;"	m
visitPackageStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPackageStatement(statement: PsiPackageStatement) {$/;"	m
visitPackageViewDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPackageViewDescriptor(desc: PackageViewDescriptor, nothing: Unit?): Comple/;"	m
visitPackageViewDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPackageViewDescriptor(desc: PackageViewDescriptor, nothing: Unit?): Comple/;"	m
visitParameter	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParameter(parameter: PsiParameter) {$/;"	m
visitParameter	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParameter(parameter: PsiParameter) {$/;"	m
visitParameterList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParameterList(list: PsiParameterList) {$/;"	m
visitParameterList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParameterList(list: PsiParameterList) {$/;"	m
visitParenthesizedExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParenthesizedExpression(expression: PsiParenthesizedExpression) {$/;"	m
visitParenthesizedExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitParenthesizedExpression(expression: PsiParenthesizedExpression) {$/;"	m
visitPolyadicExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPolyadicExpression(expression: PsiPolyadicExpression) {$/;"	m
visitPolyadicExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPolyadicExpression(expression: PsiPolyadicExpression) {$/;"	m
visitPostfixExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPostfixExpression(expression: PsiPostfixExpression) {$/;"	m
visitPostfixExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPostfixExpression(expression: PsiPostfixExpression) {$/;"	m
visitPrefixExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPrefixExpression(expression: PsiPrefixExpression) {$/;"	m
visitPrefixExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitPrefixExpression(expression: PsiPrefixExpression) {$/;"	m
visitPrimitiveType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitPrimitiveType(primitiveType: PsiPrimitiveType): String = when (primitiveTy/;"	m
visitPrimitiveType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitPrimitiveType(primitiveType: PsiPrimitiveType): String = when (primitiveTy/;"	m
visitPropertyDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertyDescriptor(desc: PropertyDescriptor, nothing: Unit?): CompletionIt/;"	m
visitPropertyDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertyDescriptor(desc: PropertyDescriptor, nothing: Unit?): CompletionIt/;"	m
visitPropertyGetterDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertyGetterDescriptor(desc: PropertyGetterDescriptor, nothing: Unit?): /;"	m
visitPropertyGetterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertyGetterDescriptor(desc: PropertyGetterDescriptor, nothing: Unit?): /;"	m
visitPropertySetterDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertySetterDescriptor(desc: PropertySetterDescriptor, nothing: Unit?): /;"	m
visitPropertySetterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitPropertySetterDescriptor(desc: PropertySetterDescriptor, nothing: Unit?): /;"	m
visitProvidesStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitProvidesStatement(statement: PsiProvidesStatement) {$/;"	m
visitProvidesStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitProvidesStatement(statement: PsiProvidesStatement) {$/;"	m
visitReceiverParameter	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReceiverParameter(parameter: PsiReceiverParameter) {$/;"	m
visitReceiverParameter	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReceiverParameter(parameter: PsiReceiverParameter) {$/;"	m
visitReceiverParameterDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitReceiverParameterDescriptor(desc: ReceiverParameterDescriptor, nothing: Un/;"	m
visitReceiverParameterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitReceiverParameterDescriptor(desc: ReceiverParameterDescriptor, nothing: Un/;"	m
visitReferenceElement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceElement(reference: PsiJavaCodeReferenceElement) {$/;"	m
visitReferenceElement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceElement(reference: PsiJavaCodeReferenceElement) {$/;"	m
visitReferenceExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceExpression(expression: PsiReferenceExpression) {$/;"	m
visitReferenceExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceExpression(expression: PsiReferenceExpression) {$/;"	m
visitReferenceList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceList(list: PsiReferenceList) {$/;"	m
visitReferenceList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceList(list: PsiReferenceList) {$/;"	m
visitReferenceParameterList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceParameterList(list: PsiReferenceParameterList) {$/;"	m
visitReferenceParameterList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReferenceParameterList(list: PsiReferenceParameterList) {$/;"	m
visitRequiresStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitRequiresStatement(statement: PsiRequiresStatement) {$/;"	m
visitRequiresStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitRequiresStatement(statement: PsiRequiresStatement) {$/;"	m
visitResourceExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceExpression(expression: PsiResourceExpression) {$/;"	m
visitResourceExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceExpression(expression: PsiResourceExpression) {$/;"	m
visitResourceList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceList(resourceList: PsiResourceList) {$/;"	m
visitResourceList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceList(resourceList: PsiResourceList) {$/;"	m
visitResourceVariable	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceVariable(variable: PsiResourceVariable) {$/;"	m
visitResourceVariable	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitResourceVariable(variable: PsiResourceVariable) {$/;"	m
visitReturnStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReturnStatement(statement: PsiReturnStatement) {$/;"	m
visitReturnStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitReturnStatement(statement: PsiReturnStatement) {$/;"	m
visitScriptDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitScriptDescriptor(desc: ScriptDescriptor, nothing: Unit?): CompletionItem {$/;"	m
visitScriptDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitScriptDescriptor(desc: ScriptDescriptor, nothing: Unit?): CompletionItem {$/;"	m
visitStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitStatement(statement: PsiStatement) {$/;"	m
visitStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitStatement(statement: PsiStatement) {$/;"	m
visitSuperExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSuperExpression(expression: PsiSuperExpression) {$/;"	m
visitSuperExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSuperExpression(expression: PsiSuperExpression) {$/;"	m
visitSwitchExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchExpression(expression: PsiSwitchExpression) {$/;"	m
visitSwitchExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchExpression(expression: PsiSwitchExpression) {$/;"	m
visitSwitchLabelStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchLabelStatement(statement: PsiSwitchLabelStatement) {$/;"	m
visitSwitchLabelStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchLabelStatement(statement: PsiSwitchLabelStatement) {$/;"	m
visitSwitchLabeledRuleStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchLabeledRuleStatement(statement: PsiSwitchLabeledRuleStatement) {$/;"	m
visitSwitchLabeledRuleStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchLabeledRuleStatement(statement: PsiSwitchLabeledRuleStatement) {$/;"	m
visitSwitchStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchStatement(statement: PsiSwitchStatement) {$/;"	m
visitSwitchStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSwitchStatement(statement: PsiSwitchStatement) {$/;"	m
visitSynchronizedStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSynchronizedStatement(statement: PsiSynchronizedStatement) {$/;"	m
visitSynchronizedStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitSynchronizedStatement(statement: PsiSynchronizedStatement) {$/;"	m
visitThisExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitThisExpression(expression: PsiThisExpression) {$/;"	m
visitThisExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitThisExpression(expression: PsiThisExpression) {$/;"	m
visitThrowStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitThrowStatement(statement: PsiThrowStatement) {$/;"	m
visitThrowStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitThrowStatement(statement: PsiThrowStatement) {$/;"	m
visitTryStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTryStatement(statement: PsiTryStatement) {$/;"	m
visitTryStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTryStatement(statement: PsiTryStatement) {$/;"	m
visitType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitType(type: PsiType): String {$/;"	m
visitType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitType(type: PsiType): String {$/;"	m
visitTypeAliasDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitTypeAliasDescriptor(desc: TypeAliasDescriptor, nothing: Unit?): Completion/;"	m
visitTypeAliasDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitTypeAliasDescriptor(desc: TypeAliasDescriptor, nothing: Unit?): Completion/;"	m
visitTypeCastExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeCastExpression(expression: PsiTypeCastExpression) {$/;"	m
visitTypeCastExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeCastExpression(expression: PsiTypeCastExpression) {$/;"	m
visitTypeElement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeElement(type: PsiTypeElement) {$/;"	m
visitTypeElement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeElement(type: PsiTypeElement) {$/;"	m
visitTypeParameter	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeParameter(classParameter: PsiTypeParameter) {$/;"	m
visitTypeParameter	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeParameter(classParameter: PsiTypeParameter) {$/;"	m
visitTypeParameterDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitTypeParameterDescriptor(desc: TypeParameterDescriptor, nothing: Unit?): Co/;"	m
visitTypeParameterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitTypeParameterDescriptor(desc: TypeParameterDescriptor, nothing: Unit?): Co/;"	m
visitTypeParameterList	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeParameterList(list: PsiTypeParameterList) {$/;"	m
visitTypeParameterList	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitTypeParameterList(list: PsiTypeParameterList) {$/;"	m
visitUnaryExpression	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitUnaryExpression(expression: PsiUnaryExpression) {$/;"	m
visitUnaryExpression	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitUnaryExpression(expression: PsiUnaryExpression) {$/;"	m
visitUsesStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitUsesStatement(statement: PsiUsesStatement) {$/;"	m
visitUsesStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitUsesStatement(statement: PsiUsesStatement) {$/;"	m
visitValueParameterDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitValueParameterDescriptor(desc: ValueParameterDescriptor, nothing: Unit?): /;"	m
visitValueParameterDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitValueParameterDescriptor(desc: ValueParameterDescriptor, nothing: Unit?): /;"	m
visitVariable	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitVariable(variable: PsiVariable) {$/;"	m
visitVariable	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitVariable(variable: PsiVariable) {$/;"	m
visitVariableDescriptor	server/bin/main/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitVariableDescriptor(desc: VariableDescriptor, nothing: Unit?): CompletionIt/;"	m
visitVariableDescriptor	server/src/main/kotlin/org/javacs/kt/completion/RenderCompletionItem.kt	/^    override fun visitVariableDescriptor(desc: VariableDescriptor, nothing: Unit?): CompletionIt/;"	m
visitWhileStatement	server/bin/main/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitWhileStatement(statement: PsiWhileStatement) {$/;"	m
visitWhileStatement	server/src/main/kotlin/org/javacs/kt/j2k/JavaElementConverter.kt	/^    override fun visitWhileStatement(statement: PsiWhileStatement) {$/;"	m
visitWildcardType	server/bin/main/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitWildcardType(wildcardType: PsiWildcardType): String =$/;"	m
visitWildcardType	server/src/main/kotlin/org/javacs/kt/j2k/JavaTypeConverter.kt	/^    override fun visitWildcardType(wildcardType: PsiWildcardType): String =$/;"	m
visited	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val visited = hashSetOf<Point>()$/;"	C
visited	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val visited = hashSetOf<Point>()$/;"	C
waitForPendingTask	shared/bin/main/org/javacs/kt/util/Debouncer.kt	/^    fun waitForPendingTask() {$/;"	m
waitForPendingTask	shared/src/main/kotlin/org/javacs/kt/util/Debouncer.kt	/^    fun waitForPendingTask() {$/;"	m
walkIncluded	shared/bin/main/org/javacs/kt/SourceExclusions.kt	/^    fun walkIncluded(): Sequence<Path> = workspaceRoots.asSequence().flatMap { root ->$/;"	m
walkIncluded	shared/src/main/kotlin/org/javacs/kt/SourceExclusions.kt	/^    fun walkIncluded(): Sequence<Path> = workspaceRoots.asSequence().flatMap { root ->$/;"	m
walkThroughMaze	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^    fun walkThroughMaze(str: String) {$/;"	m
walkThroughMaze	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^    fun walkThroughMaze(str: String) {$/;"	m
walls	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val walls: Array<BooleanArray>,$/;"	C
walls	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val walls: Array<BooleanArray>,$/;"	C
warn	gradlew	/^warn () {$/;"	f
warn	server/bin/test/additionalWorkspace/gradlew	/^warn () {$/;"	f
warn	server/build/install/server/bin/kotlin-language-server	/^warn () {$/;"	f
warn	server/build/scripts/kotlin-language-server	/^warn () {$/;"	f
warn	server/src/test/resources/additionalWorkspace/gradlew	/^warn () {$/;"	f
warn	shared/bin/main/org/javacs/kt/Logger.kt	/^    fun warn(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.WARN, msg,/;"	m
warn	shared/src/main/kotlin/org/javacs/kt/Logger.kt	/^    fun warn(msg: String, vararg placeholders: Any?) = logWithPlaceholdersAt(LogLevel.WARN, msg,/;"	m
width	server/bin/test/formatting/NonFormatted.kt	/^val width:Int=3$/;"	C
width	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val width: Int, val height: Int,$/;"	C
width	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val width: Int,$/;"	C
width	server/bin/test/org/javacs/kt/FormattingTest.kt	/^    val width: Int = 3,$/;"	C
width	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^    val width: Int = 3,$/;"	C
width	server/src/test/resources/formatting/NonFormatted.kt	/^val width:Int=3$/;"	C
width	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val width: Int, val height: Int,$/;"	C
width	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val width: Int,$/;"	C
win9xME_args	gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args	server/bin/test/additionalWorkspace/gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args_slurp	gradlew.bat	/^:win9xME_args_slurp$/;"	l
win9xME_args_slurp	server/bin/test/additionalWorkspace/gradlew.bat	/^:win9xME_args_slurp$/;"	l
win9xME_args_slurp	server/src/test/resources/additionalWorkspace/gradlew.bat	/^:win9xME_args_slurp$/;"	l
winCompatiblePathOf	shared/bin/main/org/javacs/kt/util/Utils.kt	/^fun winCompatiblePathOf(path: String): Path {$/;"	m
winCompatiblePathOf	shared/src/main/kotlin/org/javacs/kt/util/Utils.kt	/^fun winCompatiblePathOf(path: String): Path {$/;"	m
window	server/bin/test/formatting/NonFormatted.kt	/^    val window   = "Window"$/;"	C
window	server/bin/test/org/javacs/kt/FormattingTest.kt	/^    val window = "Window"$/;"	C
window	server/src/test/kotlin/org/javacs/kt/FormattingTest.kt	/^    val window = "Window"$/;"	C
window	server/src/test/resources/formatting/NonFormatted.kt	/^    val window   = "Window"$/;"	C
windowsCommand	shared/bin/main/org/javacs/kt/util/ShellPathUtils.kt	/^private fun windowsCommand(name: String) =$/;"	m
windowsCommand	shared/src/main/kotlin/org/javacs/kt/util/ShellPathUtils.kt	/^private fun windowsCommand(name: String) =$/;"	m
withFileExtension	server/bin/main/org/javacs/kt/externalsources/KlsURI.kt	/^    fun withFileExtension(newExtension: String): KlsURI {$/;"	m
withFileExtension	server/src/main/kotlin/org/javacs/kt/externalsources/KlsURI.kt	/^    fun withFileExtension(newExtension: String): KlsURI {$/;"	m
workerThread	shared/bin/main/org/javacs/kt/util/AsyncExecutor.kt	/^	private val workerThread = Executors.newSingleThreadExecutor { Thread(it, "async${threadCount++/;"	C
workerThread	shared/src/main/kotlin/org/javacs/kt/util/AsyncExecutor.kt	/^	private val workerThread = Executors.newSingleThreadExecutor { Thread(it, "async${threadCount++/;"	C
workingDir	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    private val workingDir: Path? = null$/;"	C
workingDir	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^    private val workingDir: Path? = null$/;"	C
workingDirectory	shared/bin/main/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val workingDirectory = pom.toAbsolutePath().parent$/;"	C
workingDirectory	shared/bin/main/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val workingDirectory = workingDir?.toFile() ?: script.toAbsolutePath().parent.toFile()$/;"	C
workingDirectory	shared/src/main/kotlin/org/javacs/kt/classpath/MavenClassPathResolver.kt	/^    val workingDirectory = pom.toAbsolutePath().parent$/;"	C
workingDirectory	shared/src/main/kotlin/org/javacs/kt/classpath/ShellClassPathResolver.kt	/^        val workingDirectory = workingDir?.toFile() ?: script.toAbsolutePath().parent.toFile()$/;"	C
workspaceResolvers	shared/bin/main/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun workspaceResolvers(workspaceRoot: Path): Sequence<ClassPathResolver> {$/;"	m
workspaceResolvers	shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt	/^private fun workspaceResolvers(workspaceRoot: Path): Sequence<ClassPathResolver> {$/;"	m
workspaceRoot	server/bin/test/org/javacs/kt/ClassPathTest.kt	/^        val workspaceRoot = testResourcesRoot().resolve("additionalWorkspace")$/;"	C
workspaceRoot	server/bin/test/org/javacs/kt/LanguageServerTestFixture.kt	/^    val workspaceRoot = absoluteWorkspaceRoot(relativeWorkspaceRoot)$/;"	C
workspaceRoot	server/src/test/kotlin/org/javacs/kt/ClassPathTest.kt	/^        val workspaceRoot = testResourcesRoot().resolve("additionalWorkspace")$/;"	C
workspaceRoot	server/src/test/kotlin/org/javacs/kt/LanguageServerTestFixture.kt	/^    val workspaceRoot = absoluteWorkspaceRoot(relativeWorkspaceRoot)$/;"	C
workspaceRoots	server/bin/main/org/javacs/kt/CompilerClassPath.kt	/^    private val workspaceRoots = mutableSetOf<Path>()$/;"	C
workspaceRoots	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    private val workspaceRoots = mutableSetOf<Path>()$/;"	C
workspaceRoots	server/src/main/kotlin/org/javacs/kt/CompilerClassPath.kt	/^    private val workspaceRoots = mutableSetOf<Path>()$/;"	C
workspaceRoots	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    private val workspaceRoots = mutableSetOf<Path>()$/;"	C
workspaceSymbols	server/bin/main/org/javacs/kt/symbols/Symbols.kt	/^fun workspaceSymbols(query: String, sp: SourcePath): List<SymbolInformation> =$/;"	m
workspaceSymbols	server/src/main/kotlin/org/javacs/kt/symbols/Symbols.kt	/^fun workspaceSymbols(query: String, sp: SourcePath): List<SymbolInformation> =$/;"	m
workspaces	server/bin/main/org/javacs/kt/KotlinLanguageServer.kt	/^    private val workspaces = KotlinWorkspaceService(sourceFiles, sourcePath, classPath, textDocu/;"	C
workspaces	server/src/main/kotlin/org/javacs/kt/KotlinLanguageServer.kt	/^    private val workspaces = KotlinWorkspaceService(sourceFiles, sourcePath, classPath, textDocu/;"	C
wrapWithStdlib	shared/bin/main/org/javacs/kt/classpath/WithStdlibResolver.kt	/^private fun wrapWithStdlib(paths: Set<Path>): Set<Path> {$/;"	m
wrapWithStdlib	shared/src/main/kotlin/org/javacs/kt/classpath/WithStdlibResolver.kt	/^private fun wrapWithStdlib(paths: Set<Path>): Set<Path> {$/;"	m
wrapper	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val wrapper = workspace.resolve(wrapperName).toAbsolutePath()$/;"	C
wrapper	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val wrapper = workspace.resolve(wrapperName).toAbsolutePath()$/;"	C
wrapperName	shared/bin/main/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val wrapperName = if (isOSWindows()) "gradlew.bat" else "gradlew"$/;"	C
wrapperName	shared/src/main/kotlin/org/javacs/kt/classpath/GradleClassPathResolver.kt	/^    val wrapperName = if (isOSWindows()) "gradlew.bat" else "gradlew"$/;"	C
write	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun write(buf: ByteArray, off: Int, len: Int) {$/;"	m
write	shared/bin/main/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun write(c: Int) = delegate((c.toChar()).toString())$/;"	m
write	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun write(buf: ByteArray, off: Int, len: Int) {$/;"	m
write	shared/src/main/kotlin/org/javacs/kt/util/DelegatePrintStream.kt	/^	override fun write(c: Int) = delegate((c.toChar()).toString())$/;"	m
write_line	scripts/utils/properties.py	/^    def write_line(self, index, content):$/;"	m	class:PropertiesFile
writer	server/bin/main/org/javacs/kt/SourceFiles.kt	/^    val writer = StringWriter()$/;"	C
writer	server/src/main/kotlin/org/javacs/kt/SourceFiles.kt	/^    val writer = StringWriter()$/;"	C
x	server/bin/test/compiledFile/CompiledFileExample.kt	/^        val x = 1$/;"	C
x	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val x = parseInt(args[0])$/;"	C
x	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val x = args[0].toInt()$/;"	C
x	server/bin/test/references/ReferenceGetSetValue.kt	/^    var x: Int by ReferenceGetSetValue()$/;"	v
x	server/src/test/resources/compiledFile/CompiledFileExample.kt	/^        val x = 1$/;"	C
x	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val x = parseInt(args[0])$/;"	C
x	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val x = args[0].toInt()$/;"	C
x	server/src/test/resources/references/ReferenceGetSetValue.kt	/^    var x: Int by ReferenceGetSetValue()$/;"	v
y	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^            val y = parseInt(args[1])$/;"	C
y	server/bin/test/kotlinCompilerPerformance/BigFile.kt	/^        val y = 10$/;"	C
y	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^            val y = parseInt(args[1])$/;"	C
y	server/src/test/resources/kotlinCompilerPerformance/BigFile.kt	/^        val y = 10$/;"	C
yetAnotherFun	images/Example.kt	/^fun yetAnotherFun() = example()/;"	m
zipStoreBase	gradle/wrapper/gradle-wrapper.properties	/^zipStoreBase=GRADLE_USER_HOME$/;"	k
zipStoreBase	server/bin/test/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^zipStoreBase=GRADLE_USER_HOME$/;"	k
zipStoreBase	server/src/test/resources/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^zipStoreBase=GRADLE_USER_HOME$/;"	k
zipStorePath	gradle/wrapper/gradle-wrapper.properties	/^zipStorePath=wrapper\/dists$/;"	k
zipStorePath	server/bin/test/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^zipStorePath=wrapper\/dists$/;"	k
zipStorePath	server/src/test/resources/additionalWorkspace/gradle/wrapper/gradle-wrapper.properties	/^zipStorePath=wrapper\/dists$/;"	k
