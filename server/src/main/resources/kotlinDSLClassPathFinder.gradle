import org.gradle.kotlin.dsl.accessors.ProjectAccessorsClassPathGenerator
import org.gradle.kotlin.dsl.accessors.PluginAccessorClassPathGenerator
import org.gradle.internal.classpath.ClassPath

allprojects { project ->
    task kotlinLSPKotlinDSLDeps {
        // def pattern = ~/^(?:gradle-(?:kotlin-dsl|base-services|plugins|core)|kotlin-(?:compiler|stdlib)).*\.jar/
        def pattern = ~/^.*\.jar/
        doLast {
            (fileTree("$gradle.gradleHomeDir/lib") + fileTree("$gradle.gradleUserHomeDir/caches/$gradle.gradleVersion/generated-gradle-jars") + fileTree("$gradle.gradleUserHomeDir/caches/modules-2/files-2.1"))
                .findAll { it.name =~ pattern }
                .forEach { System.out.println "kotlin-lsp-gradle $it" }

            // List dynamically generated Kotlin DSL accessors (e.g. the 'compile' configuration method)
            gradle.services.get(ProjectAccessorsClassPathGenerator.class).projectAccessorsClassPath(project, ClassPath.EMPTY)
                .bin
                .asFiles
                .forEach { System.out.println "kotlin-lsp-gradle $it" }

            gradle.services.get(PluginAccessorClassPathGenerator.class).pluginSpecBuildersClassPath(project)
                .bin
                .asFiles
                .forEach { System.out.println "kotlin-lsp-gradle $it" }
        }
    }
}
